{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/twentyfifteen/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/css/highlight.css","path":"css/highlight.css","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/images/alipay-qr.png","path":"images/alipay-qr.png","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/twentyfifteen/source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/images/avatar-small.png","path":"images/avatar-small.png","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/images/loading.png","path":"images/loading.png","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/images/wechat-qr.png","path":"images/wechat-qr.png","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/images/wechat.png","path":"images/wechat.png","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/js/jquery-3.1.1.min.js","path":"js/jquery-3.1.1.min.js","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/css/font-awesome/css/font-awesome.css","path":"css/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/css/font-awesome/css/font-awesome.min.css","path":"css/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/css/font-awesome/fonts/FontAwesome.otf","path":"css/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/css/font-awesome/fonts/fontawesome-webfont.eot","path":"css/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/css/font-awesome/fonts/fontawesome-webfont.ttf","path":"css/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/css/font-awesome/fonts/fontawesome-webfont.svg","path":"css/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/css/font-awesome/fonts/fontawesome-webfont.woff","path":"css/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/twentyfifteen/source/css/font-awesome/fonts/fontawesome-webfont.woff2","path":"css/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":499162500000},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":499162500000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":499162500000},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":499162500000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":499162500000},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":499162500000},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":499162500000},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":499162500000},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":499162500000},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":499162500000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":499162500000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":499162500000},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":499162500000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":499162500000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":499162500000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":499162500000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":499162500000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":499162500000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":499162500000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":499162500000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":499162500000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":499162500000},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":499162500000},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":499162500000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":499162500000},{"_id":"source/_posts/hello-world.md","hash":"544222810daf140665e653400f1995b05fa59c01","modified":1635353210807},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":499162500000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":499162500000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":499162500000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":499162500000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":499162500000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":499162500000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":499162500000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":499162500000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":499162500000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":499162500000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":499162500000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":499162500000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":499162500000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":499162500000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":499162500000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":499162500000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":499162500000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":499162500000},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":499162500000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":499162500000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":499162500000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":499162500000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":499162500000},{"_id":"themes/twentyfifteen/LICENSE","hash":"504eba318dd7b4c26c017ebee06ced875ac5efe1","modified":1635341622441},{"_id":"themes/twentyfifteen/_config.yml","hash":"d7921c12c31d09d717bb63f80fd309d74561bc56","modified":1635342125491},{"_id":"themes/twentyfifteen/languages/ar-sa.yml","hash":"0445401fbdcff65ff0c0c73c6191d42784365144","modified":1635341622444},{"_id":"themes/twentyfifteen/languages/default.yml","hash":"77b6ac0ee7c806f3422e3da45f01eed2280dddaa","modified":1635341622445},{"_id":"themes/twentyfifteen/languages/zh-CN.yml","hash":"559fac63a5517157a820361a99c6094c8ec37e61","modified":1635341622446},{"_id":"themes/twentyfifteen/languages/zh-TW.yml","hash":"d598be3880753c07ca634f1d6a9de97f2b80d7e8","modified":1635341622447},{"_id":"themes/twentyfifteen/layout/archive.ejs","hash":"b940ca50ff12772a1d0844779cf749b7041082a6","modified":1635341622480},{"_id":"themes/twentyfifteen/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1635341622481},{"_id":"themes/twentyfifteen/layout/layout.ejs","hash":"b6faec54456e429503bc098db2d0f2337131854c","modified":1635355825758},{"_id":"themes/twentyfifteen/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1635341622482},{"_id":"themes/twentyfifteen/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1635341622483},{"_id":"themes/twentyfifteen/source/favicon.ico","hash":"a0065c44244094eb9f3831159b9df3cc5e413be7","modified":1635341622515},{"_id":"themes/twentyfifteen/layout/_partial/after-footer.ejs","hash":"772c75f961506ca7df78bf387f5e497736e7a78d","modified":1635341622448},{"_id":"themes/twentyfifteen/layout/_partial/archive-post.ejs","hash":"c8e9ef411d5f174de7ef70d9937a6f8afcdf0f46","modified":1635341622453},{"_id":"themes/twentyfifteen/layout/_partial/archive.ejs","hash":"95fbbe162f5c86247db3bb2a879cffff8cc80dc9","modified":1635357026051},{"_id":"themes/twentyfifteen/layout/_partial/article-comments.ejs","hash":"6506846133d142ac4023c9d058595326e555d99b","modified":1635341622453},{"_id":"themes/twentyfifteen/layout/_partial/article-excerpt.ejs","hash":"1ed0e7436b3eef776e6c67555c58859af29795a1","modified":1635341622454},{"_id":"themes/twentyfifteen/layout/_partial/article-footer.ejs","hash":"79d0e172ff5fa34e0085c99c25124c2b51d1184f","modified":1635341622455},{"_id":"themes/twentyfifteen/layout/_partial/article.ejs","hash":"844e35b2e4f81bf3664273219e557591c8181096","modified":1635352082460},{"_id":"themes/twentyfifteen/layout/_partial/footer.ejs","hash":"d6ab2bf5ede433a49be1170cfe4043e43e802e65","modified":1635341622468},{"_id":"themes/twentyfifteen/layout/_partial/gallery.ejs","hash":"2b74cf233c432b6a375238c65bbe133e4ed5c877","modified":1635341622469},{"_id":"themes/twentyfifteen/layout/_partial/head.ejs","hash":"0de69a270eec0ec15619af843305a50bb9bb9308","modified":1635341622469},{"_id":"themes/twentyfifteen/layout/_partial/infinite-footer.ejs","hash":"c0df2ba57f6edcb2ec163cb483296eaceaf68212","modified":1635341622472},{"_id":"themes/twentyfifteen/layout/_partial/pagination.ejs","hash":"16d9ee7fb5c0076a884b1b99ce2971d7b8d6b019","modified":1635341622473},{"_id":"themes/twentyfifteen/layout/_partial/sidebar.ejs","hash":"24fb4fa8693339f7fe4b5bad4c3c6d62219c1ab6","modified":1635341622474},{"_id":"themes/twentyfifteen/layout/_widget/archives.ejs","hash":"a4a163d8e1accb6dcfe641586070932dee9d0fe9","modified":1635341622475},{"_id":"themes/twentyfifteen/layout/_widget/category.ejs","hash":"5ff7cb7a98c9a255caae730aa5141bbe74d2c2a0","modified":1635341622476},{"_id":"themes/twentyfifteen/layout/_widget/recent_posts.ejs","hash":"2880cb87269599b44745b8cd458da1203ac06274","modified":1635341622477},{"_id":"themes/twentyfifteen/layout/_widget/search.ejs","hash":"ecf28426de5e789524b06ccf60c6f2fff9044df4","modified":1635341622477},{"_id":"themes/twentyfifteen/layout/_widget/social_links.ejs","hash":"d47b3f0b5cfcbdae5eede26b2d2064937a7c6c62","modified":1635341622478},{"_id":"themes/twentyfifteen/layout/_widget/tagcloud.ejs","hash":"c3880f8f4ed3c48622f2ac4e012a771c79b033a8","modified":1635341622479},{"_id":"themes/twentyfifteen/source/images/alipay.png","hash":"b3f9db844b1e522fc55125302f2979f50a6d0529","modified":1635341622521},{"_id":"themes/twentyfifteen/source/images/avatar-small.png","hash":"c0cd1228612d07733161ff98c9f25990df54bc32","modified":1635341622522},{"_id":"themes/twentyfifteen/source/images/loading.png","hash":"05cb3c3a2a35b5eb8447efb86ffb0ba0fa90a70a","modified":1635341622530},{"_id":"themes/twentyfifteen/source/images/wechat.png","hash":"8de97bf5bb3f3a0845e02172f79d6bba2fb6bb3b","modified":1635341622535},{"_id":"themes/twentyfifteen/source/css/highlight.css","hash":"28362c8e3623458b56cecd7e5301adba1d50f4a0","modified":1635341622512},{"_id":"themes/twentyfifteen/source/css/style.css","hash":"86a2740a2c850a741907fbf786b65afad94fb1b0","modified":1635358136180},{"_id":"themes/twentyfifteen/layout/_partial/analytics/addthis.ejs","hash":"d222c3a1ab80c535b69438e8cc5de3b6210f13cd","modified":1635341622448},{"_id":"themes/twentyfifteen/layout/_partial/analytics/baidu.ejs","hash":"29d3d6ad382818586e39f24587abfad2820af382","modified":1635341622449},{"_id":"themes/twentyfifteen/layout/_partial/analytics/google.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1635341622449},{"_id":"themes/twentyfifteen/layout/_partial/analytics/leancloud.ejs","hash":"8345959552cb34ab3da80866ebd5dc8998508fd8","modified":1635341622451},{"_id":"themes/twentyfifteen/layout/_partial/comments/changyan.ejs","hash":"f4cd3a7e17c43eea48581c553a27a567c5571e32","modified":1635341622456},{"_id":"themes/twentyfifteen/layout/_partial/comments/disqus.ejs","hash":"3dc63f886092a41394faef97f7c8b08c89737f95","modified":1635341622457},{"_id":"themes/twentyfifteen/layout/_partial/comments/duoshuo.ejs","hash":"255da3aa2fbc5f68b5cd327f5451e2c6f72fe3a6","modified":1635341622458},{"_id":"themes/twentyfifteen/layout/_partial/components/back-top.ejs","hash":"7a6f39843ae9625630846121daf4b699ca07942f","modified":1635341622460},{"_id":"themes/twentyfifteen/layout/_partial/components/category.ejs","hash":"b0998dfdfd6f7a3fd34abe9ebad38c677f09b026","modified":1635341622461},{"_id":"themes/twentyfifteen/layout/_partial/components/date.ejs","hash":"d5fc42640014c5cd3d848bcfa67bc9756ce98e5b","modified":1635341622462},{"_id":"themes/twentyfifteen/layout/_partial/components/donation.ejs","hash":"d27dcfe6955843c12fa5b65bb3d74da5fe789434","modified":1635341622463},{"_id":"themes/twentyfifteen/layout/_partial/components/gallery.ejs","hash":"2b74cf233c432b6a375238c65bbe133e4ed5c877","modified":1635341622464},{"_id":"themes/twentyfifteen/layout/_partial/components/tag.ejs","hash":"8fcec19a060e852453b40b71a7801818b94a37dd","modified":1635341622465},{"_id":"themes/twentyfifteen/layout/_partial/components/title.ejs","hash":"ba6cc409306ca6d99820f1e2e09cab43bf541cc1","modified":1635341622466},{"_id":"themes/twentyfifteen/layout/_partial/components/visitor.ejs","hash":"9e5c0cb0aa21bc55594a810c0177b102e785b564","modified":1635341622467},{"_id":"themes/twentyfifteen/layout/_partial/helper/search.ejs","hash":"21ae0b0c560cd883010648423029ab90c109dd28","modified":1635341622471},{"_id":"themes/twentyfifteen/README.md","hash":"0daa6714103c4367be0e8ce9f53af14d11bd33e5","modified":1635341622442},{"_id":"themes/twentyfifteen/source/css/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1635341622486},{"_id":"themes/twentyfifteen/source/css/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1635341622488},{"_id":"themes/twentyfifteen/source/css/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1635341622510},{"_id":"themes/twentyfifteen/source/css/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1635341622512},{"_id":"themes/twentyfifteen/source/js/main.js","hash":"fb1b49519ffdfce3d3689d274c2c056fcb33d5b5","modified":1635341622538},{"_id":"themes/twentyfifteen/source/images/alipay-qr.png","hash":"f495757e8c9582496ed9338f76cb638157fba0a8","modified":1635341622519},{"_id":"themes/twentyfifteen/source/images/wechat-qr.png","hash":"463d7075967ebfaee1fb3d8294e5c1a8edaa40e7","modified":1635341622534},{"_id":"themes/twentyfifteen/source/css/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1635341622492},{"_id":"themes/twentyfifteen/source/css/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1635341622496},{"_id":"themes/twentyfifteen/source/css/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1635341622508},{"_id":"themes/twentyfifteen/source/js/jquery-3.1.1.min.js","hash":"042dd055cd289215835a58507c9531f808e1648a","modified":1635341622537},{"_id":"themes/twentyfifteen/source/css/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1635341622503},{"_id":"themes/twentyfifteen/source/images/avatar.png","hash":"e2912462d411d9af482eb68634f5d064e4a00257","modified":1635341622529},{"_id":"source/_posts/JavaScript实现数据结构的栈、队列和双向链表.assets/image-20201221175938318.png","hash":"b3b4a68a3fb5e287ce809147051749a2aaf11a5e","modified":1608544778327},{"_id":"source/_posts/JavaScript实现数据结构的栈、队列和双向链表.assets/image-20201221191959448.png","hash":"b3b4a68a3fb5e287ce809147051749a2aaf11a5e","modified":1608549599459},{"_id":"source/_posts/Chrome浏览器优秀拓展程序推荐.md","hash":"a6b81034fd5d4811cf327ca8ae423b4d4606b4f9","modified":1635353016061},{"_id":"source/_posts/Express框架中请求内的错误处理.md","hash":"8482ae99d9d95ef77f0bf31a81c6dca089d9cc08","modified":1635352951374},{"_id":"source/_posts/JavaScript实现数据结构的栈、队列和双向链表.md","hash":"aa9a1014c06d1e3135c7f0eb308f22a15a31aa50","modified":1635353461303},{"_id":"source/_posts/Promise的UnhandledPromiseRejectionWarning问题.md","hash":"62322445f5cf8ce5a86b135db95d9689ac93c597","modified":1635353645431},{"_id":"source/_posts/Mysql5.5版本中日期默认为CURRENT_TIMESTAMP报错.md","hash":"0d2ade486406f93614e019e1b71dd7dabf132574","modified":1635353561758},{"_id":"source/_posts/flex布局.md","hash":"26968351ab9e8655d66a988a8f075591393730a8","modified":1635353169389},{"_id":"source/_posts/iplook面试总结.md","hash":"684014771e208a6c9479105d96a4f05fdb73d71e","modified":1635353305015},{"_id":"source/_posts/js操作JSON数组.md","hash":"18a1a9182dafed419609eb112d7ae737e6535294","modified":1635353477761},{"_id":"source/_posts/python海龟画图画一个哆啦A梦.md","hash":"c8190c6aa5f2f8be50bf6385b808fe6b3e60e35b","modified":1635354094424},{"_id":"source/_posts/vue3中整合editor.md","hash":"4e21dbe3e87c706a29c190a61256b72e4b572a94","modified":1635353784836},{"_id":"source/_posts/vue中$nextTick的使用.md","hash":"bfc7dd7fee86d98e211730085a3af2b0adee8275","modified":1635353853082},{"_id":"source/_posts/仿Google Design导航栏和图片展示.md","hash":"fc64b5ceccf6d96474bc9c14a23796947db29526","modified":1635354133565},{"_id":"source/_posts/使用Hexo主题icarus的深入浅出.md","hash":"32920dfc6d441347e354b867f78c50d0a191afa5","modified":1635354142763},{"_id":"source/_posts/如何使用Cloudflare来加速我的GitHub Page.md","hash":"e5561e3b970626dc30ff168312fbca95a71d2964","modified":1635354147975},{"_id":"source/_posts/解决MySQL数据库登陆失败1045权限错误.md","hash":"46b970b84eb63a65fe06aae8811cb790bb002f4f","modified":1635354149882},{"_id":"source/about/index.md","hash":"14f55341ccba544af83e4e9a6fbcea7c3d983124","modified":1594273567400}],"Category":[{"name":"个人笔记","_id":"ckv9mzyzg00013sw25lxv3vbk"},{"name":"干货","_id":"ckv9n032e000g3sw22iojc74c"},{"name":"javascript","_id":"ckv9r7w47001x3sw26rxg62qv"}],"Data":[],"Page":[{"title":"About","copyright":false,"toc":false,"_content":"\n> ### <i class=\"iconfont icon-info-a\"></i>**基本信息**\n\n- 本站目前是基于Hexo双线部署在Github Page和Coding Page上\n- 本站主题`Young`是基于极简主题[Polarbear](https://github.com/frostfan/hexo-theme-polarbear)二改，[<i class=\"iconfont icon-global\"></i>Demo](https://d2fan.com/)|[<i class=\"iconfont icon-download\"></i>Download](https://github.com/frostfan/hexo-theme-polarbear/archive/master.zip)\n- 站点内容仅限于分享和记录个人的所见所学\n- 创作内容遵循[**CC BY-NC-SA 4.0**](http://creativecommons.org/licenses/by/4.0/)即**知识共享署名 4.0 国际许可协议**\n\n> ### <i class=\"iconfont icon-profile\"></i>**个人信息**\n\n网络用名：*`阿飞`/`adiynil`*\n\n- 软件工程掉头发专业摸鱼户专业选手\n- 精通`HTML`、`CSS`、`JS`、`C`、`C++`、`C#`、`Java`、`Python`等语言HelloWorld程序编写\n- 使用过`ASP.NET`和`JavaWeb`开发项目\n- 学过`Hadoop`正在学`Spark`的大数据入门户\n- 一定的Linux `rm -rf`经验\n- 爱好前端设计的后台开发者\n- 常年混迹于`♂酷♀安`PY交友社区\n\n目前正在学：\n\n- 移动应用（安卓）开发（课程）\n- 移动前端（HTML5）开发（课程）\n- VUE.JS前端框架（自学 进度1%）\n- SSM框架（自学 进度0%）\n\n早知道前两年就不在学校摸鱼混水了，到现在也没一项技术是成熟而且拿得出手的。\n\n> ### <i class=\"iconfont icon-at\"></i>**社交平台**\n\n- 酷安：[@阿飞想要飞](https://www.coolapk.com/u/1303406)\n\n- GitHub：[@adiynil](https://github.com/adiynil)\n\n- Email：a#yidas.cn\n\n- Instagram：[@adiynil](https://www.instagram.com/adiynil)\n\n> ### <i class=\"iconfont icon-calendar\"></i>**博客历程**\n\n- 2020.02.01 重新拾回网站搭建技能，搭建了博客\n- 2019.12.31 在腾讯云购买了域名`yidas.cn`\n- 2019.11.27 在腾讯云购买了域名`adiy.top`\n- 2013-2014年间 混迹于wordpress主题圈子，汉化和二改主题\n","source":"about/index.md","raw":"---\ntitle: About\ncopyright: false\ntoc: false\n---\n\n> ### <i class=\"iconfont icon-info-a\"></i>**基本信息**\n\n- 本站目前是基于Hexo双线部署在Github Page和Coding Page上\n- 本站主题`Young`是基于极简主题[Polarbear](https://github.com/frostfan/hexo-theme-polarbear)二改，[<i class=\"iconfont icon-global\"></i>Demo](https://d2fan.com/)|[<i class=\"iconfont icon-download\"></i>Download](https://github.com/frostfan/hexo-theme-polarbear/archive/master.zip)\n- 站点内容仅限于分享和记录个人的所见所学\n- 创作内容遵循[**CC BY-NC-SA 4.0**](http://creativecommons.org/licenses/by/4.0/)即**知识共享署名 4.0 国际许可协议**\n\n> ### <i class=\"iconfont icon-profile\"></i>**个人信息**\n\n网络用名：*`阿飞`/`adiynil`*\n\n- 软件工程掉头发专业摸鱼户专业选手\n- 精通`HTML`、`CSS`、`JS`、`C`、`C++`、`C#`、`Java`、`Python`等语言HelloWorld程序编写\n- 使用过`ASP.NET`和`JavaWeb`开发项目\n- 学过`Hadoop`正在学`Spark`的大数据入门户\n- 一定的Linux `rm -rf`经验\n- 爱好前端设计的后台开发者\n- 常年混迹于`♂酷♀安`PY交友社区\n\n目前正在学：\n\n- 移动应用（安卓）开发（课程）\n- 移动前端（HTML5）开发（课程）\n- VUE.JS前端框架（自学 进度1%）\n- SSM框架（自学 进度0%）\n\n早知道前两年就不在学校摸鱼混水了，到现在也没一项技术是成熟而且拿得出手的。\n\n> ### <i class=\"iconfont icon-at\"></i>**社交平台**\n\n- 酷安：[@阿飞想要飞](https://www.coolapk.com/u/1303406)\n\n- GitHub：[@adiynil](https://github.com/adiynil)\n\n- Email：a#yidas.cn\n\n- Instagram：[@adiynil](https://www.instagram.com/adiynil)\n\n> ### <i class=\"iconfont icon-calendar\"></i>**博客历程**\n\n- 2020.02.01 重新拾回网站搭建技能，搭建了博客\n- 2019.12.31 在腾讯云购买了域名`yidas.cn`\n- 2019.11.27 在腾讯云购买了域名`adiy.top`\n- 2013-2014年间 混迹于wordpress主题圈子，汉化和二改主题\n","date":"2021-04-08T07:08:51.526Z","updated":"2020-07-09T05:46:07.400Z","path":"about/index.html","_id":"ckv9n24fj001m3sw25aqdey4t","comments":1,"layout":"page","content":"<blockquote>\n<h3 id=\"基本信息\"><a href=\"#基本信息\" class=\"headerlink\" title=\"基本信息\"></a><i class=\"iconfont icon-info-a\"></i><strong>基本信息</strong></h3></blockquote>\n<ul>\n<li>本站目前是基于Hexo双线部署在Github Page和Coding Page上</li>\n<li>本站主题<code>Young</code>是基于极简主题<a href=\"https://github.com/frostfan/hexo-theme-polarbear\">Polarbear</a>二改，<a href=\"https://d2fan.com/\"><i class=\"iconfont icon-global\"></i>Demo</a>|<a href=\"https://github.com/frostfan/hexo-theme-polarbear/archive/master.zip\"><i class=\"iconfont icon-download\"></i>Download</a></li>\n<li>站点内容仅限于分享和记录个人的所见所学</li>\n<li>创作内容遵循<a href=\"http://creativecommons.org/licenses/by/4.0/\"><strong>CC BY-NC-SA 4.0</strong></a>即<strong>知识共享署名 4.0 国际许可协议</strong></li>\n</ul>\n<blockquote>\n<h3 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a><i class=\"iconfont icon-profile\"></i><strong>个人信息</strong></h3></blockquote>\n<p>网络用名：*<code>阿飞</code>/<code>adiynil</code>*</p>\n<ul>\n<li>软件工程掉头发专业摸鱼户专业选手</li>\n<li>精通<code>HTML</code>、<code>CSS</code>、<code>JS</code>、<code>C</code>、<code>C++</code>、<code>C#</code>、<code>Java</code>、<code>Python</code>等语言HelloWorld程序编写</li>\n<li>使用过<code>ASP.NET</code>和<code>JavaWeb</code>开发项目</li>\n<li>学过<code>Hadoop</code>正在学<code>Spark</code>的大数据入门户</li>\n<li>一定的Linux <code>rm -rf</code>经验</li>\n<li>爱好前端设计的后台开发者</li>\n<li>常年混迹于<code>♂酷♀安</code>PY交友社区</li>\n</ul>\n<p>目前正在学：</p>\n<ul>\n<li>移动应用（安卓）开发（课程）</li>\n<li>移动前端（HTML5）开发（课程）</li>\n<li>VUE.JS前端框架（自学 进度1%）</li>\n<li>SSM框架（自学 进度0%）</li>\n</ul>\n<p>早知道前两年就不在学校摸鱼混水了，到现在也没一项技术是成熟而且拿得出手的。</p>\n<blockquote>\n<h3 id=\"社交平台\"><a href=\"#社交平台\" class=\"headerlink\" title=\"社交平台\"></a><i class=\"iconfont icon-at\"></i><strong>社交平台</strong></h3></blockquote>\n<ul>\n<li><p>酷安：<a href=\"https://www.coolapk.com/u/1303406\">@阿飞想要飞</a></p>\n</li>\n<li><p>GitHub：<a href=\"https://github.com/adiynil\">@adiynil</a></p>\n</li>\n<li><p>Email：a#yidas.cn</p>\n</li>\n<li><p>Instagram：<a href=\"https://www.instagram.com/adiynil\">@adiynil</a></p>\n</li>\n</ul>\n<blockquote>\n<h3 id=\"博客历程\"><a href=\"#博客历程\" class=\"headerlink\" title=\"博客历程\"></a><i class=\"iconfont icon-calendar\"></i><strong>博客历程</strong></h3></blockquote>\n<ul>\n<li>2020.02.01 重新拾回网站搭建技能，搭建了博客</li>\n<li>2019.12.31 在腾讯云购买了域名<code>yidas.cn</code></li>\n<li>2019.11.27 在腾讯云购买了域名<code>adiy.top</code></li>\n<li>2013-2014年间 混迹于wordpress主题圈子，汉化和二改主题</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<h3 id=\"基本信息\"><a href=\"#基本信息\" class=\"headerlink\" title=\"基本信息\"></a><i class=\"iconfont icon-info-a\"></i><strong>基本信息</strong></h3></blockquote>\n<ul>\n<li>本站目前是基于Hexo双线部署在Github Page和Coding Page上</li>\n<li>本站主题<code>Young</code>是基于极简主题<a href=\"https://github.com/frostfan/hexo-theme-polarbear\">Polarbear</a>二改，<a href=\"https://d2fan.com/\"><i class=\"iconfont icon-global\"></i>Demo</a>|<a href=\"https://github.com/frostfan/hexo-theme-polarbear/archive/master.zip\"><i class=\"iconfont icon-download\"></i>Download</a></li>\n<li>站点内容仅限于分享和记录个人的所见所学</li>\n<li>创作内容遵循<a href=\"http://creativecommons.org/licenses/by/4.0/\"><strong>CC BY-NC-SA 4.0</strong></a>即<strong>知识共享署名 4.0 国际许可协议</strong></li>\n</ul>\n<blockquote>\n<h3 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a><i class=\"iconfont icon-profile\"></i><strong>个人信息</strong></h3></blockquote>\n<p>网络用名：*<code>阿飞</code>/<code>adiynil</code>*</p>\n<ul>\n<li>软件工程掉头发专业摸鱼户专业选手</li>\n<li>精通<code>HTML</code>、<code>CSS</code>、<code>JS</code>、<code>C</code>、<code>C++</code>、<code>C#</code>、<code>Java</code>、<code>Python</code>等语言HelloWorld程序编写</li>\n<li>使用过<code>ASP.NET</code>和<code>JavaWeb</code>开发项目</li>\n<li>学过<code>Hadoop</code>正在学<code>Spark</code>的大数据入门户</li>\n<li>一定的Linux <code>rm -rf</code>经验</li>\n<li>爱好前端设计的后台开发者</li>\n<li>常年混迹于<code>♂酷♀安</code>PY交友社区</li>\n</ul>\n<p>目前正在学：</p>\n<ul>\n<li>移动应用（安卓）开发（课程）</li>\n<li>移动前端（HTML5）开发（课程）</li>\n<li>VUE.JS前端框架（自学 进度1%）</li>\n<li>SSM框架（自学 进度0%）</li>\n</ul>\n<p>早知道前两年就不在学校摸鱼混水了，到现在也没一项技术是成熟而且拿得出手的。</p>\n<blockquote>\n<h3 id=\"社交平台\"><a href=\"#社交平台\" class=\"headerlink\" title=\"社交平台\"></a><i class=\"iconfont icon-at\"></i><strong>社交平台</strong></h3></blockquote>\n<ul>\n<li><p>酷安：<a href=\"https://www.coolapk.com/u/1303406\">@阿飞想要飞</a></p>\n</li>\n<li><p>GitHub：<a href=\"https://github.com/adiynil\">@adiynil</a></p>\n</li>\n<li><p>Email：a#yidas.cn</p>\n</li>\n<li><p>Instagram：<a href=\"https://www.instagram.com/adiynil\">@adiynil</a></p>\n</li>\n</ul>\n<blockquote>\n<h3 id=\"博客历程\"><a href=\"#博客历程\" class=\"headerlink\" title=\"博客历程\"></a><i class=\"iconfont icon-calendar\"></i><strong>博客历程</strong></h3></blockquote>\n<ul>\n<li>2020.02.01 重新拾回网站搭建技能，搭建了博客</li>\n<li>2019.12.31 在腾讯云购买了域名<code>yidas.cn</code></li>\n<li>2019.11.27 在腾讯云购买了域名<code>adiy.top</code></li>\n<li>2013-2014年间 混迹于wordpress主题圈子，汉化和二改主题</li>\n</ul>\n"}],"Post":[{"title":"Hello World","date":"2021-10-27T05:23:00.000Z","_content":"\n![](https://hc-jy-oss.oss-cn-shenzhen.aliyuncs.com/jyj-portal-banner/1634885321814.png)\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!--more-->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2021-10-27 13:23\n---\n\n![](https://hc-jy-oss.oss-cn-shenzhen.aliyuncs.com/jyj-portal-banner/1634885321814.png)\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!--more-->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2021-10-27T16:46:50.807Z","_id":"ckv9jz2ig0000pww29w1o3t3u","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://hc-jy-oss.oss-cn-shenzhen.aliyuncs.com/jyj-portal-banner/1634885321814.png\"></p>\n<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<span id=\"more\"></span>\n\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://hc-jy-oss.oss-cn-shenzhen.aliyuncs.com/jyj-portal-banner/1634885321814.png\"></p>\n<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>","more":"<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>"},{"title":"仿Google Design的导航栏和卡片设计","date":"2019-11-13T16:00:00.000Z","_content":"\n纯CSS仿制[Google Design](https://design.google/library/)的导航栏和卡片信息。\n\n<!-- more -->\n\n> 由于要设计一个网页作为期末作业，所以我简单仿了一个Google Design的导航栏和卡片信息\n\n前后导航栏对比：\n\n![Google Design](https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573738565037-gdnavbar.png)\n\n![My design](https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573738605580-mydsnavbar.png)\n\n----\n\n## 导航栏HTML和CSS\n\n- HTML\n\n```html\n<div class=\"nav\">\n\t\t\t<ul>\n\t\t\t\t<div class=\"logo\">\n\t\t\t\t\t<img src=\"img/afeilogo.png\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"left\">\n\t\t\t\t\t<li><a class=\"active\" href=\"#home\">主页</a></li>\n\t\t\t\t\t<li><a href=\"#news\">新闻</a></li>\n\t\t\t\t\t<li><a href=\"#contact\">联系</a></li>\n\t\t\t\t\t<li><a href=\"#about\">关于</a></li>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"right\">\n\t\t\t\t\t<li><a href=\"#contact\"><span class=\"glyphicon glyphicon-user\"></span>&nbsp;登录</a></li>\n\t\t\t\t</div>\n\t\t\t</ul>\n\t\t</div>\n```\n\n- CSS\n\n```css\n.nav ul {\n\t\t\tz-index: 999;\n\t\t    list-style-type: none;\n\t\t    margin: 0;\n\t\t    padding: 0;\n\t\t    overflow: hidden;\n\t\t    background-color: #FFFFFF;\n\t\t    position: fixed;\n\t\t    top: 0;\n\t\t    width: 100%;\n\t\t\tbox-shadow:0px 0px 4px #aaaaaa;\n\t\t}\n\t\t\n\t\t.nav  ul .left li{\n\t\t    float: left;\n\t\t}\n\t\t.nav  ul .right li{\n\t\t    float: right;\n\t\t}\n\t\t.nav  ul li a {\n\t\t\tmargin-left: 5px;\n\t\t\tmargin-right: 5px;\n\t\t    display: block;\n\t\t    color: gray;\n\t\t    text-align: center;\n\t\t    padding: 16px 18px;\n\t\t    text-decoration: none;\n\t\t}\n\t\t\n\t\t.nav  ul .left li a:hover:not(.active) {\n\t\t    border-bottom: 4px lightgray solid;\n\t\t}\n\t\t\n\t\t.nav  ul .right li a:hover:not(.active) {\n\t\t    color: #000000;\n\t\t}\n\t\t\n\t\t.nav  ul .left li .active {\n\t\t\tborder-bottom: 4px blue solid;\n\t\t    color: black;\n\t\t\tfont-weight: bold;\n\t\t}\n               .logo {\n\t\t\tmargin-top: 1px;\n\t\t\tmargin-left: 40px;\n\t\t\t\n\t\t\tfloat: left;\n\t\t\twidth: 250px;\n\t\t\theight: inherit;\n\t\t}\n\t\t.logo img {\n\t\t\twidth: 100%;\n\t\t}\n\t\t\n\t\t.content {\n\t\t\tdisplay: block;\n\t\t\tpadding: 0px;\n\t\t\tpadding-left: 40px;\n\t\t\tpadding-right: 40px;\n\t\t\tmargin-top: 70px;\n\t\t\tbackground-color: #FFFFFF;\n\t\t}\n```\n\n----\n\n卡片信息前后对比：\n\n![Google Design](https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573739071036-ss.png)\n\n![My design](https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573739167792-dd.png)\n\n## 卡片信息HTML和CSS\n\n- HTML\n\n```html\n<div class=\"container\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t<div class=\"content\">\n\t\t\t\t\t\t<div class=\"breadcrumbs\">\n\t\t\t\t\t\t\t<label><span class=\"glyphicon glyphicon-home\"></span>&nbsp;&nbsp;首页&nbsp;></label>\n\t\t\t\t\t\t\t<label id=\"leb\" class=\"\">当前&nbsp;></label>\n\t\t\t\t\t\t\t<label id=\"leb\" class=\"\">当前&nbsp;></label>\n\t\t\t\t\t\t\t<label id=\"leb\" class=\"active\">当前</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"big\">\n\t\t\t\t\t\t\t<img src=\"img/test3.jpg\">\n\t\t\t\t\t\t\t<div class=\"title\">首页超大图的标准长两行的标题，最多只能显示两行如果两行就会是这个亚子的</div>\n\t\t\t\t\t\t\t<div class=\"desc\">如果是中文呢如果是中文呢如果是中文呢如果是中文呢，谁知道呢，中文字体不太好看的亚子啊\n\t\t\t\t\t\t\t那可怎么办呢，真难搞。</div>\n\t\t\t\t\t\t\t<div class=\"link\"><a href=\"#\">继续阅读...</a></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div><!-- content end -->\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t<div class=\"content-a\">\n\t\t\t\t\t\t<div class=\"col-4\">\n\t\t\t\t\t\t\t<div class=\"style-a\">\n\t\t\t\t\t\t\t\t<div class=\"thumbnail\">\n\t\t\t\t\t\t\t\t\t<a href=\"\"><img src=\"img/test.jpg\" /></a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"content\">\n\t\t\t\t\t\t\t\t\t<div class=\"headline\">\n\t\t\t\t\t\t\t\t\t\t<label id=\"thislb\"></label>这是一条标准的中文标题，也许会很长呢\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"desc-content\">\n\t\t\t\t\t\t\t\t\t\t如果是中文呢如果是中文呢如果是中文呢如果是中文呢，谁知道呢，中文字体不太好看的亚子啊\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"info\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"left\"><a href=\"#\"><img src=\"img/avatar.jpg\" />\n\t\t\t\t\t\t\t\t\t\t<span>Afei</span></a></div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"right\"><a href=\"#\">#人文#</a></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-4\">\n\t\t\t\t\t\t\t<div class=\"style-a\">\n\t\t\t\t\t\t\t\t<div class=\"thumbnail\">\n\t\t\t\t\t\t\t\t\t<a href=\"\"><img src=\"img/test2.jpg\" /></a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"content\">\n\t\t\t\t\t\t\t\t\t<div class=\"headline\">\n\t\t\t\t\t\t\t\t\t\tTitle of a longer featured blog post\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"desc-content\">\n\t\t\t\t\t\t\t\t\t\tMultiple lines of text that form the lede, informing new readers quickly and efficiently about what's most\n\t\t\t\t\t\t\t\t\t\tinteresting in this post's contents.\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"info\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"left\"><a href=\"#\"><img src=\"img/avatar.jpg\" />\n\t\t\t\t\t\t\t\t\t\t<span>Afei</span></a></div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"right\"><a href=\"#\">#Views#</a></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-4\">\n\t\t\t\t\t\t\t<div class=\"style-a\">\n\t\t\t\t\t\t\t\t<div class=\"thumbnail\">\n\t\t\t\t\t\t\t\t\t<a href=\"\"><img src=\"img/test2.jpg\" /></a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"content\">\n\t\t\t\t\t\t\t\t\t<!-- headline或者desc-content -->\n\t\t\t\t\t\t\t\t\t<div class=\"info\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"left\"><a href=\"#\"><img src=\"img/avatar.jpg\" />\n\t\t\t\t\t\t\t\t\t\t<span>Afei</span></a></div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"right\"><a href=\"#\">#Views#</a></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div><!-- row end -->\n\t\t</div><!-- container end -->\n```\n\n- CSS\n\n```css\n.content-a {\n\t\tdisplay: block;\n\t\tpadding: 0px;\n\t\tpadding-left: 20px;\n\t\tpadding-right: 20px;\n\t\tmargin-bottom: 20px;\n\t\tmargin-top: 10px;\n\t\tbackground-color: #FFFFFF;\n\t}\n\t\n\t.style-a {\n\t\twidth: 100%;\n\t\theight: auto;\n\t\tpadding: 20px;\n\t\toverflow: hidden;\n\t\tmax-height: 500px;\n\t\tborder-bottom: 3px white solid;\n\t\tborder-bottom-right-radius: 3px;\n\t\tborder-bottom-left-radius: 3px;\n\t}\n\t.style-a:hover {\n\t\tbox-shadow:0px 0px 4px #aaaaaa;\n\t\tborder-bottom: 3px blue solid;\n\t\t\n\t}\n\t.style-a .thumbnail {\n\t\twidth: 100%;\n\t\tmax-height: 300px;\n\t\toverflow: hidden;\n\t}\n\t.style-a .thumbnail img {\n\t\twidth: 100%;\n\t}\n\t.style-a .content {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\t.style-a .content .headline {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tmargin-top: 15px;\n\t\tdisplay: -webkit-box;\n\t\t-webkit-line-clamp: 2;\n\t\t-webkit-box-orient: vertical;\n\t\toverflow: hidden;\n\t\tfont-size: 16px;\n\t\tfont-weight: bold;\n\t}\n\t.style-a .content .desc-content {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tmargin-top: 10px;\n\t\tdisplay: -webkit-box;\n\t\t-webkit-line-clamp: 3;\n\t\t-webkit-box-orient: vertical;\n\t\toverflow: hidden;\n\t\tfont-size: 14px;\n\t}\n\t.style-a .content .info {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tmargin-top: 10px;\n\t\tfont-size: 12px;\n\t\tfont-weight: bold;\n\t\t\n\t}\n\t.style-a .content .info img {\n\t\theight: 20px;\n\t\tborder-radius: 50%;\n\t\tvertical-align: middle;\n\t}\n\t.style-a .content .info a {\n\t\ttext-decoration: none;\n\t\tcolor: dimgray;\n\t}\n\t.style-a .content .info a:hover {\n\t\tcolor: royalblue;\n\t}\n\t\n\t.style-a .content .info .left {\n\t\tfloat: left;\n\t}\n\t.style-a .content .info .left span {\n\t\tmargin-left: 4px;\n\t}\n\t.style-a .content .info .right {\n\t\tfloat: right;\n\t}\n```","source":"_posts/仿Google Design导航栏和图片展示.md","raw":"---\ntitle: 仿Google Design的导航栏和卡片设计\ndate: 2019/11/14\ncategory: 个人笔记\ntags: [Google,CSS,HTML]\n---\n\n纯CSS仿制[Google Design](https://design.google/library/)的导航栏和卡片信息。\n\n<!-- more -->\n\n> 由于要设计一个网页作为期末作业，所以我简单仿了一个Google Design的导航栏和卡片信息\n\n前后导航栏对比：\n\n![Google Design](https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573738565037-gdnavbar.png)\n\n![My design](https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573738605580-mydsnavbar.png)\n\n----\n\n## 导航栏HTML和CSS\n\n- HTML\n\n```html\n<div class=\"nav\">\n\t\t\t<ul>\n\t\t\t\t<div class=\"logo\">\n\t\t\t\t\t<img src=\"img/afeilogo.png\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"left\">\n\t\t\t\t\t<li><a class=\"active\" href=\"#home\">主页</a></li>\n\t\t\t\t\t<li><a href=\"#news\">新闻</a></li>\n\t\t\t\t\t<li><a href=\"#contact\">联系</a></li>\n\t\t\t\t\t<li><a href=\"#about\">关于</a></li>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"right\">\n\t\t\t\t\t<li><a href=\"#contact\"><span class=\"glyphicon glyphicon-user\"></span>&nbsp;登录</a></li>\n\t\t\t\t</div>\n\t\t\t</ul>\n\t\t</div>\n```\n\n- CSS\n\n```css\n.nav ul {\n\t\t\tz-index: 999;\n\t\t    list-style-type: none;\n\t\t    margin: 0;\n\t\t    padding: 0;\n\t\t    overflow: hidden;\n\t\t    background-color: #FFFFFF;\n\t\t    position: fixed;\n\t\t    top: 0;\n\t\t    width: 100%;\n\t\t\tbox-shadow:0px 0px 4px #aaaaaa;\n\t\t}\n\t\t\n\t\t.nav  ul .left li{\n\t\t    float: left;\n\t\t}\n\t\t.nav  ul .right li{\n\t\t    float: right;\n\t\t}\n\t\t.nav  ul li a {\n\t\t\tmargin-left: 5px;\n\t\t\tmargin-right: 5px;\n\t\t    display: block;\n\t\t    color: gray;\n\t\t    text-align: center;\n\t\t    padding: 16px 18px;\n\t\t    text-decoration: none;\n\t\t}\n\t\t\n\t\t.nav  ul .left li a:hover:not(.active) {\n\t\t    border-bottom: 4px lightgray solid;\n\t\t}\n\t\t\n\t\t.nav  ul .right li a:hover:not(.active) {\n\t\t    color: #000000;\n\t\t}\n\t\t\n\t\t.nav  ul .left li .active {\n\t\t\tborder-bottom: 4px blue solid;\n\t\t    color: black;\n\t\t\tfont-weight: bold;\n\t\t}\n               .logo {\n\t\t\tmargin-top: 1px;\n\t\t\tmargin-left: 40px;\n\t\t\t\n\t\t\tfloat: left;\n\t\t\twidth: 250px;\n\t\t\theight: inherit;\n\t\t}\n\t\t.logo img {\n\t\t\twidth: 100%;\n\t\t}\n\t\t\n\t\t.content {\n\t\t\tdisplay: block;\n\t\t\tpadding: 0px;\n\t\t\tpadding-left: 40px;\n\t\t\tpadding-right: 40px;\n\t\t\tmargin-top: 70px;\n\t\t\tbackground-color: #FFFFFF;\n\t\t}\n```\n\n----\n\n卡片信息前后对比：\n\n![Google Design](https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573739071036-ss.png)\n\n![My design](https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573739167792-dd.png)\n\n## 卡片信息HTML和CSS\n\n- HTML\n\n```html\n<div class=\"container\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t<div class=\"content\">\n\t\t\t\t\t\t<div class=\"breadcrumbs\">\n\t\t\t\t\t\t\t<label><span class=\"glyphicon glyphicon-home\"></span>&nbsp;&nbsp;首页&nbsp;></label>\n\t\t\t\t\t\t\t<label id=\"leb\" class=\"\">当前&nbsp;></label>\n\t\t\t\t\t\t\t<label id=\"leb\" class=\"\">当前&nbsp;></label>\n\t\t\t\t\t\t\t<label id=\"leb\" class=\"active\">当前</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"big\">\n\t\t\t\t\t\t\t<img src=\"img/test3.jpg\">\n\t\t\t\t\t\t\t<div class=\"title\">首页超大图的标准长两行的标题，最多只能显示两行如果两行就会是这个亚子的</div>\n\t\t\t\t\t\t\t<div class=\"desc\">如果是中文呢如果是中文呢如果是中文呢如果是中文呢，谁知道呢，中文字体不太好看的亚子啊\n\t\t\t\t\t\t\t那可怎么办呢，真难搞。</div>\n\t\t\t\t\t\t\t<div class=\"link\"><a href=\"#\">继续阅读...</a></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div><!-- content end -->\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t<div class=\"content-a\">\n\t\t\t\t\t\t<div class=\"col-4\">\n\t\t\t\t\t\t\t<div class=\"style-a\">\n\t\t\t\t\t\t\t\t<div class=\"thumbnail\">\n\t\t\t\t\t\t\t\t\t<a href=\"\"><img src=\"img/test.jpg\" /></a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"content\">\n\t\t\t\t\t\t\t\t\t<div class=\"headline\">\n\t\t\t\t\t\t\t\t\t\t<label id=\"thislb\"></label>这是一条标准的中文标题，也许会很长呢\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"desc-content\">\n\t\t\t\t\t\t\t\t\t\t如果是中文呢如果是中文呢如果是中文呢如果是中文呢，谁知道呢，中文字体不太好看的亚子啊\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"info\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"left\"><a href=\"#\"><img src=\"img/avatar.jpg\" />\n\t\t\t\t\t\t\t\t\t\t<span>Afei</span></a></div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"right\"><a href=\"#\">#人文#</a></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-4\">\n\t\t\t\t\t\t\t<div class=\"style-a\">\n\t\t\t\t\t\t\t\t<div class=\"thumbnail\">\n\t\t\t\t\t\t\t\t\t<a href=\"\"><img src=\"img/test2.jpg\" /></a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"content\">\n\t\t\t\t\t\t\t\t\t<div class=\"headline\">\n\t\t\t\t\t\t\t\t\t\tTitle of a longer featured blog post\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"desc-content\">\n\t\t\t\t\t\t\t\t\t\tMultiple lines of text that form the lede, informing new readers quickly and efficiently about what's most\n\t\t\t\t\t\t\t\t\t\tinteresting in this post's contents.\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"info\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"left\"><a href=\"#\"><img src=\"img/avatar.jpg\" />\n\t\t\t\t\t\t\t\t\t\t<span>Afei</span></a></div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"right\"><a href=\"#\">#Views#</a></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-4\">\n\t\t\t\t\t\t\t<div class=\"style-a\">\n\t\t\t\t\t\t\t\t<div class=\"thumbnail\">\n\t\t\t\t\t\t\t\t\t<a href=\"\"><img src=\"img/test2.jpg\" /></a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"content\">\n\t\t\t\t\t\t\t\t\t<!-- headline或者desc-content -->\n\t\t\t\t\t\t\t\t\t<div class=\"info\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"left\"><a href=\"#\"><img src=\"img/avatar.jpg\" />\n\t\t\t\t\t\t\t\t\t\t<span>Afei</span></a></div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"right\"><a href=\"#\">#Views#</a></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div><!-- row end -->\n\t\t</div><!-- container end -->\n```\n\n- CSS\n\n```css\n.content-a {\n\t\tdisplay: block;\n\t\tpadding: 0px;\n\t\tpadding-left: 20px;\n\t\tpadding-right: 20px;\n\t\tmargin-bottom: 20px;\n\t\tmargin-top: 10px;\n\t\tbackground-color: #FFFFFF;\n\t}\n\t\n\t.style-a {\n\t\twidth: 100%;\n\t\theight: auto;\n\t\tpadding: 20px;\n\t\toverflow: hidden;\n\t\tmax-height: 500px;\n\t\tborder-bottom: 3px white solid;\n\t\tborder-bottom-right-radius: 3px;\n\t\tborder-bottom-left-radius: 3px;\n\t}\n\t.style-a:hover {\n\t\tbox-shadow:0px 0px 4px #aaaaaa;\n\t\tborder-bottom: 3px blue solid;\n\t\t\n\t}\n\t.style-a .thumbnail {\n\t\twidth: 100%;\n\t\tmax-height: 300px;\n\t\toverflow: hidden;\n\t}\n\t.style-a .thumbnail img {\n\t\twidth: 100%;\n\t}\n\t.style-a .content {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\t.style-a .content .headline {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tmargin-top: 15px;\n\t\tdisplay: -webkit-box;\n\t\t-webkit-line-clamp: 2;\n\t\t-webkit-box-orient: vertical;\n\t\toverflow: hidden;\n\t\tfont-size: 16px;\n\t\tfont-weight: bold;\n\t}\n\t.style-a .content .desc-content {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tmargin-top: 10px;\n\t\tdisplay: -webkit-box;\n\t\t-webkit-line-clamp: 3;\n\t\t-webkit-box-orient: vertical;\n\t\toverflow: hidden;\n\t\tfont-size: 14px;\n\t}\n\t.style-a .content .info {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tmargin-top: 10px;\n\t\tfont-size: 12px;\n\t\tfont-weight: bold;\n\t\t\n\t}\n\t.style-a .content .info img {\n\t\theight: 20px;\n\t\tborder-radius: 50%;\n\t\tvertical-align: middle;\n\t}\n\t.style-a .content .info a {\n\t\ttext-decoration: none;\n\t\tcolor: dimgray;\n\t}\n\t.style-a .content .info a:hover {\n\t\tcolor: royalblue;\n\t}\n\t\n\t.style-a .content .info .left {\n\t\tfloat: left;\n\t}\n\t.style-a .content .info .left span {\n\t\tmargin-left: 4px;\n\t}\n\t.style-a .content .info .right {\n\t\tfloat: right;\n\t}\n```","slug":"仿Google Design导航栏和图片展示","published":1,"updated":"2021-10-27T17:02:13.565Z","_id":"ckv9mzyz200003sw28qfx5vs5","comments":1,"layout":"post","photos":[],"link":"","content":"<p>纯CSS仿制<a href=\"https://design.google/library/\">Google Design</a>的导航栏和卡片信息。</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>由于要设计一个网页作为期末作业，所以我简单仿了一个Google Design的导航栏和卡片信息</p>\n</blockquote>\n<p>前后导航栏对比：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573738565037-gdnavbar.png\" alt=\"Google Design\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573738605580-mydsnavbar.png\" alt=\"My design\"></p>\n<hr>\n<h2 id=\"导航栏HTML和CSS\"><a href=\"#导航栏HTML和CSS\" class=\"headerlink\" title=\"导航栏HTML和CSS\"></a>导航栏HTML和CSS</h2><ul>\n<li>HTML</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;logo&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/afeilogo.png&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;active&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#home&quot;</span>&gt;</span>主页<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#news&quot;</span>&gt;</span>新闻<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#contact&quot;</span>&gt;</span>联系<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#about&quot;</span>&gt;</span>关于<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#contact&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;glyphicon glyphicon-user&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"symbol\">&amp;nbsp;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>CSS</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.nav</span> <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">z-index</span>: <span class=\"number\">999</span>;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">list-style-type</span>: none;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">background-color</span>: <span class=\"number\">#FFFFFF</span>;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">box-shadow</span>:<span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">4px</span> <span class=\"number\">#aaaaaa</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.nav</span>  <span class=\"selector-tag\">ul</span> <span class=\"selector-class\">.left</span> <span class=\"selector-tag\">li</span>&#123;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.nav</span>  <span class=\"selector-tag\">ul</span> <span class=\"selector-class\">.right</span> <span class=\"selector-tag\">li</span>&#123;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">float</span>: right;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.nav</span>  <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">margin-left</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">margin-right</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">color</span>: gray;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">padding</span>: <span class=\"number\">16px</span> <span class=\"number\">18px</span>;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.nav</span>  <span class=\"selector-tag\">ul</span> <span class=\"selector-class\">.left</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span><span class=\"selector-pseudo\">:not</span>(<span class=\"selector-class\">.active</span>) &#123;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">4px</span> lightgray solid;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.nav</span>  <span class=\"selector-tag\">ul</span> <span class=\"selector-class\">.right</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span><span class=\"selector-pseudo\">:not</span>(<span class=\"selector-class\">.active</span>) &#123;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">color</span>: <span class=\"number\">#000000</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.nav</span>  <span class=\"selector-tag\">ul</span> <span class=\"selector-class\">.left</span> <span class=\"selector-tag\">li</span> <span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">border-bottom</span>: <span class=\"number\">4px</span> blue solid;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">               <span class=\"selector-class\">.logo</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">1px</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">margin-left</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">height</span>: inherit;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.logo</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">padding-left</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">padding-right</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">70px</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#FFFFFF</span>;</span><br><span class=\"line\">\t\t&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>卡片信息前后对比：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573739071036-ss.png\" alt=\"Google Design\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573739167792-dd.png\" alt=\"My design\"></p>\n<h2 id=\"卡片信息HTML和CSS\"><a href=\"#卡片信息HTML和CSS\" class=\"headerlink\" title=\"卡片信息HTML和CSS\"></a>卡片信息HTML和CSS</h2><ul>\n<li>HTML</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-12&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;breadcrumbs&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;glyphicon glyphicon-home&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"symbol\">&amp;nbsp;</span><span class=\"symbol\">&amp;nbsp;</span>首页<span class=\"symbol\">&amp;nbsp;</span>&gt;<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;leb&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>当前<span class=\"symbol\">&amp;nbsp;</span>&gt;<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;leb&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>当前<span class=\"symbol\">&amp;nbsp;</span>&gt;<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;leb&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;active&quot;</span>&gt;</span>当前<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;big&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/test3.jpg&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span>首页超大图的标准长两行的标题，最多只能显示两行如果两行就会是这个亚子的<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;desc&quot;</span>&gt;</span>如果是中文呢如果是中文呢如果是中文呢如果是中文呢，谁知道呢，中文字体不太好看的亚子啊</span><br><span class=\"line\">\t\t\t\t\t\t\t那可怎么办呢，真难搞。<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;link&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>继续阅读...<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"comment\">&lt;!-- content end --&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-12&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content-a&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-4&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;style-a&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/test.jpg&quot;</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;headline&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;thislb&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span>这是一条标准的中文标题，也许会很长呢</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;desc-content&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t如果是中文呢如果是中文呢如果是中文呢如果是中文呢，谁知道呢，中文字体不太好看的亚子啊</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;info&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/avatar.jpg&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Afei<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>#人文#<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-4&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;style-a&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/test2.jpg&quot;</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;headline&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tTitle of a longer featured blog post</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;desc-content&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tMultiple lines of text that form the lede, informing new readers quickly and efficiently about what&#x27;s most</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tinteresting in this post&#x27;s contents.</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;info&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/avatar.jpg&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Afei<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>#Views#<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-4&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;style-a&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/test2.jpg&quot;</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"comment\">&lt;!-- headline或者desc-content --&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;info&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/avatar.jpg&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Afei<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>#Views#<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"comment\">&lt;!-- row end --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"comment\">&lt;!-- container end --&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>CSS</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.content-a</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding-left</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding-right</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin-bottom</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#FFFFFF</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">height</span>: auto;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">\t\t<span class=\"attribute\">max-height</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border-bottom</span>: <span class=\"number\">3px</span> white solid;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border-bottom-right-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border-bottom-left-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">box-shadow</span>:<span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">4px</span> <span class=\"number\">#aaaaaa</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border-bottom</span>: <span class=\"number\">3px</span> blue solid;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.thumbnail</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">max-height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.thumbnail</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.headline</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">\t\t-webkit-line-clamp: <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t-webkit-box-orient: vertical;</span><br><span class=\"line\">\t\t<span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.desc-content</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">\t\t-webkit-line-clamp: <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t-webkit-box-orient: vertical;</span><br><span class=\"line\">\t\t<span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">14px</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.info</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.info</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.info</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">\t\t<span class=\"attribute\">color</span>: dimgray;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.info</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">color</span>: royalblue;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.info</span> <span class=\"selector-class\">.left</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.info</span> <span class=\"selector-class\">.left</span> <span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin-left</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.info</span> <span class=\"selector-class\">.right</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">float</span>: right;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>纯CSS仿制<a href=\"https://design.google/library/\">Google Design</a>的导航栏和卡片信息。</p>","more":"<blockquote>\n<p>由于要设计一个网页作为期末作业，所以我简单仿了一个Google Design的导航栏和卡片信息</p>\n</blockquote>\n<p>前后导航栏对比：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573738565037-gdnavbar.png\" alt=\"Google Design\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573738605580-mydsnavbar.png\" alt=\"My design\"></p>\n<hr>\n<h2 id=\"导航栏HTML和CSS\"><a href=\"#导航栏HTML和CSS\" class=\"headerlink\" title=\"导航栏HTML和CSS\"></a>导航栏HTML和CSS</h2><ul>\n<li>HTML</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;logo&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/afeilogo.png&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;active&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#home&quot;</span>&gt;</span>主页<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#news&quot;</span>&gt;</span>新闻<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#contact&quot;</span>&gt;</span>联系<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#about&quot;</span>&gt;</span>关于<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#contact&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;glyphicon glyphicon-user&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"symbol\">&amp;nbsp;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>CSS</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.nav</span> <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">z-index</span>: <span class=\"number\">999</span>;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">list-style-type</span>: none;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">background-color</span>: <span class=\"number\">#FFFFFF</span>;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">box-shadow</span>:<span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">4px</span> <span class=\"number\">#aaaaaa</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.nav</span>  <span class=\"selector-tag\">ul</span> <span class=\"selector-class\">.left</span> <span class=\"selector-tag\">li</span>&#123;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.nav</span>  <span class=\"selector-tag\">ul</span> <span class=\"selector-class\">.right</span> <span class=\"selector-tag\">li</span>&#123;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">float</span>: right;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.nav</span>  <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">margin-left</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">margin-right</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">color</span>: gray;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">padding</span>: <span class=\"number\">16px</span> <span class=\"number\">18px</span>;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.nav</span>  <span class=\"selector-tag\">ul</span> <span class=\"selector-class\">.left</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span><span class=\"selector-pseudo\">:not</span>(<span class=\"selector-class\">.active</span>) &#123;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">4px</span> lightgray solid;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.nav</span>  <span class=\"selector-tag\">ul</span> <span class=\"selector-class\">.right</span> <span class=\"selector-tag\">li</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span><span class=\"selector-pseudo\">:not</span>(<span class=\"selector-class\">.active</span>) &#123;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">color</span>: <span class=\"number\">#000000</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.nav</span>  <span class=\"selector-tag\">ul</span> <span class=\"selector-class\">.left</span> <span class=\"selector-tag\">li</span> <span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">border-bottom</span>: <span class=\"number\">4px</span> blue solid;</span><br><span class=\"line\">\t\t    <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">               <span class=\"selector-class\">.logo</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">1px</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">margin-left</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">height</span>: inherit;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.logo</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">padding-left</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">padding-right</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">70px</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#FFFFFF</span>;</span><br><span class=\"line\">\t\t&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>卡片信息前后对比：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573739071036-ss.png\" alt=\"Google Design\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/1573739167792-dd.png\" alt=\"My design\"></p>\n<h2 id=\"卡片信息HTML和CSS\"><a href=\"#卡片信息HTML和CSS\" class=\"headerlink\" title=\"卡片信息HTML和CSS\"></a>卡片信息HTML和CSS</h2><ul>\n<li>HTML</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;row&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-12&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;breadcrumbs&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;glyphicon glyphicon-home&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"symbol\">&amp;nbsp;</span><span class=\"symbol\">&amp;nbsp;</span>首页<span class=\"symbol\">&amp;nbsp;</span>&gt;<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;leb&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>当前<span class=\"symbol\">&amp;nbsp;</span>&gt;<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;leb&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>当前<span class=\"symbol\">&amp;nbsp;</span>&gt;<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;leb&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;active&quot;</span>&gt;</span>当前<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;big&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/test3.jpg&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span>首页超大图的标准长两行的标题，最多只能显示两行如果两行就会是这个亚子的<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;desc&quot;</span>&gt;</span>如果是中文呢如果是中文呢如果是中文呢如果是中文呢，谁知道呢，中文字体不太好看的亚子啊</span><br><span class=\"line\">\t\t\t\t\t\t\t那可怎么办呢，真难搞。<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;link&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>继续阅读...<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"comment\">&lt;!-- content end --&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-12&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content-a&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-4&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;style-a&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/test.jpg&quot;</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;headline&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;thislb&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span>这是一条标准的中文标题，也许会很长呢</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;desc-content&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t如果是中文呢如果是中文呢如果是中文呢如果是中文呢，谁知道呢，中文字体不太好看的亚子啊</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;info&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/avatar.jpg&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Afei<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>#人文#<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-4&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;style-a&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/test2.jpg&quot;</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;headline&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tTitle of a longer featured blog post</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;desc-content&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tMultiple lines of text that form the lede, informing new readers quickly and efficiently about what&#x27;s most</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\tinteresting in this post&#x27;s contents.</span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;info&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/avatar.jpg&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Afei<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>#Views#<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;col-4&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;style-a&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/test2.jpg&quot;</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"comment\">&lt;!-- headline或者desc-content --&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;info&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;img/avatar.jpg&quot;</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Afei<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>#Views#<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"comment\">&lt;!-- row end --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"comment\">&lt;!-- container end --&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>CSS</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.content-a</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding-left</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding-right</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin-bottom</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">background-color</span>: <span class=\"number\">#FFFFFF</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">height</span>: auto;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">\t\t<span class=\"attribute\">max-height</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border-bottom</span>: <span class=\"number\">3px</span> white solid;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border-bottom-right-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border-bottom-left-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">box-shadow</span>:<span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">4px</span> <span class=\"number\">#aaaaaa</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border-bottom</span>: <span class=\"number\">3px</span> blue solid;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.thumbnail</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">max-height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.thumbnail</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.headline</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">\t\t-webkit-line-clamp: <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t-webkit-box-orient: vertical;</span><br><span class=\"line\">\t\t<span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.desc-content</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">\t\t-webkit-line-clamp: <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t-webkit-box-orient: vertical;</span><br><span class=\"line\">\t\t<span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">14px</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.info</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.info</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.info</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">\t\t<span class=\"attribute\">color</span>: dimgray;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.info</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">color</span>: royalblue;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.info</span> <span class=\"selector-class\">.left</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.info</span> <span class=\"selector-class\">.left</span> <span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">margin-left</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-class\">.style-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.info</span> <span class=\"selector-class\">.right</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">float</span>: right;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>"},{"title":"用Python的海龟画图画一个哆啦A梦","date":"2020-02-17T16:00:00.000Z","_content":"\n一年之前学的Python，过了这么久也差不多都还给老师了。我的傻吊儿子（误）喜欢哆啦A梦，前几天花了时间专门找了很多高清的哆啦A梦的海报挂上图床，突发奇想想到用Python的turtle画图能否实现画一个哆啦A梦....\n\n<!--more-->\n\n## 前言\n----\n\n由于实在是~~年代久远~~学艺不精，学的一点Python也还给老师了，加上前些天看课程直播讲到了Python又把Python装了回来，所以就有了尝试用turtle来画一个哆啦A梦的想法，自己琢磨了一会发现就只能画个头画眼睛化胡须啥的，身体其他部分完全没有思路怎么去画，就干脆点直接冲浪搜了，没想到还真的有人画这个，既然有现成，代码也能看的懂，那就拷贝下来自己研究研究吧。\n\n## 预览\n----\n\n先上一个最终的效果图吧 ☟☟☟\n\n![turtle画图哆啦A梦](https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/doraemon/GIF.gif)\n\n## 代码\n----\n\n```python\nimport turtle as t\nt.speed(20)\nt.pensize(4)\nt.hideturtle()\nt.screensize(500, 500, bg='white')\n# 猫脸\nt.fillcolor('#00A1E8')\nt.begin_fill()\nt.circle(120)\nt.end_fill()\nt.pensize(2)\nt.fillcolor('white')\nt.begin_fill()\nt.circle(100)\nt.end_fill()\nt.pu()\nt.home()\nt.goto(0, 134)\nt.pd()\nt.pensize(2)\nt.fillcolor(\"#EA0014\")\nt.begin_fill()\nt.circle(18)\nt.end_fill()\nt.pu()\nt.goto(7, 155)\nt.pensize(1)\nt.color('white', 'white')\nt.pd()\nt.begin_fill()\nt.circle(4)\nt.end_fill()\nt.pu()\nt.goto(-30, 160)\nt.pensize(2)\nt.pd()\nt.color('black', 'white')\nt.begin_fill()\na = 0.4\nfor i in range(120):\n    if 0 <= i < 30 or 60 <= i < 90:\n        a = a+0.08\n        t.lt(3) #向左转3度\n        t.fd(a) #向前走a的步长\n    else:\n        a = a-0.08\n        t.lt(3)\n        t.fd(a)\nt.end_fill()\nt.pu()\nt.goto(30, 160)\nt.pensize(2)\nt.pd()\nt.color('black', 'white')\nt.begin_fill()\nfor i in range(120):\n    if 0 <= i < 30 or 60 <= i < 90:\n        a = a+0.08\n        t.lt(3)  # 向左转3度\n        t.fd(a)  # 向前走a的步长\n    else:\n        a = a-0.08\n        t.lt(3)\n        t.fd(a)\nt.end_fill()\nt.pu()\nt.goto(-38,190)\nt.pensize(4)\nt.pd()\nt.right(-30)\nt.forward(15)\nt.right(70)\nt.forward(15)\nt.pu()\nt.goto(15, 185)\nt.pensize(2)\nt.pd()\nt.color('black', 'black')\nt.begin_fill()\nt.circle(13)\nt.end_fill()\nt.pu()\nt.goto(13, 190)\nt.pensize(1)\nt.pd()\nt.color('white', 'white')\nt.begin_fill()\nt.circle(5)\nt.end_fill()\n \nt.pu()\nt.home()\nt.goto(0, 134)\nt.pensize(2)\nt.pencolor('black')\nt.pd()\nt.right(90)\nt.forward(40)\nt.pu()\nt.home()\nt.goto(0, 124)\nt.pensize(1)\nt.pencolor('black')\nt.pd()\nt.left(10)\nt.forward(80)\nt.pu()\nt.home()\nt.goto(0, 114)\nt.pensize(1)\nt.pencolor('black')\nt.pd()\nt.left(6)\nt.forward(80)\nt.pu()\nt.home()\nt.goto(0,104)\nt.pensize(1)\nt.pencolor('black')\nt.pd()\nt.left(0)\nt.forward(80)\n# 左边的胡子\nt.pu()\nt.home()\nt.goto(0,124)\nt.pensize(1)\nt.pencolor('black')\nt.pd()\nt.left(170)\nt.forward(80)\nt.pu()\nt.home()\nt.goto(0, 114)\nt.pensize(1)\nt.pencolor('black')\nt.pd()\nt.left(174)\nt.forward(80)\nt.pu()\nt.home()\nt.goto(0, 104)\nt.pensize(1)\nt.pencolor('black')\nt.pd()\nt.left(180)\nt.forward(80)\nt.pu()\nt.goto(-70, 70)\nt.pd()\nt.color('black', 'red')\nt.pensize(2)\nt.seth(-60)\nt.begin_fill()\nt.circle(80,40)\nt.circle(80,80)\nt.end_fill()\nt.pu()\nt.home()\nt.goto(-80,70)\nt.pd()\nt.forward(160)\nt.pu()\nt.home()\nt.goto(-50,50)\nt.pd()\nt.pensize(1)\nt.fillcolor(\"#eb6e1a\")\nt.seth(40)\nt.begin_fill()\nt.circle(-40, 40)\nt.circle(-40, 40)\nt.seth(40)\nt.circle(-40, 40)\nt.circle(-40, 40)\nt.seth(220)\nt.circle(-80, 40)\nt.circle(-80, 40)\nt.end_fill()\n# 领带\nt.pu()\nt.goto(-70, 12)\nt.pensize(14)\nt.pencolor('red')\nt.pd()\nt.seth(-20)\nt.circle(200, 30)\nt.circle(200, 10)\n# 铃铛\nt.pu()\nt.goto(0, -46)\nt.pd()\nt.pensize(1)\nt.color(\"black\", '#f8d102')\nt.begin_fill()\nt.circle(25)\nt.end_fill()\nt.pu()\nt.goto(-5, -40)\nt.pd()\nt.pensize(2)\nt.color(\"black\", '#79675d')\nt.begin_fill()\nt.circle(5)\nt.end_fill()\nt.pensize(3)\nt.right(115)\nt.forward(7)\nt.mainloop()\n```\n\n----\n\n> 最后推荐一个很适合新手入门的Python社区—— <https://python123.io> ，是我们老师以前上课的时候安利给我们的，主要是里面东西都比较浅显易懂，Python是我觉得而且大部分人都这么觉得入门最简单的编程语言了。\n","source":"_posts/python海龟画图画一个哆啦A梦.md","raw":"---\ntitle: 用Python的海龟画图画一个哆啦A梦\ndate: 2020/02/18\ntags: [Python,turtle]\ncategory: []\n---\n\n一年之前学的Python，过了这么久也差不多都还给老师了。我的傻吊儿子（误）喜欢哆啦A梦，前几天花了时间专门找了很多高清的哆啦A梦的海报挂上图床，突发奇想想到用Python的turtle画图能否实现画一个哆啦A梦....\n\n<!--more-->\n\n## 前言\n----\n\n由于实在是~~年代久远~~学艺不精，学的一点Python也还给老师了，加上前些天看课程直播讲到了Python又把Python装了回来，所以就有了尝试用turtle来画一个哆啦A梦的想法，自己琢磨了一会发现就只能画个头画眼睛化胡须啥的，身体其他部分完全没有思路怎么去画，就干脆点直接冲浪搜了，没想到还真的有人画这个，既然有现成，代码也能看的懂，那就拷贝下来自己研究研究吧。\n\n## 预览\n----\n\n先上一个最终的效果图吧 ☟☟☟\n\n![turtle画图哆啦A梦](https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/doraemon/GIF.gif)\n\n## 代码\n----\n\n```python\nimport turtle as t\nt.speed(20)\nt.pensize(4)\nt.hideturtle()\nt.screensize(500, 500, bg='white')\n# 猫脸\nt.fillcolor('#00A1E8')\nt.begin_fill()\nt.circle(120)\nt.end_fill()\nt.pensize(2)\nt.fillcolor('white')\nt.begin_fill()\nt.circle(100)\nt.end_fill()\nt.pu()\nt.home()\nt.goto(0, 134)\nt.pd()\nt.pensize(2)\nt.fillcolor(\"#EA0014\")\nt.begin_fill()\nt.circle(18)\nt.end_fill()\nt.pu()\nt.goto(7, 155)\nt.pensize(1)\nt.color('white', 'white')\nt.pd()\nt.begin_fill()\nt.circle(4)\nt.end_fill()\nt.pu()\nt.goto(-30, 160)\nt.pensize(2)\nt.pd()\nt.color('black', 'white')\nt.begin_fill()\na = 0.4\nfor i in range(120):\n    if 0 <= i < 30 or 60 <= i < 90:\n        a = a+0.08\n        t.lt(3) #向左转3度\n        t.fd(a) #向前走a的步长\n    else:\n        a = a-0.08\n        t.lt(3)\n        t.fd(a)\nt.end_fill()\nt.pu()\nt.goto(30, 160)\nt.pensize(2)\nt.pd()\nt.color('black', 'white')\nt.begin_fill()\nfor i in range(120):\n    if 0 <= i < 30 or 60 <= i < 90:\n        a = a+0.08\n        t.lt(3)  # 向左转3度\n        t.fd(a)  # 向前走a的步长\n    else:\n        a = a-0.08\n        t.lt(3)\n        t.fd(a)\nt.end_fill()\nt.pu()\nt.goto(-38,190)\nt.pensize(4)\nt.pd()\nt.right(-30)\nt.forward(15)\nt.right(70)\nt.forward(15)\nt.pu()\nt.goto(15, 185)\nt.pensize(2)\nt.pd()\nt.color('black', 'black')\nt.begin_fill()\nt.circle(13)\nt.end_fill()\nt.pu()\nt.goto(13, 190)\nt.pensize(1)\nt.pd()\nt.color('white', 'white')\nt.begin_fill()\nt.circle(5)\nt.end_fill()\n \nt.pu()\nt.home()\nt.goto(0, 134)\nt.pensize(2)\nt.pencolor('black')\nt.pd()\nt.right(90)\nt.forward(40)\nt.pu()\nt.home()\nt.goto(0, 124)\nt.pensize(1)\nt.pencolor('black')\nt.pd()\nt.left(10)\nt.forward(80)\nt.pu()\nt.home()\nt.goto(0, 114)\nt.pensize(1)\nt.pencolor('black')\nt.pd()\nt.left(6)\nt.forward(80)\nt.pu()\nt.home()\nt.goto(0,104)\nt.pensize(1)\nt.pencolor('black')\nt.pd()\nt.left(0)\nt.forward(80)\n# 左边的胡子\nt.pu()\nt.home()\nt.goto(0,124)\nt.pensize(1)\nt.pencolor('black')\nt.pd()\nt.left(170)\nt.forward(80)\nt.pu()\nt.home()\nt.goto(0, 114)\nt.pensize(1)\nt.pencolor('black')\nt.pd()\nt.left(174)\nt.forward(80)\nt.pu()\nt.home()\nt.goto(0, 104)\nt.pensize(1)\nt.pencolor('black')\nt.pd()\nt.left(180)\nt.forward(80)\nt.pu()\nt.goto(-70, 70)\nt.pd()\nt.color('black', 'red')\nt.pensize(2)\nt.seth(-60)\nt.begin_fill()\nt.circle(80,40)\nt.circle(80,80)\nt.end_fill()\nt.pu()\nt.home()\nt.goto(-80,70)\nt.pd()\nt.forward(160)\nt.pu()\nt.home()\nt.goto(-50,50)\nt.pd()\nt.pensize(1)\nt.fillcolor(\"#eb6e1a\")\nt.seth(40)\nt.begin_fill()\nt.circle(-40, 40)\nt.circle(-40, 40)\nt.seth(40)\nt.circle(-40, 40)\nt.circle(-40, 40)\nt.seth(220)\nt.circle(-80, 40)\nt.circle(-80, 40)\nt.end_fill()\n# 领带\nt.pu()\nt.goto(-70, 12)\nt.pensize(14)\nt.pencolor('red')\nt.pd()\nt.seth(-20)\nt.circle(200, 30)\nt.circle(200, 10)\n# 铃铛\nt.pu()\nt.goto(0, -46)\nt.pd()\nt.pensize(1)\nt.color(\"black\", '#f8d102')\nt.begin_fill()\nt.circle(25)\nt.end_fill()\nt.pu()\nt.goto(-5, -40)\nt.pd()\nt.pensize(2)\nt.color(\"black\", '#79675d')\nt.begin_fill()\nt.circle(5)\nt.end_fill()\nt.pensize(3)\nt.right(115)\nt.forward(7)\nt.mainloop()\n```\n\n----\n\n> 最后推荐一个很适合新手入门的Python社区—— <https://python123.io> ，是我们老师以前上课的时候安利给我们的，主要是里面东西都比较浅显易懂，Python是我觉得而且大部分人都这么觉得入门最简单的编程语言了。\n","slug":"python海龟画图画一个哆啦A梦","published":1,"updated":"2021-10-27T17:01:34.424Z","_id":"ckv9n032100093sw288kqfidk","comments":1,"layout":"post","photos":[],"link":"","content":"<p>一年之前学的Python，过了这么久也差不多都还给老师了。我的傻吊儿子（误）喜欢哆啦A梦，前几天花了时间专门找了很多高清的哆啦A梦的海报挂上图床，突发奇想想到用Python的turtle画图能否实现画一个哆啦A梦….</p>\n<span id=\"more\"></span>\n\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><hr>\n<p>由于实在是<del>年代久远</del>学艺不精，学的一点Python也还给老师了，加上前些天看课程直播讲到了Python又把Python装了回来，所以就有了尝试用turtle来画一个哆啦A梦的想法，自己琢磨了一会发现就只能画个头画眼睛化胡须啥的，身体其他部分完全没有思路怎么去画，就干脆点直接冲浪搜了，没想到还真的有人画这个，既然有现成，代码也能看的懂，那就拷贝下来自己研究研究吧。</p>\n<h2 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h2><hr>\n<p>先上一个最终的效果图吧 ☟☟☟</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/doraemon/GIF.gif\" alt=\"turtle画图哆啦A梦\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> turtle <span class=\"keyword\">as</span> t</span><br><span class=\"line\">t.speed(<span class=\"number\">20</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">4</span>)</span><br><span class=\"line\">t.hideturtle()</span><br><span class=\"line\">t.screensize(<span class=\"number\">500</span>, <span class=\"number\">500</span>, bg=<span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 猫脸</span></span><br><span class=\"line\">t.fillcolor(<span class=\"string\">&#x27;#00A1E8&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">120</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.fillcolor(<span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">100</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>, <span class=\"number\">134</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.fillcolor(<span class=\"string\">&quot;#EA0014&quot;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">18</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(<span class=\"number\">7</span>, <span class=\"number\">155</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.color(<span class=\"string\">&#x27;white&#x27;</span>, <span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">4</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(-<span class=\"number\">30</span>, <span class=\"number\">160</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.color(<span class=\"string\">&#x27;black&#x27;</span>, <span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">a = <span class=\"number\">0.4</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">120</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">0</span> &lt;= i &lt; <span class=\"number\">30</span> <span class=\"keyword\">or</span> <span class=\"number\">60</span> &lt;= i &lt; <span class=\"number\">90</span>:</span><br><span class=\"line\">        a = a+<span class=\"number\">0.08</span></span><br><span class=\"line\">        t.lt(<span class=\"number\">3</span>) <span class=\"comment\">#向左转3度</span></span><br><span class=\"line\">        t.fd(a) <span class=\"comment\">#向前走a的步长</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        a = a-<span class=\"number\">0.08</span></span><br><span class=\"line\">        t.lt(<span class=\"number\">3</span>)</span><br><span class=\"line\">        t.fd(a)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(<span class=\"number\">30</span>, <span class=\"number\">160</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.color(<span class=\"string\">&#x27;black&#x27;</span>, <span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">120</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">0</span> &lt;= i &lt; <span class=\"number\">30</span> <span class=\"keyword\">or</span> <span class=\"number\">60</span> &lt;= i &lt; <span class=\"number\">90</span>:</span><br><span class=\"line\">        a = a+<span class=\"number\">0.08</span></span><br><span class=\"line\">        t.lt(<span class=\"number\">3</span>)  <span class=\"comment\"># 向左转3度</span></span><br><span class=\"line\">        t.fd(a)  <span class=\"comment\"># 向前走a的步长</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        a = a-<span class=\"number\">0.08</span></span><br><span class=\"line\">        t.lt(<span class=\"number\">3</span>)</span><br><span class=\"line\">        t.fd(a)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(-<span class=\"number\">38</span>,<span class=\"number\">190</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">4</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.right(-<span class=\"number\">30</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">15</span>)</span><br><span class=\"line\">t.right(<span class=\"number\">70</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">15</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(<span class=\"number\">15</span>, <span class=\"number\">185</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.color(<span class=\"string\">&#x27;black&#x27;</span>, <span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">13</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(<span class=\"number\">13</span>, <span class=\"number\">190</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.color(<span class=\"string\">&#x27;white&#x27;</span>, <span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">5</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\"> </span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>, <span class=\"number\">134</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.right(<span class=\"number\">90</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">40</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>, <span class=\"number\">124</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.left(<span class=\"number\">10</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">80</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>, <span class=\"number\">114</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.left(<span class=\"number\">6</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">80</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>,<span class=\"number\">104</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.left(<span class=\"number\">0</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">80</span>)</span><br><span class=\"line\"><span class=\"comment\"># 左边的胡子</span></span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>,<span class=\"number\">124</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.left(<span class=\"number\">170</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">80</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>, <span class=\"number\">114</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.left(<span class=\"number\">174</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">80</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>, <span class=\"number\">104</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.left(<span class=\"number\">180</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">80</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(-<span class=\"number\">70</span>, <span class=\"number\">70</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.color(<span class=\"string\">&#x27;black&#x27;</span>, <span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.seth(-<span class=\"number\">60</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">80</span>,<span class=\"number\">40</span>)</span><br><span class=\"line\">t.circle(<span class=\"number\">80</span>,<span class=\"number\">80</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(-<span class=\"number\">80</span>,<span class=\"number\">70</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.forward(<span class=\"number\">160</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(-<span class=\"number\">50</span>,<span class=\"number\">50</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.fillcolor(<span class=\"string\">&quot;#eb6e1a&quot;</span>)</span><br><span class=\"line\">t.seth(<span class=\"number\">40</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(-<span class=\"number\">40</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">t.circle(-<span class=\"number\">40</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">t.seth(<span class=\"number\">40</span>)</span><br><span class=\"line\">t.circle(-<span class=\"number\">40</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">t.circle(-<span class=\"number\">40</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">t.seth(<span class=\"number\">220</span>)</span><br><span class=\"line\">t.circle(-<span class=\"number\">80</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">t.circle(-<span class=\"number\">80</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\"><span class=\"comment\"># 领带</span></span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(-<span class=\"number\">70</span>, <span class=\"number\">12</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">14</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.seth(-<span class=\"number\">20</span>)</span><br><span class=\"line\">t.circle(<span class=\"number\">200</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">t.circle(<span class=\"number\">200</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"comment\"># 铃铛</span></span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>, -<span class=\"number\">46</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.color(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&#x27;#f8d102&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">25</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(-<span class=\"number\">5</span>, -<span class=\"number\">40</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.color(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&#x27;#79675d&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">5</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pensize(<span class=\"number\">3</span>)</span><br><span class=\"line\">t.right(<span class=\"number\">115</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">7</span>)</span><br><span class=\"line\">t.mainloop()</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>最后推荐一个很适合新手入门的Python社区—— <a href=\"https://python123.io/\">https://python123.io</a> ，是我们老师以前上课的时候安利给我们的，主要是里面东西都比较浅显易懂，Python是我觉得而且大部分人都这么觉得入门最简单的编程语言了。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>一年之前学的Python，过了这么久也差不多都还给老师了。我的傻吊儿子（误）喜欢哆啦A梦，前几天花了时间专门找了很多高清的哆啦A梦的海报挂上图床，突发奇想想到用Python的turtle画图能否实现画一个哆啦A梦….</p>","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><hr>\n<p>由于实在是<del>年代久远</del>学艺不精，学的一点Python也还给老师了，加上前些天看课程直播讲到了Python又把Python装了回来，所以就有了尝试用turtle来画一个哆啦A梦的想法，自己琢磨了一会发现就只能画个头画眼睛化胡须啥的，身体其他部分完全没有思路怎么去画，就干脆点直接冲浪搜了，没想到还真的有人画这个，既然有现成，代码也能看的懂，那就拷贝下来自己研究研究吧。</p>\n<h2 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h2><hr>\n<p>先上一个最终的效果图吧 ☟☟☟</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg@master/doraemon/GIF.gif\" alt=\"turtle画图哆啦A梦\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><hr>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> turtle <span class=\"keyword\">as</span> t</span><br><span class=\"line\">t.speed(<span class=\"number\">20</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">4</span>)</span><br><span class=\"line\">t.hideturtle()</span><br><span class=\"line\">t.screensize(<span class=\"number\">500</span>, <span class=\"number\">500</span>, bg=<span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 猫脸</span></span><br><span class=\"line\">t.fillcolor(<span class=\"string\">&#x27;#00A1E8&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">120</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.fillcolor(<span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">100</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>, <span class=\"number\">134</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.fillcolor(<span class=\"string\">&quot;#EA0014&quot;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">18</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(<span class=\"number\">7</span>, <span class=\"number\">155</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.color(<span class=\"string\">&#x27;white&#x27;</span>, <span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">4</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(-<span class=\"number\">30</span>, <span class=\"number\">160</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.color(<span class=\"string\">&#x27;black&#x27;</span>, <span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">a = <span class=\"number\">0.4</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">120</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">0</span> &lt;= i &lt; <span class=\"number\">30</span> <span class=\"keyword\">or</span> <span class=\"number\">60</span> &lt;= i &lt; <span class=\"number\">90</span>:</span><br><span class=\"line\">        a = a+<span class=\"number\">0.08</span></span><br><span class=\"line\">        t.lt(<span class=\"number\">3</span>) <span class=\"comment\">#向左转3度</span></span><br><span class=\"line\">        t.fd(a) <span class=\"comment\">#向前走a的步长</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        a = a-<span class=\"number\">0.08</span></span><br><span class=\"line\">        t.lt(<span class=\"number\">3</span>)</span><br><span class=\"line\">        t.fd(a)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(<span class=\"number\">30</span>, <span class=\"number\">160</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.color(<span class=\"string\">&#x27;black&#x27;</span>, <span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">120</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"number\">0</span> &lt;= i &lt; <span class=\"number\">30</span> <span class=\"keyword\">or</span> <span class=\"number\">60</span> &lt;= i &lt; <span class=\"number\">90</span>:</span><br><span class=\"line\">        a = a+<span class=\"number\">0.08</span></span><br><span class=\"line\">        t.lt(<span class=\"number\">3</span>)  <span class=\"comment\"># 向左转3度</span></span><br><span class=\"line\">        t.fd(a)  <span class=\"comment\"># 向前走a的步长</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        a = a-<span class=\"number\">0.08</span></span><br><span class=\"line\">        t.lt(<span class=\"number\">3</span>)</span><br><span class=\"line\">        t.fd(a)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(-<span class=\"number\">38</span>,<span class=\"number\">190</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">4</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.right(-<span class=\"number\">30</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">15</span>)</span><br><span class=\"line\">t.right(<span class=\"number\">70</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">15</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(<span class=\"number\">15</span>, <span class=\"number\">185</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.color(<span class=\"string\">&#x27;black&#x27;</span>, <span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">13</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(<span class=\"number\">13</span>, <span class=\"number\">190</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.color(<span class=\"string\">&#x27;white&#x27;</span>, <span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">5</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\"> </span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>, <span class=\"number\">134</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.right(<span class=\"number\">90</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">40</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>, <span class=\"number\">124</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.left(<span class=\"number\">10</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">80</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>, <span class=\"number\">114</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.left(<span class=\"number\">6</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">80</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>,<span class=\"number\">104</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.left(<span class=\"number\">0</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">80</span>)</span><br><span class=\"line\"><span class=\"comment\"># 左边的胡子</span></span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>,<span class=\"number\">124</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.left(<span class=\"number\">170</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">80</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>, <span class=\"number\">114</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.left(<span class=\"number\">174</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">80</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>, <span class=\"number\">104</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.left(<span class=\"number\">180</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">80</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(-<span class=\"number\">70</span>, <span class=\"number\">70</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.color(<span class=\"string\">&#x27;black&#x27;</span>, <span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.seth(-<span class=\"number\">60</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">80</span>,<span class=\"number\">40</span>)</span><br><span class=\"line\">t.circle(<span class=\"number\">80</span>,<span class=\"number\">80</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(-<span class=\"number\">80</span>,<span class=\"number\">70</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.forward(<span class=\"number\">160</span>)</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.home()</span><br><span class=\"line\">t.goto(-<span class=\"number\">50</span>,<span class=\"number\">50</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.fillcolor(<span class=\"string\">&quot;#eb6e1a&quot;</span>)</span><br><span class=\"line\">t.seth(<span class=\"number\">40</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(-<span class=\"number\">40</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">t.circle(-<span class=\"number\">40</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">t.seth(<span class=\"number\">40</span>)</span><br><span class=\"line\">t.circle(-<span class=\"number\">40</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">t.circle(-<span class=\"number\">40</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">t.seth(<span class=\"number\">220</span>)</span><br><span class=\"line\">t.circle(-<span class=\"number\">80</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">t.circle(-<span class=\"number\">80</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\"><span class=\"comment\"># 领带</span></span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(-<span class=\"number\">70</span>, <span class=\"number\">12</span>)</span><br><span class=\"line\">t.pensize(<span class=\"number\">14</span>)</span><br><span class=\"line\">t.pencolor(<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.seth(-<span class=\"number\">20</span>)</span><br><span class=\"line\">t.circle(<span class=\"number\">200</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">t.circle(<span class=\"number\">200</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"comment\"># 铃铛</span></span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(<span class=\"number\">0</span>, -<span class=\"number\">46</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.pensize(<span class=\"number\">1</span>)</span><br><span class=\"line\">t.color(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&#x27;#f8d102&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">25</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pu()</span><br><span class=\"line\">t.goto(-<span class=\"number\">5</span>, -<span class=\"number\">40</span>)</span><br><span class=\"line\">t.pd()</span><br><span class=\"line\">t.pensize(<span class=\"number\">2</span>)</span><br><span class=\"line\">t.color(<span class=\"string\">&quot;black&quot;</span>, <span class=\"string\">&#x27;#79675d&#x27;</span>)</span><br><span class=\"line\">t.begin_fill()</span><br><span class=\"line\">t.circle(<span class=\"number\">5</span>)</span><br><span class=\"line\">t.end_fill()</span><br><span class=\"line\">t.pensize(<span class=\"number\">3</span>)</span><br><span class=\"line\">t.right(<span class=\"number\">115</span>)</span><br><span class=\"line\">t.forward(<span class=\"number\">7</span>)</span><br><span class=\"line\">t.mainloop()</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>最后推荐一个很适合新手入门的Python社区—— <a href=\"https://python123.io/\">https://python123.io</a> ，是我们老师以前上课的时候安利给我们的，主要是里面东西都比较浅显易懂，Python是我觉得而且大部分人都这么觉得入门最简单的编程语言了。</p>\n</blockquote>"},{"title":"如何使用Cloudflare来加速我的GitHub Page","date":"2020-02-03T16:00:00.000Z","_content":"\n我用了两天时间搭建起来的站点，依赖于GitHub的Page服务，域名是在腾讯云购买的，但是众所周知的是GitHub现在基本是半墙的状态，如果你不能快乐地上网，那么很可能不能愉快的访问GitHub，都已经用GitHub来搭建站点了，那么就要想法子来白嫖CDN来加速我的站点在国内的访问速度。\n\n<!-- more -->\n\n----\n\n## 前言\n\n我的站点是依赖Hexo搭建在GitHub Page上的博客系统，本身就已经很轻量了，但是苦于国内访问确实慢，~~但是又没钱~~，所以只能白嫖Cloudflare的CDN，尽管Cloudflare也日常会抽风，但是起码有一点加成。\n\n----\n\n## 在Cloudflare添加站点\n\n你需要先注册一个 [Cloudflare](https://www.cloudflare.com/) 的账号，这个不赘述了，然后添加你的站点  \n\n![添加站点](https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-1.png)  \n\n我们知道的是，Cloudflare免费套餐只能通过NS方式接入，这样用起来不够灵活、生效很慢（0~72小时），而且最重要的问题是没法在解析的时候手工解析到Cloudflare节点IP地址，这就达不到我的目的——指定节点解析。  \n\n>指定节点解析有什么用呢，比如说我用的是默认的解析，在国内访问可能会走美国的节点，就打不到加速的目的了，我的目的就是白嫖Cloudflare的香港节点，或者是日本、韩国的节点都比较快。\n\n----\n\n## 接入第三方管理平台\n\n这里我用到了第三方的Cloudflare管理平台 [BNXB](https://cdn.bnxb.com/) ，用API接入Cloudflare的账号来管理站点。通过这个平台我就可以用CNAME来解析我的站点来使用Cloudflare的CDN加速了，注意要选择CNAME解析。  \n\n配置好了之后的截图应该是这样的：\n\n![BNXD配置](https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-2.png)  \n\n你需要在你的域名服务商那里添加一条CNAME记录解析到 [BNXB](https://cdn.bnxb.com/) 给你提供的地址，你可以在 `解析设置` 里看到对应的地址。解析了之后你要访问一次你的域名来激活SSL证书（当然你得有）。\n\n到了这一步你可以配置你的CDN了，你可以选择在 [Cloudflare](https://www.cloudflare.com/) 配置，或者如果你的英语不太好可以选择在 [BNXB](https://cdn.bnxb.com/) 配置，已经中文本土化了。详细的配置应该怎么配置可以百度有很多配置教程。\n\n## 自定义解析节点\n\n用第三方管理平台来管理Cloudflare不用NS接入，那么我们完全可以自己定义解析节点，只要是Cloudflare的节点就可以。  \n\nCloudflare自己发布节点的页面是 [IP Changes](https://www.cloudflare.com/ips/)  \n\n部分网友整理的节点有：  \n\n### 移动联通推荐\n\n``` code\n104.23.240.0-104.23.243.254\n```\n\n### 电信推荐\n\n``` code\n162.159.208.4-162.159.208.103\n162.159.209.4-162.159.209.103\n162.159.210.4-162.159.210.103\n162.159.211.4-162.159.211.103\n```\n\n> 这里可以在自己的域名服务商那里自定义使用哪个节点，各个节点不一定都可以使用，自己测试觉得可以再用吧\n\n修改完解析记录，等待DNS生效即可。","source":"_posts/如何使用Cloudflare来加速我的GitHub Page.md","raw":"---\ntitle: 如何使用Cloudflare来加速我的GitHub Page\ndate: 2020/02/04\ntags: [CloudFlare,Hexo,GitHub Page,GitHub]\ncategory: 干货\n---\n\n我用了两天时间搭建起来的站点，依赖于GitHub的Page服务，域名是在腾讯云购买的，但是众所周知的是GitHub现在基本是半墙的状态，如果你不能快乐地上网，那么很可能不能愉快的访问GitHub，都已经用GitHub来搭建站点了，那么就要想法子来白嫖CDN来加速我的站点在国内的访问速度。\n\n<!-- more -->\n\n----\n\n## 前言\n\n我的站点是依赖Hexo搭建在GitHub Page上的博客系统，本身就已经很轻量了，但是苦于国内访问确实慢，~~但是又没钱~~，所以只能白嫖Cloudflare的CDN，尽管Cloudflare也日常会抽风，但是起码有一点加成。\n\n----\n\n## 在Cloudflare添加站点\n\n你需要先注册一个 [Cloudflare](https://www.cloudflare.com/) 的账号，这个不赘述了，然后添加你的站点  \n\n![添加站点](https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-1.png)  \n\n我们知道的是，Cloudflare免费套餐只能通过NS方式接入，这样用起来不够灵活、生效很慢（0~72小时），而且最重要的问题是没法在解析的时候手工解析到Cloudflare节点IP地址，这就达不到我的目的——指定节点解析。  \n\n>指定节点解析有什么用呢，比如说我用的是默认的解析，在国内访问可能会走美国的节点，就打不到加速的目的了，我的目的就是白嫖Cloudflare的香港节点，或者是日本、韩国的节点都比较快。\n\n----\n\n## 接入第三方管理平台\n\n这里我用到了第三方的Cloudflare管理平台 [BNXB](https://cdn.bnxb.com/) ，用API接入Cloudflare的账号来管理站点。通过这个平台我就可以用CNAME来解析我的站点来使用Cloudflare的CDN加速了，注意要选择CNAME解析。  \n\n配置好了之后的截图应该是这样的：\n\n![BNXD配置](https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-2.png)  \n\n你需要在你的域名服务商那里添加一条CNAME记录解析到 [BNXB](https://cdn.bnxb.com/) 给你提供的地址，你可以在 `解析设置` 里看到对应的地址。解析了之后你要访问一次你的域名来激活SSL证书（当然你得有）。\n\n到了这一步你可以配置你的CDN了，你可以选择在 [Cloudflare](https://www.cloudflare.com/) 配置，或者如果你的英语不太好可以选择在 [BNXB](https://cdn.bnxb.com/) 配置，已经中文本土化了。详细的配置应该怎么配置可以百度有很多配置教程。\n\n## 自定义解析节点\n\n用第三方管理平台来管理Cloudflare不用NS接入，那么我们完全可以自己定义解析节点，只要是Cloudflare的节点就可以。  \n\nCloudflare自己发布节点的页面是 [IP Changes](https://www.cloudflare.com/ips/)  \n\n部分网友整理的节点有：  \n\n### 移动联通推荐\n\n``` code\n104.23.240.0-104.23.243.254\n```\n\n### 电信推荐\n\n``` code\n162.159.208.4-162.159.208.103\n162.159.209.4-162.159.209.103\n162.159.210.4-162.159.210.103\n162.159.211.4-162.159.211.103\n```\n\n> 这里可以在自己的域名服务商那里自定义使用哪个节点，各个节点不一定都可以使用，自己测试觉得可以再用吧\n\n修改完解析记录，等待DNS生效即可。","slug":"如何使用Cloudflare来加速我的GitHub Page","published":1,"updated":"2021-10-27T17:02:27.975Z","_id":"ckv9n0329000f3sw2goqq3a5q","comments":1,"layout":"post","photos":[],"link":"","content":"<p>我用了两天时间搭建起来的站点，依赖于GitHub的Page服务，域名是在腾讯云购买的，但是众所周知的是GitHub现在基本是半墙的状态，如果你不能快乐地上网，那么很可能不能愉快的访问GitHub，都已经用GitHub来搭建站点了，那么就要想法子来白嫖CDN来加速我的站点在国内的访问速度。</p>\n<span id=\"more\"></span>\n\n<hr>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>我的站点是依赖Hexo搭建在GitHub Page上的博客系统，本身就已经很轻量了，但是苦于国内访问确实慢，<del>但是又没钱</del>，所以只能白嫖Cloudflare的CDN，尽管Cloudflare也日常会抽风，但是起码有一点加成。</p>\n<hr>\n<h2 id=\"在Cloudflare添加站点\"><a href=\"#在Cloudflare添加站点\" class=\"headerlink\" title=\"在Cloudflare添加站点\"></a>在Cloudflare添加站点</h2><p>你需要先注册一个 <a href=\"https://www.cloudflare.com/\">Cloudflare</a> 的账号，这个不赘述了，然后添加你的站点  </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-1.png\" alt=\"添加站点\">  </p>\n<p>我们知道的是，Cloudflare免费套餐只能通过NS方式接入，这样用起来不够灵活、生效很慢（0~72小时），而且最重要的问题是没法在解析的时候手工解析到Cloudflare节点IP地址，这就达不到我的目的——指定节点解析。  </p>\n<blockquote>\n<p>指定节点解析有什么用呢，比如说我用的是默认的解析，在国内访问可能会走美国的节点，就打不到加速的目的了，我的目的就是白嫖Cloudflare的香港节点，或者是日本、韩国的节点都比较快。</p>\n</blockquote>\n<hr>\n<h2 id=\"接入第三方管理平台\"><a href=\"#接入第三方管理平台\" class=\"headerlink\" title=\"接入第三方管理平台\"></a>接入第三方管理平台</h2><p>这里我用到了第三方的Cloudflare管理平台 <a href=\"https://cdn.bnxb.com/\">BNXB</a> ，用API接入Cloudflare的账号来管理站点。通过这个平台我就可以用CNAME来解析我的站点来使用Cloudflare的CDN加速了，注意要选择CNAME解析。  </p>\n<p>配置好了之后的截图应该是这样的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-2.png\" alt=\"BNXD配置\">  </p>\n<p>你需要在你的域名服务商那里添加一条CNAME记录解析到 <a href=\"https://cdn.bnxb.com/\">BNXB</a> 给你提供的地址，你可以在 <code>解析设置</code> 里看到对应的地址。解析了之后你要访问一次你的域名来激活SSL证书（当然你得有）。</p>\n<p>到了这一步你可以配置你的CDN了，你可以选择在 <a href=\"https://www.cloudflare.com/\">Cloudflare</a> 配置，或者如果你的英语不太好可以选择在 <a href=\"https://cdn.bnxb.com/\">BNXB</a> 配置，已经中文本土化了。详细的配置应该怎么配置可以百度有很多配置教程。</p>\n<h2 id=\"自定义解析节点\"><a href=\"#自定义解析节点\" class=\"headerlink\" title=\"自定义解析节点\"></a>自定义解析节点</h2><p>用第三方管理平台来管理Cloudflare不用NS接入，那么我们完全可以自己定义解析节点，只要是Cloudflare的节点就可以。  </p>\n<p>Cloudflare自己发布节点的页面是 <a href=\"https://www.cloudflare.com/ips/\">IP Changes</a>  </p>\n<p>部分网友整理的节点有：  </p>\n<h3 id=\"移动联通推荐\"><a href=\"#移动联通推荐\" class=\"headerlink\" title=\"移动联通推荐\"></a>移动联通推荐</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">104.23.240.0-104.23.243.254</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"电信推荐\"><a href=\"#电信推荐\" class=\"headerlink\" title=\"电信推荐\"></a>电信推荐</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">162.159.208.4-162.159.208.103</span><br><span class=\"line\">162.159.209.4-162.159.209.103</span><br><span class=\"line\">162.159.210.4-162.159.210.103</span><br><span class=\"line\">162.159.211.4-162.159.211.103</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这里可以在自己的域名服务商那里自定义使用哪个节点，各个节点不一定都可以使用，自己测试觉得可以再用吧</p>\n</blockquote>\n<p>修改完解析记录，等待DNS生效即可。</p>\n","site":{"data":{}},"excerpt":"<p>我用了两天时间搭建起来的站点，依赖于GitHub的Page服务，域名是在腾讯云购买的，但是众所周知的是GitHub现在基本是半墙的状态，如果你不能快乐地上网，那么很可能不能愉快的访问GitHub，都已经用GitHub来搭建站点了，那么就要想法子来白嫖CDN来加速我的站点在国内的访问速度。</p>","more":"<hr>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>我的站点是依赖Hexo搭建在GitHub Page上的博客系统，本身就已经很轻量了，但是苦于国内访问确实慢，<del>但是又没钱</del>，所以只能白嫖Cloudflare的CDN，尽管Cloudflare也日常会抽风，但是起码有一点加成。</p>\n<hr>\n<h2 id=\"在Cloudflare添加站点\"><a href=\"#在Cloudflare添加站点\" class=\"headerlink\" title=\"在Cloudflare添加站点\"></a>在Cloudflare添加站点</h2><p>你需要先注册一个 <a href=\"https://www.cloudflare.com/\">Cloudflare</a> 的账号，这个不赘述了，然后添加你的站点  </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-1.png\" alt=\"添加站点\">  </p>\n<p>我们知道的是，Cloudflare免费套餐只能通过NS方式接入，这样用起来不够灵活、生效很慢（0~72小时），而且最重要的问题是没法在解析的时候手工解析到Cloudflare节点IP地址，这就达不到我的目的——指定节点解析。  </p>\n<blockquote>\n<p>指定节点解析有什么用呢，比如说我用的是默认的解析，在国内访问可能会走美国的节点，就打不到加速的目的了，我的目的就是白嫖Cloudflare的香港节点，或者是日本、韩国的节点都比较快。</p>\n</blockquote>\n<hr>\n<h2 id=\"接入第三方管理平台\"><a href=\"#接入第三方管理平台\" class=\"headerlink\" title=\"接入第三方管理平台\"></a>接入第三方管理平台</h2><p>这里我用到了第三方的Cloudflare管理平台 <a href=\"https://cdn.bnxb.com/\">BNXB</a> ，用API接入Cloudflare的账号来管理站点。通过这个平台我就可以用CNAME来解析我的站点来使用Cloudflare的CDN加速了，注意要选择CNAME解析。  </p>\n<p>配置好了之后的截图应该是这样的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-2.png\" alt=\"BNXD配置\">  </p>\n<p>你需要在你的域名服务商那里添加一条CNAME记录解析到 <a href=\"https://cdn.bnxb.com/\">BNXB</a> 给你提供的地址，你可以在 <code>解析设置</code> 里看到对应的地址。解析了之后你要访问一次你的域名来激活SSL证书（当然你得有）。</p>\n<p>到了这一步你可以配置你的CDN了，你可以选择在 <a href=\"https://www.cloudflare.com/\">Cloudflare</a> 配置，或者如果你的英语不太好可以选择在 <a href=\"https://cdn.bnxb.com/\">BNXB</a> 配置，已经中文本土化了。详细的配置应该怎么配置可以百度有很多配置教程。</p>\n<h2 id=\"自定义解析节点\"><a href=\"#自定义解析节点\" class=\"headerlink\" title=\"自定义解析节点\"></a>自定义解析节点</h2><p>用第三方管理平台来管理Cloudflare不用NS接入，那么我们完全可以自己定义解析节点，只要是Cloudflare的节点就可以。  </p>\n<p>Cloudflare自己发布节点的页面是 <a href=\"https://www.cloudflare.com/ips/\">IP Changes</a>  </p>\n<p>部分网友整理的节点有：  </p>\n<h3 id=\"移动联通推荐\"><a href=\"#移动联通推荐\" class=\"headerlink\" title=\"移动联通推荐\"></a>移动联通推荐</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">104.23.240.0-104.23.243.254</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"电信推荐\"><a href=\"#电信推荐\" class=\"headerlink\" title=\"电信推荐\"></a>电信推荐</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">162.159.208.4-162.159.208.103</span><br><span class=\"line\">162.159.209.4-162.159.209.103</span><br><span class=\"line\">162.159.210.4-162.159.210.103</span><br><span class=\"line\">162.159.211.4-162.159.211.103</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这里可以在自己的域名服务商那里自定义使用哪个节点，各个节点不一定都可以使用，自己测试觉得可以再用吧</p>\n</blockquote>\n<p>修改完解析记录，等待DNS生效即可。</p>"},{"title":"使用Hexo主题icarus的深入浅出","date":"2020-02-05T05:55:00.000Z","_content":"\n你现在所看到的站点是我使用Hexo在GitHub Page搭建的，用的主题是icarus，icarus这个主题非常好看而且配置很多很齐全，但是总有一些地方是不够用的，这里整理一下我自己对这个主题的修修改改。\n\n<!--more-->\n\n# 前言\n----\n\nicarus 的官方文档 [点击这里](https://easyhexo.com/2-Theme-use-and-config/2-12-hexo-theme-icarus/)\n\nicarus GitHub开源地址 [点击这里](https://github.com/ppoffice/hexo-theme-icarus)\n\nicarus 官方演示站点 [点击这里](https://blog.zhangruipeng.me/hexo-theme-icarus/)\n\n> 在官方演示站点你还能找到很多文档没有详细说明的配置，当然了你需要基础的英语阅读能力（都有吧）\n\n参考文章：\n\n[Hexo | 两个你可能会用到的icarus主题配置][1]\n[Hexo | 初识icarus主题中的Bulma框架][2]\n\n[1]: https://susreal.com/article/2019/hexo-theme-icarus-2/\n[2]: https://susreal.com/article/2019/hexo-theme-icarus-3/\n\n# 调整页面和侧边栏宽度\n----\n\n我们知道的是，icarus这个主题会自动适应显示多少列，例如只有你左侧栏有Widget才会显示左侧栏，否则不会显示，右侧栏一样。\n\n默认的页面宽度三列如下图：\n\n![默认两列](https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-7.png)\n\n我修改之后：\n\n![我的博客](https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-6.png)\n\n可以发现的是，同样是两列内容，我的页面内容更加饱满，对大屏幕用户更加友好。\n\n下面是我修改的地方\n\n## style.styl 的修改\n----\n\n    Position: /themes/icarus/source/css/style.styl\n\n``` css\n@media screen and (min-width: screen-widescreen)\n    .is-1-column .container\n    .is-2-column .container\n        max-width: screen-desktop - 2 * gap\n        width: screen-desktop - 2 * gap\n@media screen and (min-width: screen-fullhd)\n    .is-2-column .container\n        max-width: screen-widescreen - 2 * gap\n        width: screen-widescreen - 2 * gap\n    .is-1-column .container\n        max-width: screen-desktop - 2 * gap\n        width: screen-desktop - 2 * gap\n```\n\n这一段代码大概在21行开始，我的修改是把这四个 `2 * gap` 改成了`-1 * gap` ，如果你想调成其他宽度自行调整。\n\n## widget.ejs 的修改\n----\n\n    Position: /themes/icarus/layout/common/widget.ejs\n\n```java\nswitch (column_count()) {\n    case 2:\n        return 'is-4-tablet is-4-desktop is-4-widescreen';\n    case 3:\n        return 'is-4-tablet is-4-desktop is-3-widescreen';\n}\nreturn '';\n```\n\n我的修改是 `is-4-widescreen` 改成 `is-3-widescreen` 和 `is-3-widescreen` 改成 `is-2-widescreen`\n\n\n## layout.ejs 的修改\n----\n\n    Position: /themes/icarus/layout/layout.ejs\n\n```java\nswitch (column_count()) {\n    case 1:\n        return 'is-12';\n    case 2:\n        return 'is-8-tablet is-8-desktop is-8-widescreen';\n    case 3:\n        return 'is-8-tablet is-8-desktop is-6-widescreen' (意外发现源码少了个分号lol)\n}\nreturn '';\n```\n\n我的修改是 `is-8-widescreen` 改成 `is-9-widescreen` 和 `is-63-widescreen` 改成 `is-8-widescreen`\n\n# 添加文章置顶功能\n----\n\n文章置顶这个小功能，用起来还是很实用的。先来看一下最终效果：\n\n![置顶预览](https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-8.png)\n\n## _config.yml 的修改\n----\n\n    Position: /yourblog/_config.yml\n\n```yml\nindex_generator:\n  path: ''\n  per_page: 10\n  order_by: \n    top: -1\n    date: -1\n```\n\n这里是吧top属性添加到排序索引里，即 `top: -1` 是加上去的。\n\n## generator.js 的修改\n----\n\n    Position: /yourblog//⁨node_modules⁩/hexo-generator-index⁩/lib⁩/generator.js\n\n```js\nvar paginationDir = config.pagination_dir || 'page';\n\n// 把这一段加上去\nposts.data = posts.data.sort(function(a, b) {\nif(a.top && b.top) {\n    if(a.top == b.top) return b.date - a.date;\n    else return b.top - a.top;\n}\nelse if(a.top && !b.top) {\n    return -1;\n}\nelse if(!a.top && b.top) {\n    return 1;\n}\nelse return b.date - a.date;\n});\n// \n\nvar path = config.index_generator.path || '';\n```\n\n## post.md 的修改\n----\n\n    Position: /yourblog/scaffolds/post.md\n\n```\ntitle: {{ title }}\ndate: {{ date }}\ntags:\ntop: 0\n```\n\n其中 `top: 0` 是加上去的，注意这里 `:` 和 `0` 之间是有空格的\n\n## article.ejs 的修改\n----\n\n    Position: /yourblog/themes/icarus/layout/common/article.ejs\n\n```jsp\n<% if (post.top>0) { %>\n<i class=\"fas fa-arrow-alt-circle-up\" style=\"color:#3273dc\"></i>\n<span class=\"level-item\" style=\"color:#3273dc\">&nbsp;置顶</span>\n<% } %>\n```\n\n这一段就加到你想要出现置顶标签的地方就可以了，预览效果就是我的[博客首页](https://yidas.cn)\n\n# 添加文章版权标识\n----\n\n[Creative Commons](https://creativecommons.org)\n\n先看一下预览：\n\n![版权标识](https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-9.png)\n\n## _config.yml 的修改\n----\n\n    Position: /yourblog/themes/icarus/_config.yml\n\n```yml\n# 添加一个版权标识\n# date: 2020-02-05\n# \ncopyright:\n    enable: true\n```\n\n把这一段加到 `_config.yml` 的末尾，当然了不能只是末尾，就是怕你把参数切断而已。\n\n## article.ejs 的修改\n----\n\n    Position: yourblog/themes/icarus/layout/common/article.ejs\n\n在这个文件中搜索 `has_config('donate')` ，在这行的上方粘贴以下代码：\n\n```jsp\n<!-- 2020-02-05 添加文章版权标识 -->\n<% if (!has_config('copyright.enable') || get_config('copyright.enable') === true) { %>\n    <% if (!index) { %>\n    <div class=\"card\">\n        <div class=\"card-content\">\n            <p><strong>本文作者：</strong><a target=\"_blank\" href=\"<%= theme.url %>\"><%= theme.author %></a></p>\n            <p><strong>原始链接：</strong><a href=\"<%= page.permalink %>\" alt=\"<%= page.title %>\"><%= page.permalink %></a></p>\n            <p><strong>版权声明：</strong>本文采用<a rel=\"license\" target=\"_blank\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>进行许可</p>\n        </div>\n    </div>\n    <% } %>\n<% } %>\n<!-- end -->\n```\n\n完成以上修改，那么你就可以在主题的配置文件里选择是否开启版权标识功能了。\n\n----\n\n> *——生命不止，折腾不息*\n\n后续的更新也会在这篇文章更新，当然了你也可以在评论区和我一起探讨。","source":"_posts/使用Hexo主题icarus的深入浅出.md","raw":"---\ntitle: 使用Hexo主题icarus的深入浅出\ndate: 2020/02/05 13:55\ntags: [icarus,Hexo]\ncategory: 干货\n---\n\n你现在所看到的站点是我使用Hexo在GitHub Page搭建的，用的主题是icarus，icarus这个主题非常好看而且配置很多很齐全，但是总有一些地方是不够用的，这里整理一下我自己对这个主题的修修改改。\n\n<!--more-->\n\n# 前言\n----\n\nicarus 的官方文档 [点击这里](https://easyhexo.com/2-Theme-use-and-config/2-12-hexo-theme-icarus/)\n\nicarus GitHub开源地址 [点击这里](https://github.com/ppoffice/hexo-theme-icarus)\n\nicarus 官方演示站点 [点击这里](https://blog.zhangruipeng.me/hexo-theme-icarus/)\n\n> 在官方演示站点你还能找到很多文档没有详细说明的配置，当然了你需要基础的英语阅读能力（都有吧）\n\n参考文章：\n\n[Hexo | 两个你可能会用到的icarus主题配置][1]\n[Hexo | 初识icarus主题中的Bulma框架][2]\n\n[1]: https://susreal.com/article/2019/hexo-theme-icarus-2/\n[2]: https://susreal.com/article/2019/hexo-theme-icarus-3/\n\n# 调整页面和侧边栏宽度\n----\n\n我们知道的是，icarus这个主题会自动适应显示多少列，例如只有你左侧栏有Widget才会显示左侧栏，否则不会显示，右侧栏一样。\n\n默认的页面宽度三列如下图：\n\n![默认两列](https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-7.png)\n\n我修改之后：\n\n![我的博客](https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-6.png)\n\n可以发现的是，同样是两列内容，我的页面内容更加饱满，对大屏幕用户更加友好。\n\n下面是我修改的地方\n\n## style.styl 的修改\n----\n\n    Position: /themes/icarus/source/css/style.styl\n\n``` css\n@media screen and (min-width: screen-widescreen)\n    .is-1-column .container\n    .is-2-column .container\n        max-width: screen-desktop - 2 * gap\n        width: screen-desktop - 2 * gap\n@media screen and (min-width: screen-fullhd)\n    .is-2-column .container\n        max-width: screen-widescreen - 2 * gap\n        width: screen-widescreen - 2 * gap\n    .is-1-column .container\n        max-width: screen-desktop - 2 * gap\n        width: screen-desktop - 2 * gap\n```\n\n这一段代码大概在21行开始，我的修改是把这四个 `2 * gap` 改成了`-1 * gap` ，如果你想调成其他宽度自行调整。\n\n## widget.ejs 的修改\n----\n\n    Position: /themes/icarus/layout/common/widget.ejs\n\n```java\nswitch (column_count()) {\n    case 2:\n        return 'is-4-tablet is-4-desktop is-4-widescreen';\n    case 3:\n        return 'is-4-tablet is-4-desktop is-3-widescreen';\n}\nreturn '';\n```\n\n我的修改是 `is-4-widescreen` 改成 `is-3-widescreen` 和 `is-3-widescreen` 改成 `is-2-widescreen`\n\n\n## layout.ejs 的修改\n----\n\n    Position: /themes/icarus/layout/layout.ejs\n\n```java\nswitch (column_count()) {\n    case 1:\n        return 'is-12';\n    case 2:\n        return 'is-8-tablet is-8-desktop is-8-widescreen';\n    case 3:\n        return 'is-8-tablet is-8-desktop is-6-widescreen' (意外发现源码少了个分号lol)\n}\nreturn '';\n```\n\n我的修改是 `is-8-widescreen` 改成 `is-9-widescreen` 和 `is-63-widescreen` 改成 `is-8-widescreen`\n\n# 添加文章置顶功能\n----\n\n文章置顶这个小功能，用起来还是很实用的。先来看一下最终效果：\n\n![置顶预览](https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-8.png)\n\n## _config.yml 的修改\n----\n\n    Position: /yourblog/_config.yml\n\n```yml\nindex_generator:\n  path: ''\n  per_page: 10\n  order_by: \n    top: -1\n    date: -1\n```\n\n这里是吧top属性添加到排序索引里，即 `top: -1` 是加上去的。\n\n## generator.js 的修改\n----\n\n    Position: /yourblog//⁨node_modules⁩/hexo-generator-index⁩/lib⁩/generator.js\n\n```js\nvar paginationDir = config.pagination_dir || 'page';\n\n// 把这一段加上去\nposts.data = posts.data.sort(function(a, b) {\nif(a.top && b.top) {\n    if(a.top == b.top) return b.date - a.date;\n    else return b.top - a.top;\n}\nelse if(a.top && !b.top) {\n    return -1;\n}\nelse if(!a.top && b.top) {\n    return 1;\n}\nelse return b.date - a.date;\n});\n// \n\nvar path = config.index_generator.path || '';\n```\n\n## post.md 的修改\n----\n\n    Position: /yourblog/scaffolds/post.md\n\n```\ntitle: {{ title }}\ndate: {{ date }}\ntags:\ntop: 0\n```\n\n其中 `top: 0` 是加上去的，注意这里 `:` 和 `0` 之间是有空格的\n\n## article.ejs 的修改\n----\n\n    Position: /yourblog/themes/icarus/layout/common/article.ejs\n\n```jsp\n<% if (post.top>0) { %>\n<i class=\"fas fa-arrow-alt-circle-up\" style=\"color:#3273dc\"></i>\n<span class=\"level-item\" style=\"color:#3273dc\">&nbsp;置顶</span>\n<% } %>\n```\n\n这一段就加到你想要出现置顶标签的地方就可以了，预览效果就是我的[博客首页](https://yidas.cn)\n\n# 添加文章版权标识\n----\n\n[Creative Commons](https://creativecommons.org)\n\n先看一下预览：\n\n![版权标识](https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-9.png)\n\n## _config.yml 的修改\n----\n\n    Position: /yourblog/themes/icarus/_config.yml\n\n```yml\n# 添加一个版权标识\n# date: 2020-02-05\n# \ncopyright:\n    enable: true\n```\n\n把这一段加到 `_config.yml` 的末尾，当然了不能只是末尾，就是怕你把参数切断而已。\n\n## article.ejs 的修改\n----\n\n    Position: yourblog/themes/icarus/layout/common/article.ejs\n\n在这个文件中搜索 `has_config('donate')` ，在这行的上方粘贴以下代码：\n\n```jsp\n<!-- 2020-02-05 添加文章版权标识 -->\n<% if (!has_config('copyright.enable') || get_config('copyright.enable') === true) { %>\n    <% if (!index) { %>\n    <div class=\"card\">\n        <div class=\"card-content\">\n            <p><strong>本文作者：</strong><a target=\"_blank\" href=\"<%= theme.url %>\"><%= theme.author %></a></p>\n            <p><strong>原始链接：</strong><a href=\"<%= page.permalink %>\" alt=\"<%= page.title %>\"><%= page.permalink %></a></p>\n            <p><strong>版权声明：</strong>本文采用<a rel=\"license\" target=\"_blank\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>进行许可</p>\n        </div>\n    </div>\n    <% } %>\n<% } %>\n<!-- end -->\n```\n\n完成以上修改，那么你就可以在主题的配置文件里选择是否开启版权标识功能了。\n\n----\n\n> *——生命不止，折腾不息*\n\n后续的更新也会在这篇文章更新，当然了你也可以在评论区和我一起探讨。","slug":"使用Hexo主题icarus的深入浅出","published":1,"updated":"2021-10-27T17:02:22.763Z","_id":"ckv9n032x000q3sw2augk78hn","comments":1,"layout":"post","photos":[],"link":"","content":"<p>你现在所看到的站点是我使用Hexo在GitHub Page搭建的，用的主题是icarus，icarus这个主题非常好看而且配置很多很齐全，但是总有一些地方是不够用的，这里整理一下我自己对这个主题的修修改改。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><hr>\n<p>icarus 的官方文档 <a href=\"https://easyhexo.com/2-Theme-use-and-config/2-12-hexo-theme-icarus/\">点击这里</a></p>\n<p>icarus GitHub开源地址 <a href=\"https://github.com/ppoffice/hexo-theme-icarus\">点击这里</a></p>\n<p>icarus 官方演示站点 <a href=\"https://blog.zhangruipeng.me/hexo-theme-icarus/\">点击这里</a></p>\n<blockquote>\n<p>在官方演示站点你还能找到很多文档没有详细说明的配置，当然了你需要基础的英语阅读能力（都有吧）</p>\n</blockquote>\n<p>参考文章：</p>\n<p><a href=\"https://susreal.com/article/2019/hexo-theme-icarus-2/\">Hexo | 两个你可能会用到的icarus主题配置</a><br><a href=\"https://susreal.com/article/2019/hexo-theme-icarus-3/\">Hexo | 初识icarus主题中的Bulma框架</a></p>\n<h1 id=\"调整页面和侧边栏宽度\"><a href=\"#调整页面和侧边栏宽度\" class=\"headerlink\" title=\"调整页面和侧边栏宽度\"></a>调整页面和侧边栏宽度</h1><hr>\n<p>我们知道的是，icarus这个主题会自动适应显示多少列，例如只有你左侧栏有Widget才会显示左侧栏，否则不会显示，右侧栏一样。</p>\n<p>默认的页面宽度三列如下图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-7.png\" alt=\"默认两列\"></p>\n<p>我修改之后：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-6.png\" alt=\"我的博客\"></p>\n<p>可以发现的是，同样是两列内容，我的页面内容更加饱满，对大屏幕用户更加友好。</p>\n<p>下面是我修改的地方</p>\n<h2 id=\"style-styl-的修改\"><a href=\"#style-styl-的修改\" class=\"headerlink\" title=\"style.styl 的修改\"></a>style.styl 的修改</h2><hr>\n<pre><code>Position: /themes/icarus/source/css/style.styl\n</code></pre>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">min-width</span>: screen-widescreen)</span><br><span class=\"line\">    .is-<span class=\"number\">1</span>-column .container</span><br><span class=\"line\">    .is-<span class=\"number\">2</span>-column .container</span><br><span class=\"line\">        <span class=\"attribute\">max-width</span>: screen-desktop - <span class=\"number\">2</span> * gap</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: screen-desktop - <span class=\"number\">2</span> * gap</span><br><span class=\"line\">@media screen <span class=\"keyword\">and</span> (<span class=\"attribute\">min-width</span>: screen-fullhd)</span><br><span class=\"line\">    .is-<span class=\"number\">2</span>-column .container</span><br><span class=\"line\">        <span class=\"attribute\">max-width</span>: screen-widescreen - <span class=\"number\">2</span> * gap</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: screen-widescreen - <span class=\"number\">2</span> * gap</span><br><span class=\"line\">    .is-<span class=\"number\">1</span>-column .container</span><br><span class=\"line\">        <span class=\"attribute\">max-width</span>: screen-desktop - <span class=\"number\">2</span> * gap</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: screen-desktop - <span class=\"number\">2</span> * gap</span><br></pre></td></tr></table></figure>\n\n<p>这一段代码大概在21行开始，我的修改是把这四个 <code>2 * gap</code> 改成了<code>-1 * gap</code> ，如果你想调成其他宽度自行调整。</p>\n<h2 id=\"widget-ejs-的修改\"><a href=\"#widget-ejs-的修改\" class=\"headerlink\" title=\"widget.ejs 的修改\"></a>widget.ejs 的修改</h2><hr>\n<pre><code>Position: /themes/icarus/layout/common/widget.ejs\n</code></pre>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (column_count()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;is-4-tablet is-4-desktop is-4-widescreen&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;is-4-tablet is-4-desktop is-3-widescreen&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>我的修改是 <code>is-4-widescreen</code> 改成 <code>is-3-widescreen</code> 和 <code>is-3-widescreen</code> 改成 <code>is-2-widescreen</code></p>\n<h2 id=\"layout-ejs-的修改\"><a href=\"#layout-ejs-的修改\" class=\"headerlink\" title=\"layout.ejs 的修改\"></a>layout.ejs 的修改</h2><hr>\n<pre><code>Position: /themes/icarus/layout/layout.ejs\n</code></pre>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (column_count()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;is-12&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;is-8-tablet is-8-desktop is-8-widescreen&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;is-8-tablet is-8-desktop is-6-widescreen&#x27;</span> (意外发现源码少了个分号lol)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>我的修改是 <code>is-8-widescreen</code> 改成 <code>is-9-widescreen</code> 和 <code>is-63-widescreen</code> 改成 <code>is-8-widescreen</code></p>\n<h1 id=\"添加文章置顶功能\"><a href=\"#添加文章置顶功能\" class=\"headerlink\" title=\"添加文章置顶功能\"></a>添加文章置顶功能</h1><hr>\n<p>文章置顶这个小功能，用起来还是很实用的。先来看一下最终效果：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-8.png\" alt=\"置顶预览\"></p>\n<h2 id=\"config-yml-的修改\"><a href=\"#config-yml-的修改\" class=\"headerlink\" title=\"_config.yml 的修改\"></a>_config.yml 的修改</h2><hr>\n<pre><code>Position: /yourblog/_config.yml\n</code></pre>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">index_generator:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">per_page:</span> <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"attr\">order_by:</span> </span><br><span class=\"line\">    <span class=\"attr\">top:</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    <span class=\"attr\">date:</span> <span class=\"number\">-1</span></span><br></pre></td></tr></table></figure>\n\n<p>这里是吧top属性添加到排序索引里，即 <code>top: -1</code> 是加上去的。</p>\n<h2 id=\"generator-js-的修改\"><a href=\"#generator-js-的修改\" class=\"headerlink\" title=\"generator.js 的修改\"></a>generator.js 的修改</h2><hr>\n<pre><code>Position: /yourblog//⁨node_modules⁩/hexo-generator-index⁩/lib⁩/generator.js\n</code></pre>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> paginationDir = config.pagination_dir || <span class=\"string\">&#x27;page&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 把这一段加上去</span></span><br><span class=\"line\">posts.data = posts.data.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(a.top &amp;&amp; b.top) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.top == b.top) <span class=\"keyword\">return</span> b.date - a.date;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.top - a.top;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a.top &amp;&amp; !b.top) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.date - a.date;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> path = config.index_generator.path || <span class=\"string\">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"post-md-的修改\"><a href=\"#post-md-的修改\" class=\"headerlink\" title=\"post.md 的修改\"></a>post.md 的修改</h2><hr>\n<pre><code>Position: /yourblog/scaffolds/post.md\n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">tags:</span><br><span class=\"line\">top: 0</span><br></pre></td></tr></table></figure>\n\n<p>其中 <code>top: 0</code> 是加上去的，注意这里 <code>:</code> 和 <code>0</code> 之间是有空格的</p>\n<h2 id=\"article-ejs-的修改\"><a href=\"#article-ejs-的修改\" class=\"headerlink\" title=\"article.ejs 的修改\"></a>article.ejs 的修改</h2><hr>\n<pre><code>Position: /yourblog/themes/icarus/layout/common/article.ejs\n</code></pre>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% <span class=\"keyword\">if</span> (post.top&gt;<span class=\"number\">0</span>) &#123; %&gt;</span><br><span class=\"line\">&lt;i <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;fas fa-arrow-alt-circle-up&quot;</span> style=<span class=\"string\">&quot;color:#3273dc&quot;</span>&gt;&lt;/i&gt;</span><br><span class=\"line\">&lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;level-item&quot;</span> style=<span class=\"string\">&quot;color:#3273dc&quot;</span>&gt;&amp;nbsp;置顶&lt;/span&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n\n<p>这一段就加到你想要出现置顶标签的地方就可以了，预览效果就是我的<a href=\"https://yidas.cn/\">博客首页</a></p>\n<h1 id=\"添加文章版权标识\"><a href=\"#添加文章版权标识\" class=\"headerlink\" title=\"添加文章版权标识\"></a>添加文章版权标识</h1><hr>\n<p><a href=\"https://creativecommons.org/\">Creative Commons</a></p>\n<p>先看一下预览：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-9.png\" alt=\"版权标识\"></p>\n<h2 id=\"config-yml-的修改-1\"><a href=\"#config-yml-的修改-1\" class=\"headerlink\" title=\"_config.yml 的修改\"></a>_config.yml 的修改</h2><hr>\n<pre><code>Position: /yourblog/themes/icarus/_config.yml\n</code></pre>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加一个版权标识</span></span><br><span class=\"line\"><span class=\"comment\"># date: 2020-02-05</span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"attr\">copyright:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>把这一段加到 <code>_config.yml</code> 的末尾，当然了不能只是末尾，就是怕你把参数切断而已。</p>\n<h2 id=\"article-ejs-的修改-1\"><a href=\"#article-ejs-的修改-1\" class=\"headerlink\" title=\"article.ejs 的修改\"></a>article.ejs 的修改</h2><hr>\n<pre><code>Position: yourblog/themes/icarus/layout/common/article.ejs\n</code></pre>\n<p>在这个文件中搜索 <code>has_config(&#39;donate&#39;)</code> ，在这行的上方粘贴以下代码：</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- <span class=\"number\">2020</span>-<span class=\"number\">02</span>-<span class=\"number\">05</span> 添加文章版权标识 --&gt;</span><br><span class=\"line\">&lt;% <span class=\"keyword\">if</span> (!has_config(<span class=\"string\">&#x27;copyright.enable&#x27;</span>) || get_config(<span class=\"string\">&#x27;copyright.enable&#x27;</span>) === <span class=\"keyword\">true</span>) &#123; %&gt;</span><br><span class=\"line\">    &lt;% <span class=\"keyword\">if</span> (!index) &#123; %&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;card&quot;</span>&gt;</span><br><span class=\"line\">        &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;card-content&quot;</span>&gt;</span><br><span class=\"line\">            &lt;p&gt;&lt;strong&gt;本文作者：&lt;/strong&gt;&lt;a target=<span class=\"string\">&quot;_blank&quot;</span> href=<span class=\"string\">&quot;&lt;%= theme.url %&gt;&quot;</span>&gt;&lt;%= theme.author %&gt;&lt;/a&gt;&lt;/p&gt;</span><br><span class=\"line\">            &lt;p&gt;&lt;strong&gt;原始链接：&lt;/strong&gt;&lt;a href=<span class=\"string\">&quot;&lt;%= page.permalink %&gt;&quot;</span> alt=<span class=\"string\">&quot;&lt;%= page.title %&gt;&quot;</span>&gt;&lt;%= page.permalink %&gt;&lt;/a&gt;&lt;/p&gt;</span><br><span class=\"line\">            &lt;p&gt;&lt;strong&gt;版权声明：&lt;/strong&gt;本文采用&lt;a rel=<span class=\"string\">&quot;license&quot;</span> target=<span class=\"string\">&quot;_blank&quot;</span> href=<span class=\"string\">&quot;http://creativecommons.org/licenses/by-nc-sa/4.0/&quot;</span>&gt;CC BY-NC-SA <span class=\"number\">4.0</span>&lt;/a&gt;进行许可&lt;/p&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;% &#125; %&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br><span class=\"line\">&lt;!-- end --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>完成以上修改，那么你就可以在主题的配置文件里选择是否开启版权标识功能了。</p>\n<hr>\n<blockquote>\n<p><em>——生命不止，折腾不息</em></p>\n</blockquote>\n<p>后续的更新也会在这篇文章更新，当然了你也可以在评论区和我一起探讨。</p>\n","site":{"data":{}},"excerpt":"<p>你现在所看到的站点是我使用Hexo在GitHub Page搭建的，用的主题是icarus，icarus这个主题非常好看而且配置很多很齐全，但是总有一些地方是不够用的，这里整理一下我自己对这个主题的修修改改。</p>","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><hr>\n<p>icarus 的官方文档 <a href=\"https://easyhexo.com/2-Theme-use-and-config/2-12-hexo-theme-icarus/\">点击这里</a></p>\n<p>icarus GitHub开源地址 <a href=\"https://github.com/ppoffice/hexo-theme-icarus\">点击这里</a></p>\n<p>icarus 官方演示站点 <a href=\"https://blog.zhangruipeng.me/hexo-theme-icarus/\">点击这里</a></p>\n<blockquote>\n<p>在官方演示站点你还能找到很多文档没有详细说明的配置，当然了你需要基础的英语阅读能力（都有吧）</p>\n</blockquote>\n<p>参考文章：</p>\n<p><a href=\"https://susreal.com/article/2019/hexo-theme-icarus-2/\">Hexo | 两个你可能会用到的icarus主题配置</a><br><a href=\"https://susreal.com/article/2019/hexo-theme-icarus-3/\">Hexo | 初识icarus主题中的Bulma框架</a></p>\n<h1 id=\"调整页面和侧边栏宽度\"><a href=\"#调整页面和侧边栏宽度\" class=\"headerlink\" title=\"调整页面和侧边栏宽度\"></a>调整页面和侧边栏宽度</h1><hr>\n<p>我们知道的是，icarus这个主题会自动适应显示多少列，例如只有你左侧栏有Widget才会显示左侧栏，否则不会显示，右侧栏一样。</p>\n<p>默认的页面宽度三列如下图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-7.png\" alt=\"默认两列\"></p>\n<p>我修改之后：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-6.png\" alt=\"我的博客\"></p>\n<p>可以发现的是，同样是两列内容，我的页面内容更加饱满，对大屏幕用户更加友好。</p>\n<p>下面是我修改的地方</p>\n<h2 id=\"style-styl-的修改\"><a href=\"#style-styl-的修改\" class=\"headerlink\" title=\"style.styl 的修改\"></a>style.styl 的修改</h2><hr>\n<pre><code>Position: /themes/icarus/source/css/style.styl\n</code></pre>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">min-width</span>: screen-widescreen)</span><br><span class=\"line\">    .is-<span class=\"number\">1</span>-column .container</span><br><span class=\"line\">    .is-<span class=\"number\">2</span>-column .container</span><br><span class=\"line\">        <span class=\"attribute\">max-width</span>: screen-desktop - <span class=\"number\">2</span> * gap</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: screen-desktop - <span class=\"number\">2</span> * gap</span><br><span class=\"line\">@media screen <span class=\"keyword\">and</span> (<span class=\"attribute\">min-width</span>: screen-fullhd)</span><br><span class=\"line\">    .is-<span class=\"number\">2</span>-column .container</span><br><span class=\"line\">        <span class=\"attribute\">max-width</span>: screen-widescreen - <span class=\"number\">2</span> * gap</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: screen-widescreen - <span class=\"number\">2</span> * gap</span><br><span class=\"line\">    .is-<span class=\"number\">1</span>-column .container</span><br><span class=\"line\">        <span class=\"attribute\">max-width</span>: screen-desktop - <span class=\"number\">2</span> * gap</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: screen-desktop - <span class=\"number\">2</span> * gap</span><br></pre></td></tr></table></figure>\n\n<p>这一段代码大概在21行开始，我的修改是把这四个 <code>2 * gap</code> 改成了<code>-1 * gap</code> ，如果你想调成其他宽度自行调整。</p>\n<h2 id=\"widget-ejs-的修改\"><a href=\"#widget-ejs-的修改\" class=\"headerlink\" title=\"widget.ejs 的修改\"></a>widget.ejs 的修改</h2><hr>\n<pre><code>Position: /themes/icarus/layout/common/widget.ejs\n</code></pre>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (column_count()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;is-4-tablet is-4-desktop is-4-widescreen&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;is-4-tablet is-4-desktop is-3-widescreen&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>我的修改是 <code>is-4-widescreen</code> 改成 <code>is-3-widescreen</code> 和 <code>is-3-widescreen</code> 改成 <code>is-2-widescreen</code></p>\n<h2 id=\"layout-ejs-的修改\"><a href=\"#layout-ejs-的修改\" class=\"headerlink\" title=\"layout.ejs 的修改\"></a>layout.ejs 的修改</h2><hr>\n<pre><code>Position: /themes/icarus/layout/layout.ejs\n</code></pre>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (column_count()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;is-12&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;is-8-tablet is-8-desktop is-8-widescreen&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;is-8-tablet is-8-desktop is-6-widescreen&#x27;</span> (意外发现源码少了个分号lol)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>我的修改是 <code>is-8-widescreen</code> 改成 <code>is-9-widescreen</code> 和 <code>is-63-widescreen</code> 改成 <code>is-8-widescreen</code></p>\n<h1 id=\"添加文章置顶功能\"><a href=\"#添加文章置顶功能\" class=\"headerlink\" title=\"添加文章置顶功能\"></a>添加文章置顶功能</h1><hr>\n<p>文章置顶这个小功能，用起来还是很实用的。先来看一下最终效果：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-8.png\" alt=\"置顶预览\"></p>\n<h2 id=\"config-yml-的修改\"><a href=\"#config-yml-的修改\" class=\"headerlink\" title=\"_config.yml 的修改\"></a>_config.yml 的修改</h2><hr>\n<pre><code>Position: /yourblog/_config.yml\n</code></pre>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">index_generator:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">per_page:</span> <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"attr\">order_by:</span> </span><br><span class=\"line\">    <span class=\"attr\">top:</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    <span class=\"attr\">date:</span> <span class=\"number\">-1</span></span><br></pre></td></tr></table></figure>\n\n<p>这里是吧top属性添加到排序索引里，即 <code>top: -1</code> 是加上去的。</p>\n<h2 id=\"generator-js-的修改\"><a href=\"#generator-js-的修改\" class=\"headerlink\" title=\"generator.js 的修改\"></a>generator.js 的修改</h2><hr>\n<pre><code>Position: /yourblog//⁨node_modules⁩/hexo-generator-index⁩/lib⁩/generator.js\n</code></pre>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> paginationDir = config.pagination_dir || <span class=\"string\">&#x27;page&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 把这一段加上去</span></span><br><span class=\"line\">posts.data = posts.data.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(a.top &amp;&amp; b.top) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.top == b.top) <span class=\"keyword\">return</span> b.date - a.date;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.top - a.top;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a.top &amp;&amp; !b.top) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.date - a.date;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> path = config.index_generator.path || <span class=\"string\">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"post-md-的修改\"><a href=\"#post-md-的修改\" class=\"headerlink\" title=\"post.md 的修改\"></a>post.md 的修改</h2><hr>\n<pre><code>Position: /yourblog/scaffolds/post.md\n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">tags:</span><br><span class=\"line\">top: 0</span><br></pre></td></tr></table></figure>\n\n<p>其中 <code>top: 0</code> 是加上去的，注意这里 <code>:</code> 和 <code>0</code> 之间是有空格的</p>\n<h2 id=\"article-ejs-的修改\"><a href=\"#article-ejs-的修改\" class=\"headerlink\" title=\"article.ejs 的修改\"></a>article.ejs 的修改</h2><hr>\n<pre><code>Position: /yourblog/themes/icarus/layout/common/article.ejs\n</code></pre>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% <span class=\"keyword\">if</span> (post.top&gt;<span class=\"number\">0</span>) &#123; %&gt;</span><br><span class=\"line\">&lt;i <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;fas fa-arrow-alt-circle-up&quot;</span> style=<span class=\"string\">&quot;color:#3273dc&quot;</span>&gt;&lt;/i&gt;</span><br><span class=\"line\">&lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;level-item&quot;</span> style=<span class=\"string\">&quot;color:#3273dc&quot;</span>&gt;&amp;nbsp;置顶&lt;/span&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n\n<p>这一段就加到你想要出现置顶标签的地方就可以了，预览效果就是我的<a href=\"https://yidas.cn/\">博客首页</a></p>\n<h1 id=\"添加文章版权标识\"><a href=\"#添加文章版权标识\" class=\"headerlink\" title=\"添加文章版权标识\"></a>添加文章版权标识</h1><hr>\n<p><a href=\"https://creativecommons.org/\">Creative Commons</a></p>\n<p>先看一下预览：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/adiynil/cloudimg//screenshot-9.png\" alt=\"版权标识\"></p>\n<h2 id=\"config-yml-的修改-1\"><a href=\"#config-yml-的修改-1\" class=\"headerlink\" title=\"_config.yml 的修改\"></a>_config.yml 的修改</h2><hr>\n<pre><code>Position: /yourblog/themes/icarus/_config.yml\n</code></pre>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加一个版权标识</span></span><br><span class=\"line\"><span class=\"comment\"># date: 2020-02-05</span></span><br><span class=\"line\"><span class=\"comment\"># </span></span><br><span class=\"line\"><span class=\"attr\">copyright:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>把这一段加到 <code>_config.yml</code> 的末尾，当然了不能只是末尾，就是怕你把参数切断而已。</p>\n<h2 id=\"article-ejs-的修改-1\"><a href=\"#article-ejs-的修改-1\" class=\"headerlink\" title=\"article.ejs 的修改\"></a>article.ejs 的修改</h2><hr>\n<pre><code>Position: yourblog/themes/icarus/layout/common/article.ejs\n</code></pre>\n<p>在这个文件中搜索 <code>has_config(&#39;donate&#39;)</code> ，在这行的上方粘贴以下代码：</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- <span class=\"number\">2020</span>-<span class=\"number\">02</span>-<span class=\"number\">05</span> 添加文章版权标识 --&gt;</span><br><span class=\"line\">&lt;% <span class=\"keyword\">if</span> (!has_config(<span class=\"string\">&#x27;copyright.enable&#x27;</span>) || get_config(<span class=\"string\">&#x27;copyright.enable&#x27;</span>) === <span class=\"keyword\">true</span>) &#123; %&gt;</span><br><span class=\"line\">    &lt;% <span class=\"keyword\">if</span> (!index) &#123; %&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;card&quot;</span>&gt;</span><br><span class=\"line\">        &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;card-content&quot;</span>&gt;</span><br><span class=\"line\">            &lt;p&gt;&lt;strong&gt;本文作者：&lt;/strong&gt;&lt;a target=<span class=\"string\">&quot;_blank&quot;</span> href=<span class=\"string\">&quot;&lt;%= theme.url %&gt;&quot;</span>&gt;&lt;%= theme.author %&gt;&lt;/a&gt;&lt;/p&gt;</span><br><span class=\"line\">            &lt;p&gt;&lt;strong&gt;原始链接：&lt;/strong&gt;&lt;a href=<span class=\"string\">&quot;&lt;%= page.permalink %&gt;&quot;</span> alt=<span class=\"string\">&quot;&lt;%= page.title %&gt;&quot;</span>&gt;&lt;%= page.permalink %&gt;&lt;/a&gt;&lt;/p&gt;</span><br><span class=\"line\">            &lt;p&gt;&lt;strong&gt;版权声明：&lt;/strong&gt;本文采用&lt;a rel=<span class=\"string\">&quot;license&quot;</span> target=<span class=\"string\">&quot;_blank&quot;</span> href=<span class=\"string\">&quot;http://creativecommons.org/licenses/by-nc-sa/4.0/&quot;</span>&gt;CC BY-NC-SA <span class=\"number\">4.0</span>&lt;/a&gt;进行许可&lt;/p&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;% &#125; %&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br><span class=\"line\">&lt;!-- end --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>完成以上修改，那么你就可以在主题的配置文件里选择是否开启版权标识功能了。</p>\n<hr>\n<blockquote>\n<p><em>——生命不止，折腾不息</em></p>\n</blockquote>\n<p>后续的更新也会在这篇文章更新，当然了你也可以在评论区和我一起探讨。</p>"},{"title":"Chrome浏览器优秀拓展程序推荐","date":"2020-03-10T16:00:00.000Z","photos":["https://i.loli.net/2020/03/11/3ZMPHniz2fYDsgw.jpg"],"_content":"\n<!-- ![thumbnail](https://i.loli.net/2020/03/11/3ZMPHniz2fYDsgw.jpg) -->\n\nChrome浏览器给我的印象一直是程序猿推荐浏览器的第一位，尽管它的内存占用确实不算是优秀，但是它的拓展程序丰富这一优点却可以盖过内存占用高这一不足。毕竟已经是0202年了，谁的电脑还带不起一个Chrome呢。\n\n<!--more-->\n\n# 前言\n----\n\n所有我推荐的这些拓展程序都是我自己在用或者用过，并且觉得非常优秀的，网上还是有很多优秀的Chrome拓展程序推荐的文章，就好比如我自己就有关注的[Chrome插件英雄榜](https://www.v2fy.com/chromeappheroes/)就总结了很多很实用的拓展程序。\n\nChrome拓展程序的高效使用可以依赖于快捷键，但是当拓展程序多了起来快捷键的学习时间成本就稍微有点高，但是熟悉了也就提高了很多效率。\n\n# 谷歌访问助手\n----\n\n首先我要推荐的是谷歌访问助手，不是每个人都有电脑24小时开着飞机的条件，但是如果你不能连上世纪互联网那么你就不能快乐地冲浪，也就不能通过[Chrome应用商店](https://chrome.google.com/webstore/category/extensions)来下载后面的一系列拓展程序了。\n\n[<i class=\"iconfont icon-link\"></i>官方网站直达地址](https://www.ggfwzs.com/)，下载之后导入浏览器就可以快乐地冲浪了，官网也有详细的教程。\n\n\n通过谷歌访问助手你就可以直接访问Google系列的网站，只要打开Chrome浏览器就会自动打开。Google系列的网站包括Google搜索，Gmail邮箱，Google翻译，Google Play应用商店，Google软件升级，Google Docs文档，Google地图，Google Drive云盘，Google Photos，Google Analytics，Google Adwords/AdSense，Chrome应用商店等Google公司旗下所有服务。\n\n![google-helper.jpg](https://i.loli.net/2020/03/11/V67UTzYyNskK31i.jpg)\n\n通过谷歌访问助手我们可以访问外网，但是切记在外网要言行谨慎，遵纪守法。\n\n> 仅为提供谷歌浏览器chrome商店解决偶尔打不开的问题\n> 仅为chrome浏览器扩展商店用户等需要的用户，提供服务。\n\n使用谷歌访问助手会要求用户吧主页设置为`https://2018.hao245.com/`或者其他第三方主页，开发者不易，如果能接受就尽量支持开发者吧。破解版也还是有的，这里就不放出来下载地址了，又不是不能用。\n\n# Google翻译\n----\n\nChrome浏览器还有一个特色的功能是非常优秀的，那就是它的全站翻译功能，可以直接把非自己的语言的网页翻译成自己的语言。但是全站翻译也是有一定的弊端，那就是不一定准确，有时候不能满足我们的需求，而Google翻译这个拓展程序可以为我们提供**划词翻译**的功能，精准翻译我们不认识的单词，当然了也得配合[谷歌访问助手](#谷歌访问助手)来使用，因为翻译用的是Google的接口。\n\n全站翻译功能：![google-translate-1.gif](https://i.loli.net/2020/03/11/exkTzYFSR7hQ8ju.gif)\n\n划词翻译拓展：![google-translate.gif](https://i.loli.net/2020/03/11/lPk13gaUNBj7ZTQ.gif)\n\n[<i class=\"iconfont icon-link\"></i>Google划词翻译直达地址](https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb)（相信有了上面的[谷歌访问助手](#谷歌访问助手)，你也可以打开Chrome应用商店了。）\n\n# Adguard和Adblock\n\n现在互联网上铺天盖地的广告实在是令人心烦，本着和谐友爱地冲浪却总是被小广告恶心，关键是在现在的大数据分析，推荐的小广告有的时候真的很会让人分心，这绝对不能忍。Chrome有很多优秀的这类拓展，其中**Adblock**算是老牌的去广告利器了。我个人而言用过`Adblock`和`Adguard`，用户体验上其实差不多，都基本能达到干掉小广告的效果，至于选择哪一个就看个人了。\n\n![adblock.jpg](https://i.loli.net/2020/03/11/KmVuUMw1pFO8Jev.jpg)\n\n[<i class=\"iconfont icon-link\"></i>Adblock直达地址](https://chrome.google.com/webstore/detail/adblock-%E2%80%94-best-ad-blocker/gighmmpiobklfepjocnamgkkbiglidom?hl=zh-CN)&nbsp;[<i class=\"iconfont icon-link\"></i>Adguard直达地址](https://chrome.google.com/webstore/detail/adguard-adblocker/bgnkhhnnamicmpeenaelnjfhikgbkllg?hl=zh-CN)\n\n第一次自己摸索着配置完基本就是放着不用再管的。\n\n# OneNote Web Clipper\n\n内容采集类的拓展有很多，类如[印象笔记](https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc)、[Google Keep](https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc)都是比较优秀的，但是巨硬家的东西好用还是好用的，多平台同步，PC端的`Onenote`确实好用，而且如果你是Win板又有笔的话，用来记笔记是非常不错的。当然了也有一点就是，微软在国内是处于半墙状态，有时候会抽风，但是就我个人的体验来说其实还算不错，我是宽带和数据换着用都有，同步基本都是很快，宽带是电信的。\n\n`OneNote Web Clipper`的使用很简单，我是设置了快捷键，只要在我想要剪辑下来的页面`Alt+C`就可以剪辑下来，支持**整页**、**区域**、**文章**和**书签**四种方式剪辑：\n\n![onenote.jpg](https://i.loli.net/2020/03/11/mYhyS2zsEwuCj6q.jpg)\n\n其中整页和区域剪辑下来都是图片形式，我一般都是文章剪辑下来，可以后期编辑和做笔记。\n\n[<i class=\"iconfont icon-link\"></i>OneNote Web Clipper直达地址](https://chrome.google.com/webstore/detail/onenote-web-clipper/gojbdfnpnhogfdgjbigejoaolejmgdhk)\n\n# Tampermonkey\n\n如果你用的是Chrome浏览器而你没有听过用过油猴插件的话，那你真的是太屈才了。油猴插件能做到的事情那可就多了，列举我经常用的两个脚本就是`百度文库长文字复制`和`CSDN自动展开文章`。众所周知百度文库是限制了复制了，超过了一定的字数就不可以复制的；CSDN的文章折叠是我一直都很讨厌的一个机制，好好的读个文章非要多这一个步骤，搞学习的东西这绝对不能忍。\n\n[<i class=\"iconfont icon-link\"></i>Tampermonkey直达地址](https://chrome.google.com/webstore/detail/dhdgffkkebhmkfjojejmpbldmpobfkfo)&nbsp;[<i class=\"iconfont icon-link\"></i>油猴脚本库直达](https://greasyfork.org/zh-CN)\n\n当然了油猴的脚本能实现的功能绝不仅仅是如此，还有很多实用的脚本能让我们在网络上冲浪体验直线上升的，例如网课助手什么的在现在这个人人在家上网课的时期是非常有用的。\n\n# Tiny Notepad\n\n`Tiny Notepad`顾名思义，就是一个简单的记事本，我们的剪切板一次只能剪切一条消息，但是如果在一些网页之间频繁切换频繁复制粘贴的话这个东西还是拍的上用场的。\n\n![tinypad.jpg](https://i.loli.net/2020/03/11/WY7n5Ni2mcgeosb.jpg)\n\n[<i class=\"iconfont icon-link\"></i>Tiny Notepad直达地址](https://chrome.google.com/webstore/detail/tiny-notepad-minimalist-q/boofeaigohaafnfbmonmbnfklndgbgak)\n\n# Secure Shell App\n\n这其实严格意义上并不算是Chrome拓展，Chrome把它称作`Chrome App`，但是用起来还是一样的。顾名思义，就是一个在网页上SSH连接的小工具。其实用处不大，直接Win+CMD也就那样，我就是图他可以记录我之前登陆过的IP而已。\n\n![sshapp.jpg](https://i.loli.net/2020/03/11/BOcLlirNgj6GsxS.jpg)\n\n[<i class=\"iconfont icon-link\"></i>SSH App直达地址](https://chrome.google.com/webstore/detail/secure-shell-app/pnhechapfaindjhompbnflcldabbghjo)\n\n# 放在最后\n\n以上这些也就是我自己个人用到的Chrome插件而已，Chrome的插件库非常丰富，还有很多是我没有挖掘出来的，好不好用见仁见智。\n","source":"_posts/Chrome浏览器优秀拓展程序推荐.md","raw":"---\ntitle: Chrome浏览器优秀拓展程序推荐\ndate: 2020/03/11\nphotos: https://i.loli.net/2020/03/11/3ZMPHniz2fYDsgw.jpg\ncategory: []\ntags: [Chrome Extension, Chrome,谷歌浏览器]\n---\n\n<!-- ![thumbnail](https://i.loli.net/2020/03/11/3ZMPHniz2fYDsgw.jpg) -->\n\nChrome浏览器给我的印象一直是程序猿推荐浏览器的第一位，尽管它的内存占用确实不算是优秀，但是它的拓展程序丰富这一优点却可以盖过内存占用高这一不足。毕竟已经是0202年了，谁的电脑还带不起一个Chrome呢。\n\n<!--more-->\n\n# 前言\n----\n\n所有我推荐的这些拓展程序都是我自己在用或者用过，并且觉得非常优秀的，网上还是有很多优秀的Chrome拓展程序推荐的文章，就好比如我自己就有关注的[Chrome插件英雄榜](https://www.v2fy.com/chromeappheroes/)就总结了很多很实用的拓展程序。\n\nChrome拓展程序的高效使用可以依赖于快捷键，但是当拓展程序多了起来快捷键的学习时间成本就稍微有点高，但是熟悉了也就提高了很多效率。\n\n# 谷歌访问助手\n----\n\n首先我要推荐的是谷歌访问助手，不是每个人都有电脑24小时开着飞机的条件，但是如果你不能连上世纪互联网那么你就不能快乐地冲浪，也就不能通过[Chrome应用商店](https://chrome.google.com/webstore/category/extensions)来下载后面的一系列拓展程序了。\n\n[<i class=\"iconfont icon-link\"></i>官方网站直达地址](https://www.ggfwzs.com/)，下载之后导入浏览器就可以快乐地冲浪了，官网也有详细的教程。\n\n\n通过谷歌访问助手你就可以直接访问Google系列的网站，只要打开Chrome浏览器就会自动打开。Google系列的网站包括Google搜索，Gmail邮箱，Google翻译，Google Play应用商店，Google软件升级，Google Docs文档，Google地图，Google Drive云盘，Google Photos，Google Analytics，Google Adwords/AdSense，Chrome应用商店等Google公司旗下所有服务。\n\n![google-helper.jpg](https://i.loli.net/2020/03/11/V67UTzYyNskK31i.jpg)\n\n通过谷歌访问助手我们可以访问外网，但是切记在外网要言行谨慎，遵纪守法。\n\n> 仅为提供谷歌浏览器chrome商店解决偶尔打不开的问题\n> 仅为chrome浏览器扩展商店用户等需要的用户，提供服务。\n\n使用谷歌访问助手会要求用户吧主页设置为`https://2018.hao245.com/`或者其他第三方主页，开发者不易，如果能接受就尽量支持开发者吧。破解版也还是有的，这里就不放出来下载地址了，又不是不能用。\n\n# Google翻译\n----\n\nChrome浏览器还有一个特色的功能是非常优秀的，那就是它的全站翻译功能，可以直接把非自己的语言的网页翻译成自己的语言。但是全站翻译也是有一定的弊端，那就是不一定准确，有时候不能满足我们的需求，而Google翻译这个拓展程序可以为我们提供**划词翻译**的功能，精准翻译我们不认识的单词，当然了也得配合[谷歌访问助手](#谷歌访问助手)来使用，因为翻译用的是Google的接口。\n\n全站翻译功能：![google-translate-1.gif](https://i.loli.net/2020/03/11/exkTzYFSR7hQ8ju.gif)\n\n划词翻译拓展：![google-translate.gif](https://i.loli.net/2020/03/11/lPk13gaUNBj7ZTQ.gif)\n\n[<i class=\"iconfont icon-link\"></i>Google划词翻译直达地址](https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb)（相信有了上面的[谷歌访问助手](#谷歌访问助手)，你也可以打开Chrome应用商店了。）\n\n# Adguard和Adblock\n\n现在互联网上铺天盖地的广告实在是令人心烦，本着和谐友爱地冲浪却总是被小广告恶心，关键是在现在的大数据分析，推荐的小广告有的时候真的很会让人分心，这绝对不能忍。Chrome有很多优秀的这类拓展，其中**Adblock**算是老牌的去广告利器了。我个人而言用过`Adblock`和`Adguard`，用户体验上其实差不多，都基本能达到干掉小广告的效果，至于选择哪一个就看个人了。\n\n![adblock.jpg](https://i.loli.net/2020/03/11/KmVuUMw1pFO8Jev.jpg)\n\n[<i class=\"iconfont icon-link\"></i>Adblock直达地址](https://chrome.google.com/webstore/detail/adblock-%E2%80%94-best-ad-blocker/gighmmpiobklfepjocnamgkkbiglidom?hl=zh-CN)&nbsp;[<i class=\"iconfont icon-link\"></i>Adguard直达地址](https://chrome.google.com/webstore/detail/adguard-adblocker/bgnkhhnnamicmpeenaelnjfhikgbkllg?hl=zh-CN)\n\n第一次自己摸索着配置完基本就是放着不用再管的。\n\n# OneNote Web Clipper\n\n内容采集类的拓展有很多，类如[印象笔记](https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc)、[Google Keep](https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc)都是比较优秀的，但是巨硬家的东西好用还是好用的，多平台同步，PC端的`Onenote`确实好用，而且如果你是Win板又有笔的话，用来记笔记是非常不错的。当然了也有一点就是，微软在国内是处于半墙状态，有时候会抽风，但是就我个人的体验来说其实还算不错，我是宽带和数据换着用都有，同步基本都是很快，宽带是电信的。\n\n`OneNote Web Clipper`的使用很简单，我是设置了快捷键，只要在我想要剪辑下来的页面`Alt+C`就可以剪辑下来，支持**整页**、**区域**、**文章**和**书签**四种方式剪辑：\n\n![onenote.jpg](https://i.loli.net/2020/03/11/mYhyS2zsEwuCj6q.jpg)\n\n其中整页和区域剪辑下来都是图片形式，我一般都是文章剪辑下来，可以后期编辑和做笔记。\n\n[<i class=\"iconfont icon-link\"></i>OneNote Web Clipper直达地址](https://chrome.google.com/webstore/detail/onenote-web-clipper/gojbdfnpnhogfdgjbigejoaolejmgdhk)\n\n# Tampermonkey\n\n如果你用的是Chrome浏览器而你没有听过用过油猴插件的话，那你真的是太屈才了。油猴插件能做到的事情那可就多了，列举我经常用的两个脚本就是`百度文库长文字复制`和`CSDN自动展开文章`。众所周知百度文库是限制了复制了，超过了一定的字数就不可以复制的；CSDN的文章折叠是我一直都很讨厌的一个机制，好好的读个文章非要多这一个步骤，搞学习的东西这绝对不能忍。\n\n[<i class=\"iconfont icon-link\"></i>Tampermonkey直达地址](https://chrome.google.com/webstore/detail/dhdgffkkebhmkfjojejmpbldmpobfkfo)&nbsp;[<i class=\"iconfont icon-link\"></i>油猴脚本库直达](https://greasyfork.org/zh-CN)\n\n当然了油猴的脚本能实现的功能绝不仅仅是如此，还有很多实用的脚本能让我们在网络上冲浪体验直线上升的，例如网课助手什么的在现在这个人人在家上网课的时期是非常有用的。\n\n# Tiny Notepad\n\n`Tiny Notepad`顾名思义，就是一个简单的记事本，我们的剪切板一次只能剪切一条消息，但是如果在一些网页之间频繁切换频繁复制粘贴的话这个东西还是拍的上用场的。\n\n![tinypad.jpg](https://i.loli.net/2020/03/11/WY7n5Ni2mcgeosb.jpg)\n\n[<i class=\"iconfont icon-link\"></i>Tiny Notepad直达地址](https://chrome.google.com/webstore/detail/tiny-notepad-minimalist-q/boofeaigohaafnfbmonmbnfklndgbgak)\n\n# Secure Shell App\n\n这其实严格意义上并不算是Chrome拓展，Chrome把它称作`Chrome App`，但是用起来还是一样的。顾名思义，就是一个在网页上SSH连接的小工具。其实用处不大，直接Win+CMD也就那样，我就是图他可以记录我之前登陆过的IP而已。\n\n![sshapp.jpg](https://i.loli.net/2020/03/11/BOcLlirNgj6GsxS.jpg)\n\n[<i class=\"iconfont icon-link\"></i>SSH App直达地址](https://chrome.google.com/webstore/detail/secure-shell-app/pnhechapfaindjhompbnflcldabbghjo)\n\n# 放在最后\n\n以上这些也就是我自己个人用到的Chrome插件而已，Chrome的插件库非常丰富，还有很多是我没有挖掘出来的，好不好用见仁见智。\n","slug":"Chrome浏览器优秀拓展程序推荐","published":1,"updated":"2021-10-27T16:43:36.061Z","_id":"ckv9n07k3000v3sw2ektn2057","comments":1,"layout":"post","link":"","content":"<!-- ![thumbnail](https://i.loli.net/2020/03/11/3ZMPHniz2fYDsgw.jpg) -->\n\n<p>Chrome浏览器给我的印象一直是程序猿推荐浏览器的第一位，尽管它的内存占用确实不算是优秀，但是它的拓展程序丰富这一优点却可以盖过内存占用高这一不足。毕竟已经是0202年了，谁的电脑还带不起一个Chrome呢。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><hr>\n<p>所有我推荐的这些拓展程序都是我自己在用或者用过，并且觉得非常优秀的，网上还是有很多优秀的Chrome拓展程序推荐的文章，就好比如我自己就有关注的<a href=\"https://www.v2fy.com/chromeappheroes/\">Chrome插件英雄榜</a>就总结了很多很实用的拓展程序。</p>\n<p>Chrome拓展程序的高效使用可以依赖于快捷键，但是当拓展程序多了起来快捷键的学习时间成本就稍微有点高，但是熟悉了也就提高了很多效率。</p>\n<h1 id=\"谷歌访问助手\"><a href=\"#谷歌访问助手\" class=\"headerlink\" title=\"谷歌访问助手\"></a>谷歌访问助手</h1><hr>\n<p>首先我要推荐的是谷歌访问助手，不是每个人都有电脑24小时开着飞机的条件，但是如果你不能连上世纪互联网那么你就不能快乐地冲浪，也就不能通过<a href=\"https://chrome.google.com/webstore/category/extensions\">Chrome应用商店</a>来下载后面的一系列拓展程序了。</p>\n<p><a href=\"https://www.ggfwzs.com/\"><i class=\"iconfont icon-link\"></i>官方网站直达地址</a>，下载之后导入浏览器就可以快乐地冲浪了，官网也有详细的教程。</p>\n<p>通过谷歌访问助手你就可以直接访问Google系列的网站，只要打开Chrome浏览器就会自动打开。Google系列的网站包括Google搜索，Gmail邮箱，Google翻译，Google Play应用商店，Google软件升级，Google Docs文档，Google地图，Google Drive云盘，Google Photos，Google Analytics，Google Adwords/AdSense，Chrome应用商店等Google公司旗下所有服务。</p>\n<p><img src=\"https://i.loli.net/2020/03/11/V67UTzYyNskK31i.jpg\" alt=\"google-helper.jpg\"></p>\n<p>通过谷歌访问助手我们可以访问外网，但是切记在外网要言行谨慎，遵纪守法。</p>\n<blockquote>\n<p>仅为提供谷歌浏览器chrome商店解决偶尔打不开的问题<br>仅为chrome浏览器扩展商店用户等需要的用户，提供服务。</p>\n</blockquote>\n<p>使用谷歌访问助手会要求用户吧主页设置为<code>https://2018.hao245.com/</code>或者其他第三方主页，开发者不易，如果能接受就尽量支持开发者吧。破解版也还是有的，这里就不放出来下载地址了，又不是不能用。</p>\n<h1 id=\"Google翻译\"><a href=\"#Google翻译\" class=\"headerlink\" title=\"Google翻译\"></a>Google翻译</h1><hr>\n<p>Chrome浏览器还有一个特色的功能是非常优秀的，那就是它的全站翻译功能，可以直接把非自己的语言的网页翻译成自己的语言。但是全站翻译也是有一定的弊端，那就是不一定准确，有时候不能满足我们的需求，而Google翻译这个拓展程序可以为我们提供<strong>划词翻译</strong>的功能，精准翻译我们不认识的单词，当然了也得配合<a href=\"#%E8%B0%B7%E6%AD%8C%E8%AE%BF%E9%97%AE%E5%8A%A9%E6%89%8B\">谷歌访问助手</a>来使用，因为翻译用的是Google的接口。</p>\n<p>全站翻译功能：<img src=\"https://i.loli.net/2020/03/11/exkTzYFSR7hQ8ju.gif\" alt=\"google-translate-1.gif\"></p>\n<p>划词翻译拓展：<img src=\"https://i.loli.net/2020/03/11/lPk13gaUNBj7ZTQ.gif\" alt=\"google-translate.gif\"></p>\n<p><a href=\"https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb\"><i class=\"iconfont icon-link\"></i>Google划词翻译直达地址</a>（相信有了上面的<a href=\"#%E8%B0%B7%E6%AD%8C%E8%AE%BF%E9%97%AE%E5%8A%A9%E6%89%8B\">谷歌访问助手</a>，你也可以打开Chrome应用商店了。）</p>\n<h1 id=\"Adguard和Adblock\"><a href=\"#Adguard和Adblock\" class=\"headerlink\" title=\"Adguard和Adblock\"></a>Adguard和Adblock</h1><p>现在互联网上铺天盖地的广告实在是令人心烦，本着和谐友爱地冲浪却总是被小广告恶心，关键是在现在的大数据分析，推荐的小广告有的时候真的很会让人分心，这绝对不能忍。Chrome有很多优秀的这类拓展，其中<strong>Adblock</strong>算是老牌的去广告利器了。我个人而言用过<code>Adblock</code>和<code>Adguard</code>，用户体验上其实差不多，都基本能达到干掉小广告的效果，至于选择哪一个就看个人了。</p>\n<p><img src=\"https://i.loli.net/2020/03/11/KmVuUMw1pFO8Jev.jpg\" alt=\"adblock.jpg\"></p>\n<p><a href=\"https://chrome.google.com/webstore/detail/adblock-%E2%80%94-best-ad-blocker/gighmmpiobklfepjocnamgkkbiglidom?hl=zh-CN\"><i class=\"iconfont icon-link\"></i>Adblock直达地址</a>&nbsp;<a href=\"https://chrome.google.com/webstore/detail/adguard-adblocker/bgnkhhnnamicmpeenaelnjfhikgbkllg?hl=zh-CN\"><i class=\"iconfont icon-link\"></i>Adguard直达地址</a></p>\n<p>第一次自己摸索着配置完基本就是放着不用再管的。</p>\n<h1 id=\"OneNote-Web-Clipper\"><a href=\"#OneNote-Web-Clipper\" class=\"headerlink\" title=\"OneNote Web Clipper\"></a>OneNote Web Clipper</h1><p>内容采集类的拓展有很多，类如<a href=\"https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc\">印象笔记</a>、<a href=\"https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc\">Google Keep</a>都是比较优秀的，但是巨硬家的东西好用还是好用的，多平台同步，PC端的<code>Onenote</code>确实好用，而且如果你是Win板又有笔的话，用来记笔记是非常不错的。当然了也有一点就是，微软在国内是处于半墙状态，有时候会抽风，但是就我个人的体验来说其实还算不错，我是宽带和数据换着用都有，同步基本都是很快，宽带是电信的。</p>\n<p><code>OneNote Web Clipper</code>的使用很简单，我是设置了快捷键，只要在我想要剪辑下来的页面<code>Alt+C</code>就可以剪辑下来，支持<strong>整页</strong>、<strong>区域</strong>、<strong>文章</strong>和<strong>书签</strong>四种方式剪辑：</p>\n<p><img src=\"https://i.loli.net/2020/03/11/mYhyS2zsEwuCj6q.jpg\" alt=\"onenote.jpg\"></p>\n<p>其中整页和区域剪辑下来都是图片形式，我一般都是文章剪辑下来，可以后期编辑和做笔记。</p>\n<p><a href=\"https://chrome.google.com/webstore/detail/onenote-web-clipper/gojbdfnpnhogfdgjbigejoaolejmgdhk\"><i class=\"iconfont icon-link\"></i>OneNote Web Clipper直达地址</a></p>\n<h1 id=\"Tampermonkey\"><a href=\"#Tampermonkey\" class=\"headerlink\" title=\"Tampermonkey\"></a>Tampermonkey</h1><p>如果你用的是Chrome浏览器而你没有听过用过油猴插件的话，那你真的是太屈才了。油猴插件能做到的事情那可就多了，列举我经常用的两个脚本就是<code>百度文库长文字复制</code>和<code>CSDN自动展开文章</code>。众所周知百度文库是限制了复制了，超过了一定的字数就不可以复制的；CSDN的文章折叠是我一直都很讨厌的一个机制，好好的读个文章非要多这一个步骤，搞学习的东西这绝对不能忍。</p>\n<p><a href=\"https://chrome.google.com/webstore/detail/dhdgffkkebhmkfjojejmpbldmpobfkfo\"><i class=\"iconfont icon-link\"></i>Tampermonkey直达地址</a>&nbsp;<a href=\"https://greasyfork.org/zh-CN\"><i class=\"iconfont icon-link\"></i>油猴脚本库直达</a></p>\n<p>当然了油猴的脚本能实现的功能绝不仅仅是如此，还有很多实用的脚本能让我们在网络上冲浪体验直线上升的，例如网课助手什么的在现在这个人人在家上网课的时期是非常有用的。</p>\n<h1 id=\"Tiny-Notepad\"><a href=\"#Tiny-Notepad\" class=\"headerlink\" title=\"Tiny Notepad\"></a>Tiny Notepad</h1><p><code>Tiny Notepad</code>顾名思义，就是一个简单的记事本，我们的剪切板一次只能剪切一条消息，但是如果在一些网页之间频繁切换频繁复制粘贴的话这个东西还是拍的上用场的。</p>\n<p><img src=\"https://i.loli.net/2020/03/11/WY7n5Ni2mcgeosb.jpg\" alt=\"tinypad.jpg\"></p>\n<p><a href=\"https://chrome.google.com/webstore/detail/tiny-notepad-minimalist-q/boofeaigohaafnfbmonmbnfklndgbgak\"><i class=\"iconfont icon-link\"></i>Tiny Notepad直达地址</a></p>\n<h1 id=\"Secure-Shell-App\"><a href=\"#Secure-Shell-App\" class=\"headerlink\" title=\"Secure Shell App\"></a>Secure Shell App</h1><p>这其实严格意义上并不算是Chrome拓展，Chrome把它称作<code>Chrome App</code>，但是用起来还是一样的。顾名思义，就是一个在网页上SSH连接的小工具。其实用处不大，直接Win+CMD也就那样，我就是图他可以记录我之前登陆过的IP而已。</p>\n<p><img src=\"https://i.loli.net/2020/03/11/BOcLlirNgj6GsxS.jpg\" alt=\"sshapp.jpg\"></p>\n<p><a href=\"https://chrome.google.com/webstore/detail/secure-shell-app/pnhechapfaindjhompbnflcldabbghjo\"><i class=\"iconfont icon-link\"></i>SSH App直达地址</a></p>\n<h1 id=\"放在最后\"><a href=\"#放在最后\" class=\"headerlink\" title=\"放在最后\"></a>放在最后</h1><p>以上这些也就是我自己个人用到的Chrome插件而已，Chrome的插件库非常丰富，还有很多是我没有挖掘出来的，好不好用见仁见智。</p>\n","site":{"data":{}},"excerpt":"<!-- ![thumbnail](https://i.loli.net/2020/03/11/3ZMPHniz2fYDsgw.jpg) -->\n\n<p>Chrome浏览器给我的印象一直是程序猿推荐浏览器的第一位，尽管它的内存占用确实不算是优秀，但是它的拓展程序丰富这一优点却可以盖过内存占用高这一不足。毕竟已经是0202年了，谁的电脑还带不起一个Chrome呢。</p>","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><hr>\n<p>所有我推荐的这些拓展程序都是我自己在用或者用过，并且觉得非常优秀的，网上还是有很多优秀的Chrome拓展程序推荐的文章，就好比如我自己就有关注的<a href=\"https://www.v2fy.com/chromeappheroes/\">Chrome插件英雄榜</a>就总结了很多很实用的拓展程序。</p>\n<p>Chrome拓展程序的高效使用可以依赖于快捷键，但是当拓展程序多了起来快捷键的学习时间成本就稍微有点高，但是熟悉了也就提高了很多效率。</p>\n<h1 id=\"谷歌访问助手\"><a href=\"#谷歌访问助手\" class=\"headerlink\" title=\"谷歌访问助手\"></a>谷歌访问助手</h1><hr>\n<p>首先我要推荐的是谷歌访问助手，不是每个人都有电脑24小时开着飞机的条件，但是如果你不能连上世纪互联网那么你就不能快乐地冲浪，也就不能通过<a href=\"https://chrome.google.com/webstore/category/extensions\">Chrome应用商店</a>来下载后面的一系列拓展程序了。</p>\n<p><a href=\"https://www.ggfwzs.com/\"><i class=\"iconfont icon-link\"></i>官方网站直达地址</a>，下载之后导入浏览器就可以快乐地冲浪了，官网也有详细的教程。</p>\n<p>通过谷歌访问助手你就可以直接访问Google系列的网站，只要打开Chrome浏览器就会自动打开。Google系列的网站包括Google搜索，Gmail邮箱，Google翻译，Google Play应用商店，Google软件升级，Google Docs文档，Google地图，Google Drive云盘，Google Photos，Google Analytics，Google Adwords/AdSense，Chrome应用商店等Google公司旗下所有服务。</p>\n<p><img src=\"https://i.loli.net/2020/03/11/V67UTzYyNskK31i.jpg\" alt=\"google-helper.jpg\"></p>\n<p>通过谷歌访问助手我们可以访问外网，但是切记在外网要言行谨慎，遵纪守法。</p>\n<blockquote>\n<p>仅为提供谷歌浏览器chrome商店解决偶尔打不开的问题<br>仅为chrome浏览器扩展商店用户等需要的用户，提供服务。</p>\n</blockquote>\n<p>使用谷歌访问助手会要求用户吧主页设置为<code>https://2018.hao245.com/</code>或者其他第三方主页，开发者不易，如果能接受就尽量支持开发者吧。破解版也还是有的，这里就不放出来下载地址了，又不是不能用。</p>\n<h1 id=\"Google翻译\"><a href=\"#Google翻译\" class=\"headerlink\" title=\"Google翻译\"></a>Google翻译</h1><hr>\n<p>Chrome浏览器还有一个特色的功能是非常优秀的，那就是它的全站翻译功能，可以直接把非自己的语言的网页翻译成自己的语言。但是全站翻译也是有一定的弊端，那就是不一定准确，有时候不能满足我们的需求，而Google翻译这个拓展程序可以为我们提供<strong>划词翻译</strong>的功能，精准翻译我们不认识的单词，当然了也得配合<a href=\"#%E8%B0%B7%E6%AD%8C%E8%AE%BF%E9%97%AE%E5%8A%A9%E6%89%8B\">谷歌访问助手</a>来使用，因为翻译用的是Google的接口。</p>\n<p>全站翻译功能：<img src=\"https://i.loli.net/2020/03/11/exkTzYFSR7hQ8ju.gif\" alt=\"google-translate-1.gif\"></p>\n<p>划词翻译拓展：<img src=\"https://i.loli.net/2020/03/11/lPk13gaUNBj7ZTQ.gif\" alt=\"google-translate.gif\"></p>\n<p><a href=\"https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb\"><i class=\"iconfont icon-link\"></i>Google划词翻译直达地址</a>（相信有了上面的<a href=\"#%E8%B0%B7%E6%AD%8C%E8%AE%BF%E9%97%AE%E5%8A%A9%E6%89%8B\">谷歌访问助手</a>，你也可以打开Chrome应用商店了。）</p>\n<h1 id=\"Adguard和Adblock\"><a href=\"#Adguard和Adblock\" class=\"headerlink\" title=\"Adguard和Adblock\"></a>Adguard和Adblock</h1><p>现在互联网上铺天盖地的广告实在是令人心烦，本着和谐友爱地冲浪却总是被小广告恶心，关键是在现在的大数据分析，推荐的小广告有的时候真的很会让人分心，这绝对不能忍。Chrome有很多优秀的这类拓展，其中<strong>Adblock</strong>算是老牌的去广告利器了。我个人而言用过<code>Adblock</code>和<code>Adguard</code>，用户体验上其实差不多，都基本能达到干掉小广告的效果，至于选择哪一个就看个人了。</p>\n<p><img src=\"https://i.loli.net/2020/03/11/KmVuUMw1pFO8Jev.jpg\" alt=\"adblock.jpg\"></p>\n<p><a href=\"https://chrome.google.com/webstore/detail/adblock-%E2%80%94-best-ad-blocker/gighmmpiobklfepjocnamgkkbiglidom?hl=zh-CN\"><i class=\"iconfont icon-link\"></i>Adblock直达地址</a>&nbsp;<a href=\"https://chrome.google.com/webstore/detail/adguard-adblocker/bgnkhhnnamicmpeenaelnjfhikgbkllg?hl=zh-CN\"><i class=\"iconfont icon-link\"></i>Adguard直达地址</a></p>\n<p>第一次自己摸索着配置完基本就是放着不用再管的。</p>\n<h1 id=\"OneNote-Web-Clipper\"><a href=\"#OneNote-Web-Clipper\" class=\"headerlink\" title=\"OneNote Web Clipper\"></a>OneNote Web Clipper</h1><p>内容采集类的拓展有很多，类如<a href=\"https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc\">印象笔记</a>、<a href=\"https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc\">Google Keep</a>都是比较优秀的，但是巨硬家的东西好用还是好用的，多平台同步，PC端的<code>Onenote</code>确实好用，而且如果你是Win板又有笔的话，用来记笔记是非常不错的。当然了也有一点就是，微软在国内是处于半墙状态，有时候会抽风，但是就我个人的体验来说其实还算不错，我是宽带和数据换着用都有，同步基本都是很快，宽带是电信的。</p>\n<p><code>OneNote Web Clipper</code>的使用很简单，我是设置了快捷键，只要在我想要剪辑下来的页面<code>Alt+C</code>就可以剪辑下来，支持<strong>整页</strong>、<strong>区域</strong>、<strong>文章</strong>和<strong>书签</strong>四种方式剪辑：</p>\n<p><img src=\"https://i.loli.net/2020/03/11/mYhyS2zsEwuCj6q.jpg\" alt=\"onenote.jpg\"></p>\n<p>其中整页和区域剪辑下来都是图片形式，我一般都是文章剪辑下来，可以后期编辑和做笔记。</p>\n<p><a href=\"https://chrome.google.com/webstore/detail/onenote-web-clipper/gojbdfnpnhogfdgjbigejoaolejmgdhk\"><i class=\"iconfont icon-link\"></i>OneNote Web Clipper直达地址</a></p>\n<h1 id=\"Tampermonkey\"><a href=\"#Tampermonkey\" class=\"headerlink\" title=\"Tampermonkey\"></a>Tampermonkey</h1><p>如果你用的是Chrome浏览器而你没有听过用过油猴插件的话，那你真的是太屈才了。油猴插件能做到的事情那可就多了，列举我经常用的两个脚本就是<code>百度文库长文字复制</code>和<code>CSDN自动展开文章</code>。众所周知百度文库是限制了复制了，超过了一定的字数就不可以复制的；CSDN的文章折叠是我一直都很讨厌的一个机制，好好的读个文章非要多这一个步骤，搞学习的东西这绝对不能忍。</p>\n<p><a href=\"https://chrome.google.com/webstore/detail/dhdgffkkebhmkfjojejmpbldmpobfkfo\"><i class=\"iconfont icon-link\"></i>Tampermonkey直达地址</a>&nbsp;<a href=\"https://greasyfork.org/zh-CN\"><i class=\"iconfont icon-link\"></i>油猴脚本库直达</a></p>\n<p>当然了油猴的脚本能实现的功能绝不仅仅是如此，还有很多实用的脚本能让我们在网络上冲浪体验直线上升的，例如网课助手什么的在现在这个人人在家上网课的时期是非常有用的。</p>\n<h1 id=\"Tiny-Notepad\"><a href=\"#Tiny-Notepad\" class=\"headerlink\" title=\"Tiny Notepad\"></a>Tiny Notepad</h1><p><code>Tiny Notepad</code>顾名思义，就是一个简单的记事本，我们的剪切板一次只能剪切一条消息，但是如果在一些网页之间频繁切换频繁复制粘贴的话这个东西还是拍的上用场的。</p>\n<p><img src=\"https://i.loli.net/2020/03/11/WY7n5Ni2mcgeosb.jpg\" alt=\"tinypad.jpg\"></p>\n<p><a href=\"https://chrome.google.com/webstore/detail/tiny-notepad-minimalist-q/boofeaigohaafnfbmonmbnfklndgbgak\"><i class=\"iconfont icon-link\"></i>Tiny Notepad直达地址</a></p>\n<h1 id=\"Secure-Shell-App\"><a href=\"#Secure-Shell-App\" class=\"headerlink\" title=\"Secure Shell App\"></a>Secure Shell App</h1><p>这其实严格意义上并不算是Chrome拓展，Chrome把它称作<code>Chrome App</code>，但是用起来还是一样的。顾名思义，就是一个在网页上SSH连接的小工具。其实用处不大，直接Win+CMD也就那样，我就是图他可以记录我之前登陆过的IP而已。</p>\n<p><img src=\"https://i.loli.net/2020/03/11/BOcLlirNgj6GsxS.jpg\" alt=\"sshapp.jpg\"></p>\n<p><a href=\"https://chrome.google.com/webstore/detail/secure-shell-app/pnhechapfaindjhompbnflcldabbghjo\"><i class=\"iconfont icon-link\"></i>SSH App直达地址</a></p>\n<h1 id=\"放在最后\"><a href=\"#放在最后\" class=\"headerlink\" title=\"放在最后\"></a>放在最后</h1><p>以上这些也就是我自己个人用到的Chrome插件而已，Chrome的插件库非常丰富，还有很多是我没有挖掘出来的，好不好用见仁见智。</p>"},{"title":"使用JS操作Json数据的笔记","date":"2020-03-25T08:48:00.000Z","_content":"\n闲来无事（瞎折腾），在GitHub上看到好玩的API就拿来玩一下，因为要用到Json数据，就学了一下用原生的JavaScript操作Json数据。其实也没有怎么接触过Json数据，之前用GitHub的API写了个JS来获取我的repo里面的内容第一次用Json数据，在这里就记录一下。\n\n<!--more-->\n\n### Json对象\n\n```\n// JS中新建一个Json对象\nvar Json = {\"name\":\"value\"}\n\n// 添加/修改数据，通过key来访问\nJson[\"gender\"]=\"male\"\n// 或者\nJson.gender=\"male\"\n\n// 删除数据\ndelete Json.name\n\n```\n\n### Json数组的操作\n\n```\n// Json数组的操作\n// 新建\nvar Jsonarray = [{\"name\":\"zhangsan\"},{\"name\":\"lisi\"}]\n\n// 添加\n\nJsonarray.push({\"name\":\"wangwu\"})\n\nJsonarray.splice(1,0,{\"name\":\"wangwu\"})\n// 这里理解为在索引为1的位置插入一个（或多个）Json对象,占有从索引1开始位置\n// 也可以用来替换/修改Json数组对象，只要把第二个参数0改成非0，例如1\n// 就等同于 把从索引为1开始的1个对象（没有默认为空对象，也就是添加）替换成第三个参数{\"name\":\"wangwu\"}\n// 也就是说有第三个或者以上参数就是替换或者增加，没有则是删除\n\n// 修改，访问key来直接修改\nJsonarray[0].name=\"newname\"\n\n// 删除\ndelete Jsonarray[0] // 只是清空，但是其实还占有位置\n\nJsonarray.shift() // 删除第一项，返回删除的对象\nJsonarray.pop() // 删除最后一项，返回删除的对象\n// splice方法，上面有提到，也是返回删除的对象\n\n// 其实通过上面可以看出，Json数组也是一个普通的数组，操作也是和数组的操作一样的，只不过对象变成了Json对象\n\n```\n\n### Json的两个重要函数\n\n这两个函数分别是\n- `JSON.parse()`\n- `JSON.stringify()`\n\n`JSON.parse(a)`就是把a这个字符串解析成Json格式的对象\n\n`JSON.stringify(b)`就是把b这个Json对象解析成可以被识别的Json字符串\n\n可能这样说不太好理解，这么说吧，如果要通过POST协议传输Json类型的数据，但是是不能直接传输Json对象的，解析成字符串对象就可以。\n\n### 最后\n\n总所周知，Json对象是可以嵌套的，无论是对象或者数组都可以，但是操作方法都一样的，只要通过Json.key来访问到子对象/子数组，操作起来也是一样的。\n","source":"_posts/js操作JSON数组.md","raw":"---\ntitle: 使用JS操作Json数据的笔记\ndate: 2020/03/25 16:48\ntag: [Json,Json数组,JavaScript]\ncategory: [个人笔记]\n\n---\n\n闲来无事（瞎折腾），在GitHub上看到好玩的API就拿来玩一下，因为要用到Json数据，就学了一下用原生的JavaScript操作Json数据。其实也没有怎么接触过Json数据，之前用GitHub的API写了个JS来获取我的repo里面的内容第一次用Json数据，在这里就记录一下。\n\n<!--more-->\n\n### Json对象\n\n```\n// JS中新建一个Json对象\nvar Json = {\"name\":\"value\"}\n\n// 添加/修改数据，通过key来访问\nJson[\"gender\"]=\"male\"\n// 或者\nJson.gender=\"male\"\n\n// 删除数据\ndelete Json.name\n\n```\n\n### Json数组的操作\n\n```\n// Json数组的操作\n// 新建\nvar Jsonarray = [{\"name\":\"zhangsan\"},{\"name\":\"lisi\"}]\n\n// 添加\n\nJsonarray.push({\"name\":\"wangwu\"})\n\nJsonarray.splice(1,0,{\"name\":\"wangwu\"})\n// 这里理解为在索引为1的位置插入一个（或多个）Json对象,占有从索引1开始位置\n// 也可以用来替换/修改Json数组对象，只要把第二个参数0改成非0，例如1\n// 就等同于 把从索引为1开始的1个对象（没有默认为空对象，也就是添加）替换成第三个参数{\"name\":\"wangwu\"}\n// 也就是说有第三个或者以上参数就是替换或者增加，没有则是删除\n\n// 修改，访问key来直接修改\nJsonarray[0].name=\"newname\"\n\n// 删除\ndelete Jsonarray[0] // 只是清空，但是其实还占有位置\n\nJsonarray.shift() // 删除第一项，返回删除的对象\nJsonarray.pop() // 删除最后一项，返回删除的对象\n// splice方法，上面有提到，也是返回删除的对象\n\n// 其实通过上面可以看出，Json数组也是一个普通的数组，操作也是和数组的操作一样的，只不过对象变成了Json对象\n\n```\n\n### Json的两个重要函数\n\n这两个函数分别是\n- `JSON.parse()`\n- `JSON.stringify()`\n\n`JSON.parse(a)`就是把a这个字符串解析成Json格式的对象\n\n`JSON.stringify(b)`就是把b这个Json对象解析成可以被识别的Json字符串\n\n可能这样说不太好理解，这么说吧，如果要通过POST协议传输Json类型的数据，但是是不能直接传输Json对象的，解析成字符串对象就可以。\n\n### 最后\n\n总所周知，Json对象是可以嵌套的，无论是对象或者数组都可以，但是操作方法都一样的，只要通过Json.key来访问到子对象/子数组，操作起来也是一样的。\n","slug":"js操作JSON数组","published":1,"updated":"2021-10-27T16:51:17.761Z","_id":"ckv9n07kd00133sw24ecu655i","comments":1,"layout":"post","photos":[],"link":"","content":"<p>闲来无事（瞎折腾），在GitHub上看到好玩的API就拿来玩一下，因为要用到Json数据，就学了一下用原生的JavaScript操作Json数据。其实也没有怎么接触过Json数据，之前用GitHub的API写了个JS来获取我的repo里面的内容第一次用Json数据，在这里就记录一下。</p>\n<span id=\"more\"></span>\n\n<h3 id=\"Json对象\"><a href=\"#Json对象\" class=\"headerlink\" title=\"Json对象\"></a>Json对象</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// JS中新建一个Json对象</span><br><span class=\"line\">var Json = &#123;&quot;name&quot;:&quot;value&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 添加/修改数据，通过key来访问</span><br><span class=\"line\">Json[&quot;gender&quot;]=&quot;male&quot;</span><br><span class=\"line\">// 或者</span><br><span class=\"line\">Json.gender=&quot;male&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">// 删除数据</span><br><span class=\"line\">delete Json.name</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Json数组的操作\"><a href=\"#Json数组的操作\" class=\"headerlink\" title=\"Json数组的操作\"></a>Json数组的操作</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Json数组的操作</span><br><span class=\"line\">// 新建</span><br><span class=\"line\">var Jsonarray = [&#123;&quot;name&quot;:&quot;zhangsan&quot;&#125;,&#123;&quot;name&quot;:&quot;lisi&quot;&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\">// 添加</span><br><span class=\"line\"></span><br><span class=\"line\">Jsonarray.push(&#123;&quot;name&quot;:&quot;wangwu&quot;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">Jsonarray.splice(1,0,&#123;&quot;name&quot;:&quot;wangwu&quot;&#125;)</span><br><span class=\"line\">// 这里理解为在索引为1的位置插入一个（或多个）Json对象,占有从索引1开始位置</span><br><span class=\"line\">// 也可以用来替换/修改Json数组对象，只要把第二个参数0改成非0，例如1</span><br><span class=\"line\">// 就等同于 把从索引为1开始的1个对象（没有默认为空对象，也就是添加）替换成第三个参数&#123;&quot;name&quot;:&quot;wangwu&quot;&#125;</span><br><span class=\"line\">// 也就是说有第三个或者以上参数就是替换或者增加，没有则是删除</span><br><span class=\"line\"></span><br><span class=\"line\">// 修改，访问key来直接修改</span><br><span class=\"line\">Jsonarray[0].name=&quot;newname&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">// 删除</span><br><span class=\"line\">delete Jsonarray[0] // 只是清空，但是其实还占有位置</span><br><span class=\"line\"></span><br><span class=\"line\">Jsonarray.shift() // 删除第一项，返回删除的对象</span><br><span class=\"line\">Jsonarray.pop() // 删除最后一项，返回删除的对象</span><br><span class=\"line\">// splice方法，上面有提到，也是返回删除的对象</span><br><span class=\"line\"></span><br><span class=\"line\">// 其实通过上面可以看出，Json数组也是一个普通的数组，操作也是和数组的操作一样的，只不过对象变成了Json对象</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Json的两个重要函数\"><a href=\"#Json的两个重要函数\" class=\"headerlink\" title=\"Json的两个重要函数\"></a>Json的两个重要函数</h3><p>这两个函数分别是</p>\n<ul>\n<li><code>JSON.parse()</code></li>\n<li><code>JSON.stringify()</code></li>\n</ul>\n<p><code>JSON.parse(a)</code>就是把a这个字符串解析成Json格式的对象</p>\n<p><code>JSON.stringify(b)</code>就是把b这个Json对象解析成可以被识别的Json字符串</p>\n<p>可能这样说不太好理解，这么说吧，如果要通过POST协议传输Json类型的数据，但是是不能直接传输Json对象的，解析成字符串对象就可以。</p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>总所周知，Json对象是可以嵌套的，无论是对象或者数组都可以，但是操作方法都一样的，只要通过Json.key来访问到子对象/子数组，操作起来也是一样的。</p>\n","site":{"data":{}},"excerpt":"<p>闲来无事（瞎折腾），在GitHub上看到好玩的API就拿来玩一下，因为要用到Json数据，就学了一下用原生的JavaScript操作Json数据。其实也没有怎么接触过Json数据，之前用GitHub的API写了个JS来获取我的repo里面的内容第一次用Json数据，在这里就记录一下。</p>","more":"<h3 id=\"Json对象\"><a href=\"#Json对象\" class=\"headerlink\" title=\"Json对象\"></a>Json对象</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// JS中新建一个Json对象</span><br><span class=\"line\">var Json = &#123;&quot;name&quot;:&quot;value&quot;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 添加/修改数据，通过key来访问</span><br><span class=\"line\">Json[&quot;gender&quot;]=&quot;male&quot;</span><br><span class=\"line\">// 或者</span><br><span class=\"line\">Json.gender=&quot;male&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">// 删除数据</span><br><span class=\"line\">delete Json.name</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Json数组的操作\"><a href=\"#Json数组的操作\" class=\"headerlink\" title=\"Json数组的操作\"></a>Json数组的操作</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Json数组的操作</span><br><span class=\"line\">// 新建</span><br><span class=\"line\">var Jsonarray = [&#123;&quot;name&quot;:&quot;zhangsan&quot;&#125;,&#123;&quot;name&quot;:&quot;lisi&quot;&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\">// 添加</span><br><span class=\"line\"></span><br><span class=\"line\">Jsonarray.push(&#123;&quot;name&quot;:&quot;wangwu&quot;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">Jsonarray.splice(1,0,&#123;&quot;name&quot;:&quot;wangwu&quot;&#125;)</span><br><span class=\"line\">// 这里理解为在索引为1的位置插入一个（或多个）Json对象,占有从索引1开始位置</span><br><span class=\"line\">// 也可以用来替换/修改Json数组对象，只要把第二个参数0改成非0，例如1</span><br><span class=\"line\">// 就等同于 把从索引为1开始的1个对象（没有默认为空对象，也就是添加）替换成第三个参数&#123;&quot;name&quot;:&quot;wangwu&quot;&#125;</span><br><span class=\"line\">// 也就是说有第三个或者以上参数就是替换或者增加，没有则是删除</span><br><span class=\"line\"></span><br><span class=\"line\">// 修改，访问key来直接修改</span><br><span class=\"line\">Jsonarray[0].name=&quot;newname&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">// 删除</span><br><span class=\"line\">delete Jsonarray[0] // 只是清空，但是其实还占有位置</span><br><span class=\"line\"></span><br><span class=\"line\">Jsonarray.shift() // 删除第一项，返回删除的对象</span><br><span class=\"line\">Jsonarray.pop() // 删除最后一项，返回删除的对象</span><br><span class=\"line\">// splice方法，上面有提到，也是返回删除的对象</span><br><span class=\"line\"></span><br><span class=\"line\">// 其实通过上面可以看出，Json数组也是一个普通的数组，操作也是和数组的操作一样的，只不过对象变成了Json对象</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Json的两个重要函数\"><a href=\"#Json的两个重要函数\" class=\"headerlink\" title=\"Json的两个重要函数\"></a>Json的两个重要函数</h3><p>这两个函数分别是</p>\n<ul>\n<li><code>JSON.parse()</code></li>\n<li><code>JSON.stringify()</code></li>\n</ul>\n<p><code>JSON.parse(a)</code>就是把a这个字符串解析成Json格式的对象</p>\n<p><code>JSON.stringify(b)</code>就是把b这个Json对象解析成可以被识别的Json字符串</p>\n<p>可能这样说不太好理解，这么说吧，如果要通过POST协议传输Json类型的数据，但是是不能直接传输Json对象的，解析成字符串对象就可以。</p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>总所周知，Json对象是可以嵌套的，无论是对象或者数组都可以，但是操作方法都一样的，只要通过Json.key来访问到子对象/子数组，操作起来也是一样的。</p>"},{"title":"iplook面试总结","date":"2020-12-14T17:44:00.000Z","_content":"\n\n广州，第三天，去面试了广州的一家通信公司的前端开发岗位。公司规模不算很大，但是氛围很好，进去之后根据前台小姐姐的指示找到了接待的地方，（应该是）人事部的小哥很面善，招呼我坐下来就给了我一份面试题和作答纸让我做了一份题，题目有20道，记录一下<!--more-->还记得一些：\n\n- 列举并简单说明 HTML5 的 input 标签\n- 说说 HTML5 的语义化标签\n- CSS 的选择器有哪些\n- 说说盒子模型\n- var 和 let 的作用域\n- 响应式技术有哪些\n- 简单画出 DOM 的树状结构图\n- 公司的logo是蓝色，有三级菜单，页面内容是一个表单里面有文本数据和提交，谈谈如何进行页面布局和配色\n- 客户端数据存储有哪些、有什么区别\n- 原生js实现栈、队列和双向链表\n- 怎么实现页面局部内容刷新技术\n- 对图形化编程的了解\n- 怎么解决跨域问题\n- 移动通信模型（这个有两个还是三个问题，我都不会也就没记住）\n\n还有几个题实在想不起来了，有好些我都不会，做的就不怎么样，所以后面面试的时候就没什么底气。面试我的是两个人，一个男的一个女的，没了解到他们是什么职位的，但应该是资深技术开发的或者经理岗的，首先是自我介绍环节，尽管在进来之前自己在外面吹着冷风练了好几次，但是还是有卡壳的地方，还是要多练练，紧张是不可能不紧张的，适当还好，过了那个度的话应该是挺减分的。男面试官让我说说我简历上写的项目经历，实际上这两个项目一个是前端课程的作品一个是自学nodejs的demo项目，挺简单的没有什么好说；女面试官就比较犀利了，问问题的速度比较快，气场非常强，一个一个问题紧逼着，问的也很掐点，好多我都答不上来，我记得的： \n\n- 项目是用什么搭建的，还了解过哪些工具\n- jQuery 框架的使用\n- canvas绘图了解多少\n- 语义化标签的作用\n- vue-cli 的使用\n- vuex 的作用和使用\n- vue的router怎么用\n- 前端怎么实现跨域（get/post）\n- HTTP协议（拓展TCP/IP）\n- 媒体查询怎么实现div在不同宽度下显示不同颜色\n\n其实好多都是根据面试题来问一些更深一点的，但是被女面试官的语言犀利到，脑子都没转过弯来也就没有回答好，归根到底还是自己知识沉淀不够，能力达不到水平。\n\n后面照例还是由人事的主管聊了一下问了一下我的基本情况，说了一下我的答题情况，问了一下我的专业，确定了我是软件工程专业之后问我为什么没答栈队列链表那道题，是不是数据结构不好。我只能回答手写不知道如何下手就没写，其实她应该看得出来我是不会，毕竟我也没想到居然要考数据结构（混过来的）。还问了我对他们公司有什么了解，是做什么产品的，由于自己没有准备充分没去查阅所以不太了解。中间也问我有什么想要了解的，得知他们公司目前是在用原生js开发的，毕竟是通信方面的，最求稳定安全为上，还没有开始用框架。最后就是客套了一下，问了期望薪资问了学校的就业情况身边的人的实习薪资等，走个流程。\n\n总的来说，这是一次成功的失败面试。于这次面试本身我是失败了的，面试出来不需要他们通知我也知道自己没有机会；但是通过这次面试找到了自己的很多问题，基础的薄弱块，也意识到自己离一份offer的差距有多少，今后继续加油。","source":"_posts/iplook面试总结.md","raw":"---\ntitle: iplook面试总结\ndate: 2020/12/15 01:44\ncategory: []\ntags: []\n---\n\n\n广州，第三天，去面试了广州的一家通信公司的前端开发岗位。公司规模不算很大，但是氛围很好，进去之后根据前台小姐姐的指示找到了接待的地方，（应该是）人事部的小哥很面善，招呼我坐下来就给了我一份面试题和作答纸让我做了一份题，题目有20道，记录一下<!--more-->还记得一些：\n\n- 列举并简单说明 HTML5 的 input 标签\n- 说说 HTML5 的语义化标签\n- CSS 的选择器有哪些\n- 说说盒子模型\n- var 和 let 的作用域\n- 响应式技术有哪些\n- 简单画出 DOM 的树状结构图\n- 公司的logo是蓝色，有三级菜单，页面内容是一个表单里面有文本数据和提交，谈谈如何进行页面布局和配色\n- 客户端数据存储有哪些、有什么区别\n- 原生js实现栈、队列和双向链表\n- 怎么实现页面局部内容刷新技术\n- 对图形化编程的了解\n- 怎么解决跨域问题\n- 移动通信模型（这个有两个还是三个问题，我都不会也就没记住）\n\n还有几个题实在想不起来了，有好些我都不会，做的就不怎么样，所以后面面试的时候就没什么底气。面试我的是两个人，一个男的一个女的，没了解到他们是什么职位的，但应该是资深技术开发的或者经理岗的，首先是自我介绍环节，尽管在进来之前自己在外面吹着冷风练了好几次，但是还是有卡壳的地方，还是要多练练，紧张是不可能不紧张的，适当还好，过了那个度的话应该是挺减分的。男面试官让我说说我简历上写的项目经历，实际上这两个项目一个是前端课程的作品一个是自学nodejs的demo项目，挺简单的没有什么好说；女面试官就比较犀利了，问问题的速度比较快，气场非常强，一个一个问题紧逼着，问的也很掐点，好多我都答不上来，我记得的： \n\n- 项目是用什么搭建的，还了解过哪些工具\n- jQuery 框架的使用\n- canvas绘图了解多少\n- 语义化标签的作用\n- vue-cli 的使用\n- vuex 的作用和使用\n- vue的router怎么用\n- 前端怎么实现跨域（get/post）\n- HTTP协议（拓展TCP/IP）\n- 媒体查询怎么实现div在不同宽度下显示不同颜色\n\n其实好多都是根据面试题来问一些更深一点的，但是被女面试官的语言犀利到，脑子都没转过弯来也就没有回答好，归根到底还是自己知识沉淀不够，能力达不到水平。\n\n后面照例还是由人事的主管聊了一下问了一下我的基本情况，说了一下我的答题情况，问了一下我的专业，确定了我是软件工程专业之后问我为什么没答栈队列链表那道题，是不是数据结构不好。我只能回答手写不知道如何下手就没写，其实她应该看得出来我是不会，毕竟我也没想到居然要考数据结构（混过来的）。还问了我对他们公司有什么了解，是做什么产品的，由于自己没有准备充分没去查阅所以不太了解。中间也问我有什么想要了解的，得知他们公司目前是在用原生js开发的，毕竟是通信方面的，最求稳定安全为上，还没有开始用框架。最后就是客套了一下，问了期望薪资问了学校的就业情况身边的人的实习薪资等，走个流程。\n\n总的来说，这是一次成功的失败面试。于这次面试本身我是失败了的，面试出来不需要他们通知我也知道自己没有机会；但是通过这次面试找到了自己的很多问题，基础的薄弱块，也意识到自己离一份offer的差距有多少，今后继续加油。","slug":"iplook面试总结","published":1,"updated":"2021-10-27T16:48:25.015Z","_id":"ckv9n0n0t001b3sw23bx7a603","comments":1,"layout":"post","photos":[],"link":"","content":"<p>广州，第三天，去面试了广州的一家通信公司的前端开发岗位。公司规模不算很大，但是氛围很好，进去之后根据前台小姐姐的指示找到了接待的地方，（应该是）人事部的小哥很面善，招呼我坐下来就给了我一份面试题和作答纸让我做了一份题，题目有20道，记录一下<span id=\"more\"></span>还记得一些：</p>\n<ul>\n<li>列举并简单说明 HTML5 的 input 标签</li>\n<li>说说 HTML5 的语义化标签</li>\n<li>CSS 的选择器有哪些</li>\n<li>说说盒子模型</li>\n<li>var 和 let 的作用域</li>\n<li>响应式技术有哪些</li>\n<li>简单画出 DOM 的树状结构图</li>\n<li>公司的logo是蓝色，有三级菜单，页面内容是一个表单里面有文本数据和提交，谈谈如何进行页面布局和配色</li>\n<li>客户端数据存储有哪些、有什么区别</li>\n<li>原生js实现栈、队列和双向链表</li>\n<li>怎么实现页面局部内容刷新技术</li>\n<li>对图形化编程的了解</li>\n<li>怎么解决跨域问题</li>\n<li>移动通信模型（这个有两个还是三个问题，我都不会也就没记住）</li>\n</ul>\n<p>还有几个题实在想不起来了，有好些我都不会，做的就不怎么样，所以后面面试的时候就没什么底气。面试我的是两个人，一个男的一个女的，没了解到他们是什么职位的，但应该是资深技术开发的或者经理岗的，首先是自我介绍环节，尽管在进来之前自己在外面吹着冷风练了好几次，但是还是有卡壳的地方，还是要多练练，紧张是不可能不紧张的，适当还好，过了那个度的话应该是挺减分的。男面试官让我说说我简历上写的项目经历，实际上这两个项目一个是前端课程的作品一个是自学nodejs的demo项目，挺简单的没有什么好说；女面试官就比较犀利了，问问题的速度比较快，气场非常强，一个一个问题紧逼着，问的也很掐点，好多我都答不上来，我记得的： </p>\n<ul>\n<li>项目是用什么搭建的，还了解过哪些工具</li>\n<li>jQuery 框架的使用</li>\n<li>canvas绘图了解多少</li>\n<li>语义化标签的作用</li>\n<li>vue-cli 的使用</li>\n<li>vuex 的作用和使用</li>\n<li>vue的router怎么用</li>\n<li>前端怎么实现跨域（get/post）</li>\n<li>HTTP协议（拓展TCP/IP）</li>\n<li>媒体查询怎么实现div在不同宽度下显示不同颜色</li>\n</ul>\n<p>其实好多都是根据面试题来问一些更深一点的，但是被女面试官的语言犀利到，脑子都没转过弯来也就没有回答好，归根到底还是自己知识沉淀不够，能力达不到水平。</p>\n<p>后面照例还是由人事的主管聊了一下问了一下我的基本情况，说了一下我的答题情况，问了一下我的专业，确定了我是软件工程专业之后问我为什么没答栈队列链表那道题，是不是数据结构不好。我只能回答手写不知道如何下手就没写，其实她应该看得出来我是不会，毕竟我也没想到居然要考数据结构（混过来的）。还问了我对他们公司有什么了解，是做什么产品的，由于自己没有准备充分没去查阅所以不太了解。中间也问我有什么想要了解的，得知他们公司目前是在用原生js开发的，毕竟是通信方面的，最求稳定安全为上，还没有开始用框架。最后就是客套了一下，问了期望薪资问了学校的就业情况身边的人的实习薪资等，走个流程。</p>\n<p>总的来说，这是一次成功的失败面试。于这次面试本身我是失败了的，面试出来不需要他们通知我也知道自己没有机会；但是通过这次面试找到了自己的很多问题，基础的薄弱块，也意识到自己离一份offer的差距有多少，今后继续加油。</p>\n","site":{"data":{}},"excerpt":"<p>广州，第三天，去面试了广州的一家通信公司的前端开发岗位。公司规模不算很大，但是氛围很好，进去之后根据前台小姐姐的指示找到了接待的地方，（应该是）人事部的小哥很面善，招呼我坐下来就给了我一份面试题和作答纸让我做了一份题，题目有20道，记录一下","more":"还记得一些：</p>\n<ul>\n<li>列举并简单说明 HTML5 的 input 标签</li>\n<li>说说 HTML5 的语义化标签</li>\n<li>CSS 的选择器有哪些</li>\n<li>说说盒子模型</li>\n<li>var 和 let 的作用域</li>\n<li>响应式技术有哪些</li>\n<li>简单画出 DOM 的树状结构图</li>\n<li>公司的logo是蓝色，有三级菜单，页面内容是一个表单里面有文本数据和提交，谈谈如何进行页面布局和配色</li>\n<li>客户端数据存储有哪些、有什么区别</li>\n<li>原生js实现栈、队列和双向链表</li>\n<li>怎么实现页面局部内容刷新技术</li>\n<li>对图形化编程的了解</li>\n<li>怎么解决跨域问题</li>\n<li>移动通信模型（这个有两个还是三个问题，我都不会也就没记住）</li>\n</ul>\n<p>还有几个题实在想不起来了，有好些我都不会，做的就不怎么样，所以后面面试的时候就没什么底气。面试我的是两个人，一个男的一个女的，没了解到他们是什么职位的，但应该是资深技术开发的或者经理岗的，首先是自我介绍环节，尽管在进来之前自己在外面吹着冷风练了好几次，但是还是有卡壳的地方，还是要多练练，紧张是不可能不紧张的，适当还好，过了那个度的话应该是挺减分的。男面试官让我说说我简历上写的项目经历，实际上这两个项目一个是前端课程的作品一个是自学nodejs的demo项目，挺简单的没有什么好说；女面试官就比较犀利了，问问题的速度比较快，气场非常强，一个一个问题紧逼着，问的也很掐点，好多我都答不上来，我记得的： </p>\n<ul>\n<li>项目是用什么搭建的，还了解过哪些工具</li>\n<li>jQuery 框架的使用</li>\n<li>canvas绘图了解多少</li>\n<li>语义化标签的作用</li>\n<li>vue-cli 的使用</li>\n<li>vuex 的作用和使用</li>\n<li>vue的router怎么用</li>\n<li>前端怎么实现跨域（get/post）</li>\n<li>HTTP协议（拓展TCP/IP）</li>\n<li>媒体查询怎么实现div在不同宽度下显示不同颜色</li>\n</ul>\n<p>其实好多都是根据面试题来问一些更深一点的，但是被女面试官的语言犀利到，脑子都没转过弯来也就没有回答好，归根到底还是自己知识沉淀不够，能力达不到水平。</p>\n<p>后面照例还是由人事的主管聊了一下问了一下我的基本情况，说了一下我的答题情况，问了一下我的专业，确定了我是软件工程专业之后问我为什么没答栈队列链表那道题，是不是数据结构不好。我只能回答手写不知道如何下手就没写，其实她应该看得出来我是不会，毕竟我也没想到居然要考数据结构（混过来的）。还问了我对他们公司有什么了解，是做什么产品的，由于自己没有准备充分没去查阅所以不太了解。中间也问我有什么想要了解的，得知他们公司目前是在用原生js开发的，毕竟是通信方面的，最求稳定安全为上，还没有开始用框架。最后就是客套了一下，问了期望薪资问了学校的就业情况身边的人的实习薪资等，走个流程。</p>\n<p>总的来说，这是一次成功的失败面试。于这次面试本身我是失败了的，面试出来不需要他们通知我也知道自己没有机会；但是通过这次面试找到了自己的很多问题，基础的薄弱块，也意识到自己离一份offer的差距有多少，今后继续加油。</p>"},{"title":"JavaScript实现数据结构的栈、队列和双向链表","date":"2020-12-22T04:57:00.000Z","_content":"\n\n数据结构中的栈、队列和链表应该是最基础的了，还有像是图、树、二叉树、最优二叉树/解等等也很重要，前端也要会数据结构是我没想到的，总结一下用JavaScript实现数据结构中的栈、队列和链表中的双向链表。\n\n面试的时候被问到的数据结构题，当时是脑袋有点蒙的，用纸笔不知道怎么下手，过后自己写了一下其实并不难，尤其是栈和队列，可以直接直接用原生Array的pop()、push()、shift()、unshift()方法来实现，之前做JSON数据的时候还专门记录过这几个方法，真的是猪油蒙了心居然没写出来。\n\n<!--more-->\n\n#  栈、队列\n\n首先是栈和队列的实现，栈的核心思想是“先进后出”，队列的核心思想是“先进先出”，上课那会老师就不停得强调他们的区别，队列就像排队，先进先出；而栈是不讲道理的，先进后出。如果你当销售，先生产的产品堆压在仓库而把最新生产的产品拿来卖，到最后你可能会被老板批成PPT。\n\n先是栈的实现，看一下主要要实现的方法：\n\n- pop()：栈顶元素出栈并返回\n- push(el)：新元素入栈\n- peek()：返回栈顶元素\n- size()：返回栈的长度\n- isEmpty()：返回栈是否为空\n- clear()：清空栈\n- print()：打印栈\n\n```javascript\nclass Stack {\n  constructor(...val){\n    this.values = [...val]\n  }\n  pop(){\n    return this.values.pop()\n  }\n  push(val){\n    this.values.push(val)\n  }\n  peek(){\n    return this.values[this.values.length-1]\n  }\n  size(){\n    return this.values.length\n  }\n  isEmpty(){\n    return this.values.length == 0\n  }\n  clear(){\n    this.values = []\n  }\n  print(){\n    console.log(this.values.toString())\n  }\n}\n```\n\n然后是队列的实现，和栈的实现非常相似：\n\n- dequeue()：头元素出列\n- enqueue(el)：新元素入列\n- front()：返回队列头\n- size()：返回队列的长度\n- isEmpty()：返回是否为空队列\n- clear()：清空队列\n- print()：打印队列\n\n```javascript\nclass Queue {\n  constructor(...val){\n    this.values = [...val]\n  }\n  dequeue(){\n    return this.values.shift()\n  }\n  enqueue(val){\n    this.values.push(val)\n  }\n  front(){\n    return this.values[0]\n  }\n  size(){\n    return this.values.length\n  }\n  isEmpty(){\n    return this.values.length == 0\n  }\n  clear(){\n    this.values = []\n  }\n  print(){\n    console.log(this.values.toString())\n  }\n}\n```\n\n# 双向链表\n\n相比较于栈和队列，双向链表就稍微复杂一点。双向链表是没有顺序的，但是每个结点（Node）都会有指针（Pointer）指向该结点的前结点（Previous）和后结点（Next），还有一个头指针（Head）和尾指针（Tail）分别指向链表的头结点和尾结点，如果没有则指向`Null`，也即是空指针（Null Pointer），理论可能说不太清楚，还是图解比较条理清晰\n\n![image-20201221191959448](JavaScript实现数据结构的栈、队列和双向链表.assets/image-20201221191959448.png)\n\n然后是实现，首先我们得有一个结点类Node，包含前指针、后指针和数据：\n\n```javascript\nclass Node {\n  constructor(el) {\n    this.element = el\n    this.previous = null\n    this.next = null\n  }\n  toString(){\n    return this.element\n  }\n}\n```\n\n然后是链表的实现：\n\n- append(el)：添加结点元素\n- insert(position, el)：指定位置插入结点元素\n- getNode(position)：得到指定位置结点元素\n- get(position)：得到指定位置结点数据\n- indexOf(el)：返回指定结点的下标\n- update(position, el)：更新指定位置的结点\n- removeAt(position)：删除指定位置的结点\n- isEmpty()：返回链表是否为空\n- size()：返回链表的长度\n- toString()：重写toString()方法（因为数据结构是自定义的Node）\n- backwardString()：反序遍历输出结点数据\n- forwardString()：顺序遍历输出结点数据\n\n该有的注释都解释在代码里面了。\n\n```javascript\nclass DoubleLinkList {\n  head = null\n  tail = null\n  size = 0\n  append(el) {\n    if (this.size == 0) {\n      // 链表长度为零的时候\n      this.head = this.tail = el\n      this.size++\n      return\n    }\n    // 链表长度不是零的时候：从尾部添加\n    el.previous = this.tail\n    this.tail.next = el\n    this.tail = el\n    this.size++\n  }\n  insert(position, el) {\n    let current = null\n    // 插入位置在长度之外就默认添加到尾部\n    if(position >= this.size)\n      return this.append(el)\n    // 插入位置在链表头部之前默认插入到头部\n    if(position <= 0){\n      current = this.head\n      current.previous = el\n      el.next = current\n      this.head = el\n      this.size++\n      return\n    }\n    // 在中间插入\n    current = this.getNode(position)\n    el.previous = current.previous\n    el.next = current\n    current.previous.next = el\n    current.previous = el\n    this.size++\n  }\n  getNode(position) {\n    let index = 0\n    let current = null\n    // 如果链表为空\n    if (this.isEmpty())\n      return\n    // 如果溢出链表\n    if(position >= this.size || position < 0)\n      return\n    // 如果在在链表前半段，从头遍历\n    if((this.size / 2) > position){\n      current = this.head\n      while (index++ < position) {\n        current = current.next\n      }\n    } else {\n    // 如果在后半段，从尾遍历\n      current = this.tail\n      index = this.size - 1\n      while (index-- > position) {\n        current = current.previous\n      }\n    }\n    return current\n  }\n  get(position) {\n  // 和上一个方法一样，只不过返回的是结点的数据\n    let index = 0\n    let current = null\n    if (this.size == 0)\n      return\n    if(position >= this.size || position < 0)\n      return\n    if((this.size / 2) > position){\n      current = this.head\n      while (index++ < position) {\n        current = current.next\n      }\n    } else {\n      current = this.tail\n      index = this.size - 1\n      while (index-- > position) {\n        current = current.previous\n      }\n    }\n    return current.element\n  }\n  indexOf(el) {\n    let current = this.head\n    let index = 0\n    while(current){\n      // 从头遍历，符合结点返回下标否则返回-1\n      if(el.element == current.element)\n        return index\n      current = current.next\n      index++\n    }\n    return -1\n  }\n  update(position, el) {\n    if(position >= this.size || position < 0)\n    // 越界判断\n      return\n    let current = this.getNode(position)\n    current.element = el.element\n  }\n  removeAt(position) {\n    // 越界判断\n    if(position >= this.size || position < 0)\n      return\n    // 只有一个结点的时候\n    if(this.size == 1){\n      this.head = this.tail = null\n      this.size--\n      return\n    }\n    // 删除头结点的时候\n    if(position == 0){\n      this.head = this.head.next\n      this.head.previous = null\n      this.size--\n      return\n    }\n    // 删除尾结点的时候\n    if(position == this.size - 1){\n      this.tail = this.tail.previous\n      this.tail.next = null\n      this.size--\n      return\n    }\n    // 删除中间结点\n    let current = this.getNode(position)\n    current.previous.next = current.next\n    current.next.previous = current.previous\n    this.size--\n  }\n  isEmpty() {\n    return this.size == 0\n  }\n  size(){\n    return this.size\n  }\n  toString() {\n    return this.forwardString()\n  }\n  forwardString() {\n    // 从头开始遍历\n    let result = []\n    let current = this.head\n    while(current){\n      result.push(current.element)\n      current = current.next\n    }\n    return result.join(',')\n  }\n  backwardString() {\n    // 从尾开始遍历\n    let result = []\n    let current = this.tail\n    while(current){\n      result.push(current.element)\n      current = current.previous\n    }\n    return result.join(',')\n  }\n}\n```\n\n","source":"_posts/JavaScript实现数据结构的栈、队列和双向链表.md","raw":"---\ntitle: JavaScript实现数据结构的栈、队列和双向链表\ndate: 2020/12/22 12:57\ncategory: [javascript]\ntags: [数据结构, 栈, 队列, 链表]\n---\n\n\n数据结构中的栈、队列和链表应该是最基础的了，还有像是图、树、二叉树、最优二叉树/解等等也很重要，前端也要会数据结构是我没想到的，总结一下用JavaScript实现数据结构中的栈、队列和链表中的双向链表。\n\n面试的时候被问到的数据结构题，当时是脑袋有点蒙的，用纸笔不知道怎么下手，过后自己写了一下其实并不难，尤其是栈和队列，可以直接直接用原生Array的pop()、push()、shift()、unshift()方法来实现，之前做JSON数据的时候还专门记录过这几个方法，真的是猪油蒙了心居然没写出来。\n\n<!--more-->\n\n#  栈、队列\n\n首先是栈和队列的实现，栈的核心思想是“先进后出”，队列的核心思想是“先进先出”，上课那会老师就不停得强调他们的区别，队列就像排队，先进先出；而栈是不讲道理的，先进后出。如果你当销售，先生产的产品堆压在仓库而把最新生产的产品拿来卖，到最后你可能会被老板批成PPT。\n\n先是栈的实现，看一下主要要实现的方法：\n\n- pop()：栈顶元素出栈并返回\n- push(el)：新元素入栈\n- peek()：返回栈顶元素\n- size()：返回栈的长度\n- isEmpty()：返回栈是否为空\n- clear()：清空栈\n- print()：打印栈\n\n```javascript\nclass Stack {\n  constructor(...val){\n    this.values = [...val]\n  }\n  pop(){\n    return this.values.pop()\n  }\n  push(val){\n    this.values.push(val)\n  }\n  peek(){\n    return this.values[this.values.length-1]\n  }\n  size(){\n    return this.values.length\n  }\n  isEmpty(){\n    return this.values.length == 0\n  }\n  clear(){\n    this.values = []\n  }\n  print(){\n    console.log(this.values.toString())\n  }\n}\n```\n\n然后是队列的实现，和栈的实现非常相似：\n\n- dequeue()：头元素出列\n- enqueue(el)：新元素入列\n- front()：返回队列头\n- size()：返回队列的长度\n- isEmpty()：返回是否为空队列\n- clear()：清空队列\n- print()：打印队列\n\n```javascript\nclass Queue {\n  constructor(...val){\n    this.values = [...val]\n  }\n  dequeue(){\n    return this.values.shift()\n  }\n  enqueue(val){\n    this.values.push(val)\n  }\n  front(){\n    return this.values[0]\n  }\n  size(){\n    return this.values.length\n  }\n  isEmpty(){\n    return this.values.length == 0\n  }\n  clear(){\n    this.values = []\n  }\n  print(){\n    console.log(this.values.toString())\n  }\n}\n```\n\n# 双向链表\n\n相比较于栈和队列，双向链表就稍微复杂一点。双向链表是没有顺序的，但是每个结点（Node）都会有指针（Pointer）指向该结点的前结点（Previous）和后结点（Next），还有一个头指针（Head）和尾指针（Tail）分别指向链表的头结点和尾结点，如果没有则指向`Null`，也即是空指针（Null Pointer），理论可能说不太清楚，还是图解比较条理清晰\n\n![image-20201221191959448](JavaScript实现数据结构的栈、队列和双向链表.assets/image-20201221191959448.png)\n\n然后是实现，首先我们得有一个结点类Node，包含前指针、后指针和数据：\n\n```javascript\nclass Node {\n  constructor(el) {\n    this.element = el\n    this.previous = null\n    this.next = null\n  }\n  toString(){\n    return this.element\n  }\n}\n```\n\n然后是链表的实现：\n\n- append(el)：添加结点元素\n- insert(position, el)：指定位置插入结点元素\n- getNode(position)：得到指定位置结点元素\n- get(position)：得到指定位置结点数据\n- indexOf(el)：返回指定结点的下标\n- update(position, el)：更新指定位置的结点\n- removeAt(position)：删除指定位置的结点\n- isEmpty()：返回链表是否为空\n- size()：返回链表的长度\n- toString()：重写toString()方法（因为数据结构是自定义的Node）\n- backwardString()：反序遍历输出结点数据\n- forwardString()：顺序遍历输出结点数据\n\n该有的注释都解释在代码里面了。\n\n```javascript\nclass DoubleLinkList {\n  head = null\n  tail = null\n  size = 0\n  append(el) {\n    if (this.size == 0) {\n      // 链表长度为零的时候\n      this.head = this.tail = el\n      this.size++\n      return\n    }\n    // 链表长度不是零的时候：从尾部添加\n    el.previous = this.tail\n    this.tail.next = el\n    this.tail = el\n    this.size++\n  }\n  insert(position, el) {\n    let current = null\n    // 插入位置在长度之外就默认添加到尾部\n    if(position >= this.size)\n      return this.append(el)\n    // 插入位置在链表头部之前默认插入到头部\n    if(position <= 0){\n      current = this.head\n      current.previous = el\n      el.next = current\n      this.head = el\n      this.size++\n      return\n    }\n    // 在中间插入\n    current = this.getNode(position)\n    el.previous = current.previous\n    el.next = current\n    current.previous.next = el\n    current.previous = el\n    this.size++\n  }\n  getNode(position) {\n    let index = 0\n    let current = null\n    // 如果链表为空\n    if (this.isEmpty())\n      return\n    // 如果溢出链表\n    if(position >= this.size || position < 0)\n      return\n    // 如果在在链表前半段，从头遍历\n    if((this.size / 2) > position){\n      current = this.head\n      while (index++ < position) {\n        current = current.next\n      }\n    } else {\n    // 如果在后半段，从尾遍历\n      current = this.tail\n      index = this.size - 1\n      while (index-- > position) {\n        current = current.previous\n      }\n    }\n    return current\n  }\n  get(position) {\n  // 和上一个方法一样，只不过返回的是结点的数据\n    let index = 0\n    let current = null\n    if (this.size == 0)\n      return\n    if(position >= this.size || position < 0)\n      return\n    if((this.size / 2) > position){\n      current = this.head\n      while (index++ < position) {\n        current = current.next\n      }\n    } else {\n      current = this.tail\n      index = this.size - 1\n      while (index-- > position) {\n        current = current.previous\n      }\n    }\n    return current.element\n  }\n  indexOf(el) {\n    let current = this.head\n    let index = 0\n    while(current){\n      // 从头遍历，符合结点返回下标否则返回-1\n      if(el.element == current.element)\n        return index\n      current = current.next\n      index++\n    }\n    return -1\n  }\n  update(position, el) {\n    if(position >= this.size || position < 0)\n    // 越界判断\n      return\n    let current = this.getNode(position)\n    current.element = el.element\n  }\n  removeAt(position) {\n    // 越界判断\n    if(position >= this.size || position < 0)\n      return\n    // 只有一个结点的时候\n    if(this.size == 1){\n      this.head = this.tail = null\n      this.size--\n      return\n    }\n    // 删除头结点的时候\n    if(position == 0){\n      this.head = this.head.next\n      this.head.previous = null\n      this.size--\n      return\n    }\n    // 删除尾结点的时候\n    if(position == this.size - 1){\n      this.tail = this.tail.previous\n      this.tail.next = null\n      this.size--\n      return\n    }\n    // 删除中间结点\n    let current = this.getNode(position)\n    current.previous.next = current.next\n    current.next.previous = current.previous\n    this.size--\n  }\n  isEmpty() {\n    return this.size == 0\n  }\n  size(){\n    return this.size\n  }\n  toString() {\n    return this.forwardString()\n  }\n  forwardString() {\n    // 从头开始遍历\n    let result = []\n    let current = this.head\n    while(current){\n      result.push(current.element)\n      current = current.next\n    }\n    return result.join(',')\n  }\n  backwardString() {\n    // 从尾开始遍历\n    let result = []\n    let current = this.tail\n    while(current){\n      result.push(current.element)\n      current = current.previous\n    }\n    return result.join(',')\n  }\n}\n```\n\n","slug":"JavaScript实现数据结构的栈、队列和双向链表","published":1,"updated":"2021-10-27T16:51:01.303Z","_id":"ckv9n0n18001c3sw2fj6lgdbr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>数据结构中的栈、队列和链表应该是最基础的了，还有像是图、树、二叉树、最优二叉树/解等等也很重要，前端也要会数据结构是我没想到的，总结一下用JavaScript实现数据结构中的栈、队列和链表中的双向链表。</p>\n<p>面试的时候被问到的数据结构题，当时是脑袋有点蒙的，用纸笔不知道怎么下手，过后自己写了一下其实并不难，尤其是栈和队列，可以直接直接用原生Array的pop()、push()、shift()、unshift()方法来实现，之前做JSON数据的时候还专门记录过这几个方法，真的是猪油蒙了心居然没写出来。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"栈、队列\"><a href=\"#栈、队列\" class=\"headerlink\" title=\"栈、队列\"></a>栈、队列</h1><p>首先是栈和队列的实现，栈的核心思想是“先进后出”，队列的核心思想是“先进先出”，上课那会老师就不停得强调他们的区别，队列就像排队，先进先出；而栈是不讲道理的，先进后出。如果你当销售，先生产的产品堆压在仓库而把最新生产的产品拿来卖，到最后你可能会被老板批成PPT。</p>\n<p>先是栈的实现，看一下主要要实现的方法：</p>\n<ul>\n<li>pop()：栈顶元素出栈并返回</li>\n<li>push(el)：新元素入栈</li>\n<li>peek()：返回栈顶元素</li>\n<li>size()：返回栈的长度</li>\n<li>isEmpty()：返回栈是否为空</li>\n<li>clear()：清空栈</li>\n<li>print()：打印栈</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Stack</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">...val</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.values = [...val]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">pop</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values.pop()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">push</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.values.push(val)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">peek</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values[<span class=\"built_in\">this</span>.values.length-<span class=\"number\">1</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">size</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values.length</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">isEmpty</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values.length == <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">clear</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.values = []</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">print</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.values.toString())</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后是队列的实现，和栈的实现非常相似：</p>\n<ul>\n<li>dequeue()：头元素出列</li>\n<li>enqueue(el)：新元素入列</li>\n<li>front()：返回队列头</li>\n<li>size()：返回队列的长度</li>\n<li>isEmpty()：返回是否为空队列</li>\n<li>clear()：清空队列</li>\n<li>print()：打印队列</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Queue</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">...val</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.values = [...val]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">dequeue</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values.shift()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">enqueue</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.values.push(val)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">front</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values[<span class=\"number\">0</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">size</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values.length</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">isEmpty</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values.length == <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">clear</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.values = []</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">print</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.values.toString())</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"双向链表\"><a href=\"#双向链表\" class=\"headerlink\" title=\"双向链表\"></a>双向链表</h1><p>相比较于栈和队列，双向链表就稍微复杂一点。双向链表是没有顺序的，但是每个结点（Node）都会有指针（Pointer）指向该结点的前结点（Previous）和后结点（Next），还有一个头指针（Head）和尾指针（Tail）分别指向链表的头结点和尾结点，如果没有则指向<code>Null</code>，也即是空指针（Null Pointer），理论可能说不太清楚，还是图解比较条理清晰</p>\n<p><img src=\"JavaScript%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E6%A0%88%E3%80%81%E9%98%9F%E5%88%97%E5%92%8C%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8.assets/image-20201221191959448.png\" alt=\"image-20201221191959448\"></p>\n<p>然后是实现，首先我们得有一个结点类Node，包含前指针、后指针和数据：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Node</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">el</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.element = el</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.previous = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.next = <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">toString</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.element</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后是链表的实现：</p>\n<ul>\n<li>append(el)：添加结点元素</li>\n<li>insert(position, el)：指定位置插入结点元素</li>\n<li>getNode(position)：得到指定位置结点元素</li>\n<li>get(position)：得到指定位置结点数据</li>\n<li>indexOf(el)：返回指定结点的下标</li>\n<li>update(position, el)：更新指定位置的结点</li>\n<li>removeAt(position)：删除指定位置的结点</li>\n<li>isEmpty()：返回链表是否为空</li>\n<li>size()：返回链表的长度</li>\n<li>toString()：重写toString()方法（因为数据结构是自定义的Node）</li>\n<li>backwardString()：反序遍历输出结点数据</li>\n<li>forwardString()：顺序遍历输出结点数据</li>\n</ul>\n<p>该有的注释都解释在代码里面了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DoubleLinkList</span> </span>&#123;</span><br><span class=\"line\">  head = <span class=\"literal\">null</span></span><br><span class=\"line\">  tail = <span class=\"literal\">null</span></span><br><span class=\"line\">  size = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">append</span>(<span class=\"params\">el</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.size == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 链表长度为零的时候</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.head = <span class=\"built_in\">this</span>.tail = el</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.size++</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 链表长度不是零的时候：从尾部添加</span></span><br><span class=\"line\">    el.previous = <span class=\"built_in\">this</span>.tail</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.tail.next = el</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.tail = el</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.size++</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">insert</span>(<span class=\"params\">position, el</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"comment\">// 插入位置在长度之外就默认添加到尾部</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position &gt;= <span class=\"built_in\">this</span>.size)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.append(el)</span><br><span class=\"line\">    <span class=\"comment\">// 插入位置在链表头部之前默认插入到头部</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position &lt;= <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">      current = <span class=\"built_in\">this</span>.head</span><br><span class=\"line\">      current.previous = el</span><br><span class=\"line\">      el.next = current</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.head = el</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.size++</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 在中间插入</span></span><br><span class=\"line\">    current = <span class=\"built_in\">this</span>.getNode(position)</span><br><span class=\"line\">    el.previous = current.previous</span><br><span class=\"line\">    el.next = current</span><br><span class=\"line\">    current.previous.next = el</span><br><span class=\"line\">    current.previous = el</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.size++</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">getNode</span>(<span class=\"params\">position</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果链表为空</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.isEmpty())</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果溢出链表</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position &gt;= <span class=\"built_in\">this</span>.size || position &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果在在链表前半段，从头遍历</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>((<span class=\"built_in\">this</span>.size / <span class=\"number\">2</span>) &gt; position)&#123;</span><br><span class=\"line\">      current = <span class=\"built_in\">this</span>.head</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (index++ &lt; position) &#123;</span><br><span class=\"line\">        current = current.next</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果在后半段，从尾遍历</span></span><br><span class=\"line\">      current = <span class=\"built_in\">this</span>.tail</span><br><span class=\"line\">      index = <span class=\"built_in\">this</span>.size - <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (index-- &gt; position) &#123;</span><br><span class=\"line\">        current = current.previous</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> current</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\">position</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 和上一个方法一样，只不过返回的是结点的数据</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.size == <span class=\"number\">0</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position &gt;= <span class=\"built_in\">this</span>.size || position &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>((<span class=\"built_in\">this</span>.size / <span class=\"number\">2</span>) &gt; position)&#123;</span><br><span class=\"line\">      current = <span class=\"built_in\">this</span>.head</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (index++ &lt; position) &#123;</span><br><span class=\"line\">        current = current.next</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      current = <span class=\"built_in\">this</span>.tail</span><br><span class=\"line\">      index = <span class=\"built_in\">this</span>.size - <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (index-- &gt; position) &#123;</span><br><span class=\"line\">        current = current.previous</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> current.element</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">indexOf</span>(<span class=\"params\">el</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"built_in\">this</span>.head</span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(current)&#123;</span><br><span class=\"line\">      <span class=\"comment\">// 从头遍历，符合结点返回下标否则返回-1</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(el.element == current.element)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> index</span><br><span class=\"line\">      current = current.next</span><br><span class=\"line\">      index++</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">update</span>(<span class=\"params\">position, el</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position &gt;= <span class=\"built_in\">this</span>.size || position &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 越界判断</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"built_in\">this</span>.getNode(position)</span><br><span class=\"line\">    current.element = el.element</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">removeAt</span>(<span class=\"params\">position</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 越界判断</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position &gt;= <span class=\"built_in\">this</span>.size || position &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"comment\">// 只有一个结点的时候</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">this</span>.size == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.head = <span class=\"built_in\">this</span>.tail = <span class=\"literal\">null</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.size--</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 删除头结点的时候</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.head = <span class=\"built_in\">this</span>.head.next</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.head.previous = <span class=\"literal\">null</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.size--</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 删除尾结点的时候</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position == <span class=\"built_in\">this</span>.size - <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.tail = <span class=\"built_in\">this</span>.tail.previous</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.tail.next = <span class=\"literal\">null</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.size--</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 删除中间结点</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"built_in\">this</span>.getNode(position)</span><br><span class=\"line\">    current.previous.next = current.next</span><br><span class=\"line\">    current.next.previous = current.previous</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.size--</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">isEmpty</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.size == <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">size</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.size</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">toString</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.forwardString()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">forwardString</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 从头开始遍历</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = []</span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"built_in\">this</span>.head</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(current)&#123;</span><br><span class=\"line\">      result.push(current.element)</span><br><span class=\"line\">      current = current.next</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result.join(<span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">backwardString</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 从尾开始遍历</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = []</span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"built_in\">this</span>.tail</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(current)&#123;</span><br><span class=\"line\">      result.push(current.element)</span><br><span class=\"line\">      current = current.previous</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result.join(<span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>数据结构中的栈、队列和链表应该是最基础的了，还有像是图、树、二叉树、最优二叉树/解等等也很重要，前端也要会数据结构是我没想到的，总结一下用JavaScript实现数据结构中的栈、队列和链表中的双向链表。</p>\n<p>面试的时候被问到的数据结构题，当时是脑袋有点蒙的，用纸笔不知道怎么下手，过后自己写了一下其实并不难，尤其是栈和队列，可以直接直接用原生Array的pop()、push()、shift()、unshift()方法来实现，之前做JSON数据的时候还专门记录过这几个方法，真的是猪油蒙了心居然没写出来。</p>","more":"<h1 id=\"栈、队列\"><a href=\"#栈、队列\" class=\"headerlink\" title=\"栈、队列\"></a>栈、队列</h1><p>首先是栈和队列的实现，栈的核心思想是“先进后出”，队列的核心思想是“先进先出”，上课那会老师就不停得强调他们的区别，队列就像排队，先进先出；而栈是不讲道理的，先进后出。如果你当销售，先生产的产品堆压在仓库而把最新生产的产品拿来卖，到最后你可能会被老板批成PPT。</p>\n<p>先是栈的实现，看一下主要要实现的方法：</p>\n<ul>\n<li>pop()：栈顶元素出栈并返回</li>\n<li>push(el)：新元素入栈</li>\n<li>peek()：返回栈顶元素</li>\n<li>size()：返回栈的长度</li>\n<li>isEmpty()：返回栈是否为空</li>\n<li>clear()：清空栈</li>\n<li>print()：打印栈</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Stack</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">...val</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.values = [...val]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">pop</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values.pop()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">push</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.values.push(val)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">peek</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values[<span class=\"built_in\">this</span>.values.length-<span class=\"number\">1</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">size</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values.length</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">isEmpty</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values.length == <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">clear</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.values = []</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">print</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.values.toString())</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后是队列的实现，和栈的实现非常相似：</p>\n<ul>\n<li>dequeue()：头元素出列</li>\n<li>enqueue(el)：新元素入列</li>\n<li>front()：返回队列头</li>\n<li>size()：返回队列的长度</li>\n<li>isEmpty()：返回是否为空队列</li>\n<li>clear()：清空队列</li>\n<li>print()：打印队列</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Queue</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">...val</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.values = [...val]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">dequeue</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values.shift()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">enqueue</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.values.push(val)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">front</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values[<span class=\"number\">0</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">size</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values.length</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">isEmpty</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.values.length == <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">clear</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.values = []</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">print</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.values.toString())</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"双向链表\"><a href=\"#双向链表\" class=\"headerlink\" title=\"双向链表\"></a>双向链表</h1><p>相比较于栈和队列，双向链表就稍微复杂一点。双向链表是没有顺序的，但是每个结点（Node）都会有指针（Pointer）指向该结点的前结点（Previous）和后结点（Next），还有一个头指针（Head）和尾指针（Tail）分别指向链表的头结点和尾结点，如果没有则指向<code>Null</code>，也即是空指针（Null Pointer），理论可能说不太清楚，还是图解比较条理清晰</p>\n<p><img src=\"JavaScript%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E6%A0%88%E3%80%81%E9%98%9F%E5%88%97%E5%92%8C%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8.assets/image-20201221191959448.png\" alt=\"image-20201221191959448\"></p>\n<p>然后是实现，首先我们得有一个结点类Node，包含前指针、后指针和数据：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Node</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">constructor</span>(<span class=\"params\">el</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.element = el</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.previous = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"built_in\">this</span>.next = <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">toString</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.element</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后是链表的实现：</p>\n<ul>\n<li>append(el)：添加结点元素</li>\n<li>insert(position, el)：指定位置插入结点元素</li>\n<li>getNode(position)：得到指定位置结点元素</li>\n<li>get(position)：得到指定位置结点数据</li>\n<li>indexOf(el)：返回指定结点的下标</li>\n<li>update(position, el)：更新指定位置的结点</li>\n<li>removeAt(position)：删除指定位置的结点</li>\n<li>isEmpty()：返回链表是否为空</li>\n<li>size()：返回链表的长度</li>\n<li>toString()：重写toString()方法（因为数据结构是自定义的Node）</li>\n<li>backwardString()：反序遍历输出结点数据</li>\n<li>forwardString()：顺序遍历输出结点数据</li>\n</ul>\n<p>该有的注释都解释在代码里面了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DoubleLinkList</span> </span>&#123;</span><br><span class=\"line\">  head = <span class=\"literal\">null</span></span><br><span class=\"line\">  tail = <span class=\"literal\">null</span></span><br><span class=\"line\">  size = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">append</span>(<span class=\"params\">el</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.size == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 链表长度为零的时候</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.head = <span class=\"built_in\">this</span>.tail = el</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.size++</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 链表长度不是零的时候：从尾部添加</span></span><br><span class=\"line\">    el.previous = <span class=\"built_in\">this</span>.tail</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.tail.next = el</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.tail = el</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.size++</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">insert</span>(<span class=\"params\">position, el</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"comment\">// 插入位置在长度之外就默认添加到尾部</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position &gt;= <span class=\"built_in\">this</span>.size)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.append(el)</span><br><span class=\"line\">    <span class=\"comment\">// 插入位置在链表头部之前默认插入到头部</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position &lt;= <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">      current = <span class=\"built_in\">this</span>.head</span><br><span class=\"line\">      current.previous = el</span><br><span class=\"line\">      el.next = current</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.head = el</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.size++</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 在中间插入</span></span><br><span class=\"line\">    current = <span class=\"built_in\">this</span>.getNode(position)</span><br><span class=\"line\">    el.previous = current.previous</span><br><span class=\"line\">    el.next = current</span><br><span class=\"line\">    current.previous.next = el</span><br><span class=\"line\">    current.previous = el</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.size++</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">getNode</span>(<span class=\"params\">position</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果链表为空</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.isEmpty())</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果溢出链表</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position &gt;= <span class=\"built_in\">this</span>.size || position &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果在在链表前半段，从头遍历</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>((<span class=\"built_in\">this</span>.size / <span class=\"number\">2</span>) &gt; position)&#123;</span><br><span class=\"line\">      current = <span class=\"built_in\">this</span>.head</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (index++ &lt; position) &#123;</span><br><span class=\"line\">        current = current.next</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果在后半段，从尾遍历</span></span><br><span class=\"line\">      current = <span class=\"built_in\">this</span>.tail</span><br><span class=\"line\">      index = <span class=\"built_in\">this</span>.size - <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (index-- &gt; position) &#123;</span><br><span class=\"line\">        current = current.previous</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> current</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\">position</span>)</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 和上一个方法一样，只不过返回的是结点的数据</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.size == <span class=\"number\">0</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position &gt;= <span class=\"built_in\">this</span>.size || position &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>((<span class=\"built_in\">this</span>.size / <span class=\"number\">2</span>) &gt; position)&#123;</span><br><span class=\"line\">      current = <span class=\"built_in\">this</span>.head</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (index++ &lt; position) &#123;</span><br><span class=\"line\">        current = current.next</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      current = <span class=\"built_in\">this</span>.tail</span><br><span class=\"line\">      index = <span class=\"built_in\">this</span>.size - <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (index-- &gt; position) &#123;</span><br><span class=\"line\">        current = current.previous</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> current.element</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">indexOf</span>(<span class=\"params\">el</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"built_in\">this</span>.head</span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(current)&#123;</span><br><span class=\"line\">      <span class=\"comment\">// 从头遍历，符合结点返回下标否则返回-1</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(el.element == current.element)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> index</span><br><span class=\"line\">      current = current.next</span><br><span class=\"line\">      index++</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">update</span>(<span class=\"params\">position, el</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position &gt;= <span class=\"built_in\">this</span>.size || position &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 越界判断</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"built_in\">this</span>.getNode(position)</span><br><span class=\"line\">    current.element = el.element</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">removeAt</span>(<span class=\"params\">position</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 越界判断</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position &gt;= <span class=\"built_in\">this</span>.size || position &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"comment\">// 只有一个结点的时候</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">this</span>.size == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.head = <span class=\"built_in\">this</span>.tail = <span class=\"literal\">null</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.size--</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 删除头结点的时候</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.head = <span class=\"built_in\">this</span>.head.next</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.head.previous = <span class=\"literal\">null</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.size--</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 删除尾结点的时候</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(position == <span class=\"built_in\">this</span>.size - <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.tail = <span class=\"built_in\">this</span>.tail.previous</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.tail.next = <span class=\"literal\">null</span></span><br><span class=\"line\">      <span class=\"built_in\">this</span>.size--</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 删除中间结点</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"built_in\">this</span>.getNode(position)</span><br><span class=\"line\">    current.previous.next = current.next</span><br><span class=\"line\">    current.next.previous = current.previous</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.size--</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">isEmpty</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.size == <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">size</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.size</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">toString</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.forwardString()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">forwardString</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 从头开始遍历</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = []</span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"built_in\">this</span>.head</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(current)&#123;</span><br><span class=\"line\">      result.push(current.element)</span><br><span class=\"line\">      current = current.next</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result.join(<span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">backwardString</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 从尾开始遍历</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = []</span><br><span class=\"line\">    <span class=\"keyword\">let</span> current = <span class=\"built_in\">this</span>.tail</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(current)&#123;</span><br><span class=\"line\">      result.push(current.element)</span><br><span class=\"line\">      current = current.previous</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result.join(<span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Promise的UnhandledPromiseRejectionWarning问题","date":"2021-02-25T13:33:00.000Z","_content":"\n\n在封装Nodejs对MySQL的CRUD API的时候遇到了`UnhandledPromiseRejectionWarning`提示，查询了解到这是Node.js 6.6.0中增加的一个特性：对 Promise 中未处理的 rejection 默认会输出 `UnhandledPromiseRejectionWarning` 提示。\n\n<!--more-->\n\n先看看我原来的code：\n\n```javascript\nnew Promise((resolve, reject)=>{\n\tif(2>1) reject('foo')\n\tresolve('bar')\n})\n```\n\n也就是说，如果你定义的Promise没有进行Catch处理Rejection这种情况，就会有这个提示，解决方法有几个：\n\n1. 直接用resolve来返回错误代码而不用reject\n\n    反正最后promise都要返回点什么，用reject还是resolve有什么区别呢，我只要在用的时候根据返回的对象去主动判断这个promise是否是成功的也能达到一样的效果。\n\n    ```javascript\n    new Promise((resolve, reject)=>{\n    \tif(2>1) resolve({status: 0, msg: \"foo\"})\n    \tresolve({status: 1, msg: \"bar\"})\n    })\n    ```\n\n2. 直接在Promise里用空函数处理\n\n    ```javascript\n    new Promise((resolve, reject)=>{\n        if(2>1) reject(\"foo\")\n        resolve(\"bar\")\n    }).catch(()=>{})\n    ```\n    \n3. 用node process的全局`unhandledRejection`事件来处理\n\n\t```javascript\n   process.on('unhandledRejection', error => {\n     console.log('我帮你处理了', error.message);\n   });\n   \n   new Promise((resolve, reject)=>{\n       if(2>1) reject(\"foo\")\n       resolve(\"bar\")\n   })\n   ```\n   \n   注意，这种情况下，全局的`unhandledRejection`事件会优先处理这个错误，也就是像第二种在Promise里用Catch处理是不会生效的。\n\n","source":"_posts/Promise的UnhandledPromiseRejectionWarning问题.md","raw":"---\ntitle: Promise的UnhandledPromiseRejectionWarning问题\ndate: 2021/02/25 21:33\ncategory: []\ntags: [promise]\n---\n\n\n在封装Nodejs对MySQL的CRUD API的时候遇到了`UnhandledPromiseRejectionWarning`提示，查询了解到这是Node.js 6.6.0中增加的一个特性：对 Promise 中未处理的 rejection 默认会输出 `UnhandledPromiseRejectionWarning` 提示。\n\n<!--more-->\n\n先看看我原来的code：\n\n```javascript\nnew Promise((resolve, reject)=>{\n\tif(2>1) reject('foo')\n\tresolve('bar')\n})\n```\n\n也就是说，如果你定义的Promise没有进行Catch处理Rejection这种情况，就会有这个提示，解决方法有几个：\n\n1. 直接用resolve来返回错误代码而不用reject\n\n    反正最后promise都要返回点什么，用reject还是resolve有什么区别呢，我只要在用的时候根据返回的对象去主动判断这个promise是否是成功的也能达到一样的效果。\n\n    ```javascript\n    new Promise((resolve, reject)=>{\n    \tif(2>1) resolve({status: 0, msg: \"foo\"})\n    \tresolve({status: 1, msg: \"bar\"})\n    })\n    ```\n\n2. 直接在Promise里用空函数处理\n\n    ```javascript\n    new Promise((resolve, reject)=>{\n        if(2>1) reject(\"foo\")\n        resolve(\"bar\")\n    }).catch(()=>{})\n    ```\n    \n3. 用node process的全局`unhandledRejection`事件来处理\n\n\t```javascript\n   process.on('unhandledRejection', error => {\n     console.log('我帮你处理了', error.message);\n   });\n   \n   new Promise((resolve, reject)=>{\n       if(2>1) reject(\"foo\")\n       resolve(\"bar\")\n   })\n   ```\n   \n   注意，这种情况下，全局的`unhandledRejection`事件会优先处理这个错误，也就是像第二种在Promise里用Catch处理是不会生效的。\n\n","slug":"Promise的UnhandledPromiseRejectionWarning问题","published":1,"updated":"2021-10-27T16:54:05.431Z","_id":"ckv9n0n1p001d3sw29n9f9ut5","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在封装Nodejs对MySQL的CRUD API的时候遇到了<code>UnhandledPromiseRejectionWarning</code>提示，查询了解到这是Node.js 6.6.0中增加的一个特性：对 Promise 中未处理的 rejection 默认会输出 <code>UnhandledPromiseRejectionWarning</code> 提示。</p>\n<span id=\"more\"></span>\n\n<p>先看看我原来的code：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"number\">2</span>&gt;<span class=\"number\">1</span>) reject(<span class=\"string\">&#x27;foo&#x27;</span>)</span><br><span class=\"line\">\tresolve(<span class=\"string\">&#x27;bar&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>也就是说，如果你定义的Promise没有进行Catch处理Rejection这种情况，就会有这个提示，解决方法有几个：</p>\n<ol>\n<li><p>直接用resolve来返回错误代码而不用reject</p>\n<p> 反正最后promise都要返回点什么，用reject还是resolve有什么区别呢，我只要在用的时候根据返回的对象去主动判断这个promise是否是成功的也能达到一样的效果。</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"number\">2</span>&gt;<span class=\"number\">1</span>) resolve(&#123;<span class=\"attr\">status</span>: <span class=\"number\">0</span>, <span class=\"attr\">msg</span>: <span class=\"string\">&quot;foo&quot;</span>&#125;)</span><br><span class=\"line\">\tresolve(&#123;<span class=\"attr\">status</span>: <span class=\"number\">1</span>, <span class=\"attr\">msg</span>: <span class=\"string\">&quot;bar&quot;</span>&#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li><p>直接在Promise里用空函数处理</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"number\">2</span>&gt;<span class=\"number\">1</span>) reject(<span class=\"string\">&quot;foo&quot;</span>)</span><br><span class=\"line\">    resolve(<span class=\"string\">&quot;bar&quot;</span>)</span><br><span class=\"line\">&#125;).catch(<span class=\"function\">()=&gt;</span>&#123;&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用node process的全局<code>unhandledRejection</code>事件来处理</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">process.on(<span class=\"string\">&#x27;unhandledRejection&#x27;</span>, <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;我帮你处理了&#x27;</span>, error.message);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"number\">2</span>&gt;<span class=\"number\">1</span>) reject(<span class=\"string\">&quot;foo&quot;</span>)</span><br><span class=\"line\">    resolve(<span class=\"string\">&quot;bar&quot;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>注意，这种情况下，全局的<code>unhandledRejection</code>事件会优先处理这个错误，也就是像第二种在Promise里用Catch处理是不会生效的。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>在封装Nodejs对MySQL的CRUD API的时候遇到了<code>UnhandledPromiseRejectionWarning</code>提示，查询了解到这是Node.js 6.6.0中增加的一个特性：对 Promise 中未处理的 rejection 默认会输出 <code>UnhandledPromiseRejectionWarning</code> 提示。</p>","more":"<p>先看看我原来的code：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"number\">2</span>&gt;<span class=\"number\">1</span>) reject(<span class=\"string\">&#x27;foo&#x27;</span>)</span><br><span class=\"line\">\tresolve(<span class=\"string\">&#x27;bar&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>也就是说，如果你定义的Promise没有进行Catch处理Rejection这种情况，就会有这个提示，解决方法有几个：</p>\n<ol>\n<li><p>直接用resolve来返回错误代码而不用reject</p>\n<p> 反正最后promise都要返回点什么，用reject还是resolve有什么区别呢，我只要在用的时候根据返回的对象去主动判断这个promise是否是成功的也能达到一样的效果。</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"number\">2</span>&gt;<span class=\"number\">1</span>) resolve(&#123;<span class=\"attr\">status</span>: <span class=\"number\">0</span>, <span class=\"attr\">msg</span>: <span class=\"string\">&quot;foo&quot;</span>&#125;)</span><br><span class=\"line\">\tresolve(&#123;<span class=\"attr\">status</span>: <span class=\"number\">1</span>, <span class=\"attr\">msg</span>: <span class=\"string\">&quot;bar&quot;</span>&#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></li>\n<li><p>直接在Promise里用空函数处理</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"number\">2</span>&gt;<span class=\"number\">1</span>) reject(<span class=\"string\">&quot;foo&quot;</span>)</span><br><span class=\"line\">    resolve(<span class=\"string\">&quot;bar&quot;</span>)</span><br><span class=\"line\">&#125;).catch(<span class=\"function\">()=&gt;</span>&#123;&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>用node process的全局<code>unhandledRejection</code>事件来处理</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">process.on(<span class=\"string\">&#x27;unhandledRejection&#x27;</span>, <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;我帮你处理了&#x27;</span>, error.message);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"number\">2</span>&gt;<span class=\"number\">1</span>) reject(<span class=\"string\">&quot;foo&quot;</span>)</span><br><span class=\"line\">    resolve(<span class=\"string\">&quot;bar&quot;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>注意，这种情况下，全局的<code>unhandledRejection</code>事件会优先处理这个错误，也就是像第二种在Promise里用Catch处理是不会生效的。</p>\n</li>\n</ol>"},{"title":"解决MySQL数据库登陆失败1045权限错误","date":"2020-12-17T09:51:00.000Z","_content":"\n\n从做完JavaWeb的项目之后，好久没打开过本地的MySQL，今天一打开突然就打不开了，反复确认了MySQL服务是在运行中，仍然是报1045权限错误。\n\n<!--more-->\n\n本地的MySQL只是用来调试，所以密码设置的很简单，也即是说不是因为密码错误才会出现1045错误，具体我也不了解，但是好像如果好久打开过MySQL就会大概率性遇到这个错误。\n\n首先打开MySQL安装目录，找到`my.ini`文件，MySQL的配置文件，打开找到`[mysqld]`这一行，在下面加一行\n```\nskip-grant-tables\n```\n然后保存，注意如果你的MySQL安装在C盘，得用管理员权限打开编辑器才能保存。然后打开服务管理重启MySQL，具体是`win+r`输入`services.msc`回车。\n\n然后打开MySQL，在输入密码的时候直接回车就可以进入了，进去之后\n```\nuse mysql;\nupdate user set password=password('123') where user = 'root' and host = 'localhost';\nflush privileges;\n```\n再次重启MySQL服务，登陆的时候输入你设置的密码就可以登录了。","source":"_posts/解决MySQL数据库登陆失败1045权限错误.md","raw":"---\ntitle: 解决MySQL数据库登陆失败1045权限错误\ndate: 2020/12/17 17:51\ncategory: []\ntags: [mysql]\n\n---\n\n\n从做完JavaWeb的项目之后，好久没打开过本地的MySQL，今天一打开突然就打不开了，反复确认了MySQL服务是在运行中，仍然是报1045权限错误。\n\n<!--more-->\n\n本地的MySQL只是用来调试，所以密码设置的很简单，也即是说不是因为密码错误才会出现1045错误，具体我也不了解，但是好像如果好久打开过MySQL就会大概率性遇到这个错误。\n\n首先打开MySQL安装目录，找到`my.ini`文件，MySQL的配置文件，打开找到`[mysqld]`这一行，在下面加一行\n```\nskip-grant-tables\n```\n然后保存，注意如果你的MySQL安装在C盘，得用管理员权限打开编辑器才能保存。然后打开服务管理重启MySQL，具体是`win+r`输入`services.msc`回车。\n\n然后打开MySQL，在输入密码的时候直接回车就可以进入了，进去之后\n```\nuse mysql;\nupdate user set password=password('123') where user = 'root' and host = 'localhost';\nflush privileges;\n```\n再次重启MySQL服务，登陆的时候输入你设置的密码就可以登录了。","slug":"解决MySQL数据库登陆失败1045权限错误","published":1,"updated":"2021-10-27T17:02:29.882Z","_id":"ckv9n0n22001e3sw23ku4ey08","comments":1,"layout":"post","photos":[],"link":"","content":"<p>从做完JavaWeb的项目之后，好久没打开过本地的MySQL，今天一打开突然就打不开了，反复确认了MySQL服务是在运行中，仍然是报1045权限错误。</p>\n<span id=\"more\"></span>\n\n<p>本地的MySQL只是用来调试，所以密码设置的很简单，也即是说不是因为密码错误才会出现1045错误，具体我也不了解，但是好像如果好久打开过MySQL就会大概率性遇到这个错误。</p>\n<p>首先打开MySQL安装目录，找到<code>my.ini</code>文件，MySQL的配置文件，打开找到<code>[mysqld]</code>这一行，在下面加一行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">skip-grant-tables</span><br></pre></td></tr></table></figure>\n<p>然后保存，注意如果你的MySQL安装在C盘，得用管理员权限打开编辑器才能保存。然后打开服务管理重启MySQL，具体是<code>win+r</code>输入<code>services.msc</code>回车。</p>\n<p>然后打开MySQL，在输入密码的时候直接回车就可以进入了，进去之后</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use mysql;</span><br><span class=\"line\">update user set password=password(&#x27;123&#x27;) where user = &#x27;root&#x27; and host = &#x27;localhost&#x27;;</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n<p>再次重启MySQL服务，登陆的时候输入你设置的密码就可以登录了。</p>\n","site":{"data":{}},"excerpt":"<p>从做完JavaWeb的项目之后，好久没打开过本地的MySQL，今天一打开突然就打不开了，反复确认了MySQL服务是在运行中，仍然是报1045权限错误。</p>","more":"<p>本地的MySQL只是用来调试，所以密码设置的很简单，也即是说不是因为密码错误才会出现1045错误，具体我也不了解，但是好像如果好久打开过MySQL就会大概率性遇到这个错误。</p>\n<p>首先打开MySQL安装目录，找到<code>my.ini</code>文件，MySQL的配置文件，打开找到<code>[mysqld]</code>这一行，在下面加一行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">skip-grant-tables</span><br></pre></td></tr></table></figure>\n<p>然后保存，注意如果你的MySQL安装在C盘，得用管理员权限打开编辑器才能保存。然后打开服务管理重启MySQL，具体是<code>win+r</code>输入<code>services.msc</code>回车。</p>\n<p>然后打开MySQL，在输入密码的时候直接回车就可以进入了，进去之后</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use mysql;</span><br><span class=\"line\">update user set password=password(&#x27;123&#x27;) where user = &#x27;root&#x27; and host = &#x27;localhost&#x27;;</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n<p>再次重启MySQL服务，登陆的时候输入你设置的密码就可以登录了。</p>"},{"title":"Express框架中请求内的错误处理","date":"2021-02-24T16:00:00.000Z","_content":"\n\n> Whichever method you use, if you want Express error handlers to be called in and the application to survive, you must ensure that Express receives the error.\n\nExpress官方文档中提到，要确保你的Express程序在遇到错误的时候不会宕机，就得确保Express能接收到程序抛出的错误。\n\n<!--more-->\n\n## uncaughtException导致的node宕机\n\n如上所说，Express程序必须手动处理**所有**可能抛出的错误才不会发生宕机，或者说降低宕机的风险，这和node是息息相关的，毕竟Express是基于Nodejs的，在node中，在遇到`uncaughtException`时会直接结束node进程，之前写过一篇文章\n\n[Promise的UnhandledPromiseRejectionWarning问题](https://fateguy.com/note/20.html)\n\n就是提到的node的这个特性，对Promise对象没有用`.catch()`来捕捉错误就会使node可能宕机。\n\n当然了我们可以用pm2或者forever之类的node进程管理工具来管理重启和记录错误，这样也更利于我们之后对程序进行修复。\n\n但是，在运行过程中，我们还是更希望我们的程序宕机的次数越少越好，如果我们的程序的Session是存储在内存中的，那么程序宕机重启之后，所有的用户登录状态也将不复存在。\n\n## Error Handler 错误处理函数\n\nExpress框架内置了一个错误处理函数（Error Handler），这个函数是以中间件（MiddleWare）的形式来使用的，只不过这个中间件和其他的中间件稍微不一样，那就是错误处理函数接受4个参数，比常规中间件多了接收错误的参数`err`。\n\n```javascript\napp.use(function(err, req, res, next) {\n  // 处理错误\n});\n```\n\n错误处理函数一般定义在所有路由之后，为了确保Express程序不会因为错误而宕机，则需要把错误抛给这个错误处理函数来处理，在请求内有两种方式把错误抛给错误处理函数。\n\n直接`throw new Error()`\n\n```javascript\napp.get('/', function (req, res) {\n  throw new Error('BROKEN') // Express will catch this on its own.\n})\n```\n\n或者在`next()`函数中传入错误对象\n\n```javascript\napp.get('/', function (req, res, next) {\n  fs.readFile('/file-does-not-exist', function (err, data) {\n    if (err) {\n      next(err) // Pass errors to Express.\n    } else {\n      res.send(data)\n    }\n  })\n})\n```\n\n直接抛出错误，或者在`next()`函数中传入错误对象都能直接跳过剩余的路由，直接进入错误处理函数。\n\n参考官方文档\n\n> If you pass anything to the `next()` function (except the string `'route'`), Express regards the current request as being an error and will skip any remaining non-error handling routing and middleware functions.\n\n## next()函数\n\n上面的官方文档说道 **except the string `'route'`**\n\n意思即是`next()`直接跳到下一个**中间件**；传的值是字符串`route`即`next('route')`时，直接跳到下一个**路由**；传入其他值都会跳到错误处理函数。\n\n- next()——跳到下一个中间件\n- next(‘route’)——跳到下一个路由\n- next(err)——跳到错误处理函数\n\n注意`next()`和`next('route')`是分别跳到下一个**中间件**和**路由**，经常看到说`next()`函数会跳到下一个路由的，其实这样说是不准确的，一个路由可以有多个中间件来处理\n\n```js\nmw1 = function(req, res, next){}\nmw2 = function(req, res, next){}\nmw3 = function(req, res, next){}\nmw4 = function(req, res, next){}\n\napp.get('/', mw1, mw2, mw3)\napp.get('/', mw4)\n```\n\n例如在`mw1`函数中调用了`next()`，实际上是跳到`mw2`开始执行，而如果我们调用的是`next('route')`，那么就会直接跳过`mw2`和`mw3`，直接开始执行`mw4`。\n\n之所以有时候混淆是因为经常一个路由我们只用一个函数来处理，而不是链式处理，一个路由一个函数处理，调用`next()`和调用`next('route')`的效果是一样的。\n\n值得一提的还有，在官方文档中还提到\n\n> Starting with Express 5, route handlers and middleware that return a Promise will call `next(value)` automatically when they reject or throw an error.\n\n也就是说，从Express5开始，在请求中或者中间件中的Promise对象，即使没有手动调用`next(err)`和`throw new Error()`，如果Promise中抛出了错误或者`reject`了，那么Express会自动调用`next(err)`，其中的`err`为Promise内抛出的错误或者`reject`的值，如果不存在就传入一个默认的`Error`对象。\n\n","source":"_posts/Express框架中请求内的错误处理.md","raw":"---\ntitle: Express框架中请求内的错误处理\ndate: 2021/02/25\ncategory: []\ntags: [express,promise]\n---\n\n\n> Whichever method you use, if you want Express error handlers to be called in and the application to survive, you must ensure that Express receives the error.\n\nExpress官方文档中提到，要确保你的Express程序在遇到错误的时候不会宕机，就得确保Express能接收到程序抛出的错误。\n\n<!--more-->\n\n## uncaughtException导致的node宕机\n\n如上所说，Express程序必须手动处理**所有**可能抛出的错误才不会发生宕机，或者说降低宕机的风险，这和node是息息相关的，毕竟Express是基于Nodejs的，在node中，在遇到`uncaughtException`时会直接结束node进程，之前写过一篇文章\n\n[Promise的UnhandledPromiseRejectionWarning问题](https://fateguy.com/note/20.html)\n\n就是提到的node的这个特性，对Promise对象没有用`.catch()`来捕捉错误就会使node可能宕机。\n\n当然了我们可以用pm2或者forever之类的node进程管理工具来管理重启和记录错误，这样也更利于我们之后对程序进行修复。\n\n但是，在运行过程中，我们还是更希望我们的程序宕机的次数越少越好，如果我们的程序的Session是存储在内存中的，那么程序宕机重启之后，所有的用户登录状态也将不复存在。\n\n## Error Handler 错误处理函数\n\nExpress框架内置了一个错误处理函数（Error Handler），这个函数是以中间件（MiddleWare）的形式来使用的，只不过这个中间件和其他的中间件稍微不一样，那就是错误处理函数接受4个参数，比常规中间件多了接收错误的参数`err`。\n\n```javascript\napp.use(function(err, req, res, next) {\n  // 处理错误\n});\n```\n\n错误处理函数一般定义在所有路由之后，为了确保Express程序不会因为错误而宕机，则需要把错误抛给这个错误处理函数来处理，在请求内有两种方式把错误抛给错误处理函数。\n\n直接`throw new Error()`\n\n```javascript\napp.get('/', function (req, res) {\n  throw new Error('BROKEN') // Express will catch this on its own.\n})\n```\n\n或者在`next()`函数中传入错误对象\n\n```javascript\napp.get('/', function (req, res, next) {\n  fs.readFile('/file-does-not-exist', function (err, data) {\n    if (err) {\n      next(err) // Pass errors to Express.\n    } else {\n      res.send(data)\n    }\n  })\n})\n```\n\n直接抛出错误，或者在`next()`函数中传入错误对象都能直接跳过剩余的路由，直接进入错误处理函数。\n\n参考官方文档\n\n> If you pass anything to the `next()` function (except the string `'route'`), Express regards the current request as being an error and will skip any remaining non-error handling routing and middleware functions.\n\n## next()函数\n\n上面的官方文档说道 **except the string `'route'`**\n\n意思即是`next()`直接跳到下一个**中间件**；传的值是字符串`route`即`next('route')`时，直接跳到下一个**路由**；传入其他值都会跳到错误处理函数。\n\n- next()——跳到下一个中间件\n- next(‘route’)——跳到下一个路由\n- next(err)——跳到错误处理函数\n\n注意`next()`和`next('route')`是分别跳到下一个**中间件**和**路由**，经常看到说`next()`函数会跳到下一个路由的，其实这样说是不准确的，一个路由可以有多个中间件来处理\n\n```js\nmw1 = function(req, res, next){}\nmw2 = function(req, res, next){}\nmw3 = function(req, res, next){}\nmw4 = function(req, res, next){}\n\napp.get('/', mw1, mw2, mw3)\napp.get('/', mw4)\n```\n\n例如在`mw1`函数中调用了`next()`，实际上是跳到`mw2`开始执行，而如果我们调用的是`next('route')`，那么就会直接跳过`mw2`和`mw3`，直接开始执行`mw4`。\n\n之所以有时候混淆是因为经常一个路由我们只用一个函数来处理，而不是链式处理，一个路由一个函数处理，调用`next()`和调用`next('route')`的效果是一样的。\n\n值得一提的还有，在官方文档中还提到\n\n> Starting with Express 5, route handlers and middleware that return a Promise will call `next(value)` automatically when they reject or throw an error.\n\n也就是说，从Express5开始，在请求中或者中间件中的Promise对象，即使没有手动调用`next(err)`和`throw new Error()`，如果Promise中抛出了错误或者`reject`了，那么Express会自动调用`next(err)`，其中的`err`为Promise内抛出的错误或者`reject`的值，如果不存在就传入一个默认的`Error`对象。\n\n","slug":"Express框架中请求内的错误处理","published":1,"updated":"2021-10-27T16:42:31.374Z","_id":"ckv9n0su8001h3sw259mof1ms","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>Whichever method you use, if you want Express error handlers to be called in and the application to survive, you must ensure that Express receives the error.</p>\n</blockquote>\n<p>Express官方文档中提到，要确保你的Express程序在遇到错误的时候不会宕机，就得确保Express能接收到程序抛出的错误。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"uncaughtException导致的node宕机\"><a href=\"#uncaughtException导致的node宕机\" class=\"headerlink\" title=\"uncaughtException导致的node宕机\"></a>uncaughtException导致的node宕机</h2><p>如上所说，Express程序必须手动处理<strong>所有</strong>可能抛出的错误才不会发生宕机，或者说降低宕机的风险，这和node是息息相关的，毕竟Express是基于Nodejs的，在node中，在遇到<code>uncaughtException</code>时会直接结束node进程，之前写过一篇文章</p>\n<p><a href=\"https://fateguy.com/note/20.html\">Promise的UnhandledPromiseRejectionWarning问题</a></p>\n<p>就是提到的node的这个特性，对Promise对象没有用<code>.catch()</code>来捕捉错误就会使node可能宕机。</p>\n<p>当然了我们可以用pm2或者forever之类的node进程管理工具来管理重启和记录错误，这样也更利于我们之后对程序进行修复。</p>\n<p>但是，在运行过程中，我们还是更希望我们的程序宕机的次数越少越好，如果我们的程序的Session是存储在内存中的，那么程序宕机重启之后，所有的用户登录状态也将不复存在。</p>\n<h2 id=\"Error-Handler-错误处理函数\"><a href=\"#Error-Handler-错误处理函数\" class=\"headerlink\" title=\"Error Handler 错误处理函数\"></a>Error Handler 错误处理函数</h2><p>Express框架内置了一个错误处理函数（Error Handler），这个函数是以中间件（MiddleWare）的形式来使用的，只不过这个中间件和其他的中间件稍微不一样，那就是错误处理函数接受4个参数，比常规中间件多了接收错误的参数<code>err</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, req, res, next</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 处理错误</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>错误处理函数一般定义在所有路由之后，为了确保Express程序不会因为错误而宕机，则需要把错误抛给这个错误处理函数来处理，在请求内有两种方式把错误抛给错误处理函数。</p>\n<p>直接<code>throw new Error()</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&#x27;BROKEN&#x27;</span>) <span class=\"comment\">// Express will catch this on its own.</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>或者在<code>next()</code>函数中传入错误对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">  fs.readFile(<span class=\"string\">&#x27;/file-does-not-exist&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, data</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">      next(err) <span class=\"comment\">// Pass errors to Express.</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      res.send(data)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>直接抛出错误，或者在<code>next()</code>函数中传入错误对象都能直接跳过剩余的路由，直接进入错误处理函数。</p>\n<p>参考官方文档</p>\n<blockquote>\n<p>If you pass anything to the <code>next()</code> function (except the string <code>&#39;route&#39;</code>), Express regards the current request as being an error and will skip any remaining non-error handling routing and middleware functions.</p>\n</blockquote>\n<h2 id=\"next-函数\"><a href=\"#next-函数\" class=\"headerlink\" title=\"next()函数\"></a>next()函数</h2><p>上面的官方文档说道 <strong>except the string <code>&#39;route&#39;</code></strong></p>\n<p>意思即是<code>next()</code>直接跳到下一个<strong>中间件</strong>；传的值是字符串<code>route</code>即<code>next(&#39;route&#39;)</code>时，直接跳到下一个<strong>路由</strong>；传入其他值都会跳到错误处理函数。</p>\n<ul>\n<li>next()——跳到下一个中间件</li>\n<li>next(‘route’)——跳到下一个路由</li>\n<li>next(err)——跳到错误处理函数</li>\n</ul>\n<p>注意<code>next()</code>和<code>next(&#39;route&#39;)</code>是分别跳到下一个<strong>中间件</strong>和<strong>路由</strong>，经常看到说<code>next()</code>函数会跳到下一个路由的，其实这样说是不准确的，一个路由可以有多个中间件来处理</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mw1 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;&#125;</span><br><span class=\"line\">mw2 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;&#125;</span><br><span class=\"line\">mw3 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;&#125;</span><br><span class=\"line\">mw4 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">app.get(<span class=\"string\">&#x27;/&#x27;</span>, mw1, mw2, mw3)</span><br><span class=\"line\">app.get(<span class=\"string\">&#x27;/&#x27;</span>, mw4)</span><br></pre></td></tr></table></figure>\n\n<p>例如在<code>mw1</code>函数中调用了<code>next()</code>，实际上是跳到<code>mw2</code>开始执行，而如果我们调用的是<code>next(&#39;route&#39;)</code>，那么就会直接跳过<code>mw2</code>和<code>mw3</code>，直接开始执行<code>mw4</code>。</p>\n<p>之所以有时候混淆是因为经常一个路由我们只用一个函数来处理，而不是链式处理，一个路由一个函数处理，调用<code>next()</code>和调用<code>next(&#39;route&#39;)</code>的效果是一样的。</p>\n<p>值得一提的还有，在官方文档中还提到</p>\n<blockquote>\n<p>Starting with Express 5, route handlers and middleware that return a Promise will call <code>next(value)</code> automatically when they reject or throw an error.</p>\n</blockquote>\n<p>也就是说，从Express5开始，在请求中或者中间件中的Promise对象，即使没有手动调用<code>next(err)</code>和<code>throw new Error()</code>，如果Promise中抛出了错误或者<code>reject</code>了，那么Express会自动调用<code>next(err)</code>，其中的<code>err</code>为Promise内抛出的错误或者<code>reject</code>的值，如果不存在就传入一个默认的<code>Error</code>对象。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>Whichever method you use, if you want Express error handlers to be called in and the application to survive, you must ensure that Express receives the error.</p>\n</blockquote>\n<p>Express官方文档中提到，要确保你的Express程序在遇到错误的时候不会宕机，就得确保Express能接收到程序抛出的错误。</p>","more":"<h2 id=\"uncaughtException导致的node宕机\"><a href=\"#uncaughtException导致的node宕机\" class=\"headerlink\" title=\"uncaughtException导致的node宕机\"></a>uncaughtException导致的node宕机</h2><p>如上所说，Express程序必须手动处理<strong>所有</strong>可能抛出的错误才不会发生宕机，或者说降低宕机的风险，这和node是息息相关的，毕竟Express是基于Nodejs的，在node中，在遇到<code>uncaughtException</code>时会直接结束node进程，之前写过一篇文章</p>\n<p><a href=\"https://fateguy.com/note/20.html\">Promise的UnhandledPromiseRejectionWarning问题</a></p>\n<p>就是提到的node的这个特性，对Promise对象没有用<code>.catch()</code>来捕捉错误就会使node可能宕机。</p>\n<p>当然了我们可以用pm2或者forever之类的node进程管理工具来管理重启和记录错误，这样也更利于我们之后对程序进行修复。</p>\n<p>但是，在运行过程中，我们还是更希望我们的程序宕机的次数越少越好，如果我们的程序的Session是存储在内存中的，那么程序宕机重启之后，所有的用户登录状态也将不复存在。</p>\n<h2 id=\"Error-Handler-错误处理函数\"><a href=\"#Error-Handler-错误处理函数\" class=\"headerlink\" title=\"Error Handler 错误处理函数\"></a>Error Handler 错误处理函数</h2><p>Express框架内置了一个错误处理函数（Error Handler），这个函数是以中间件（MiddleWare）的形式来使用的，只不过这个中间件和其他的中间件稍微不一样，那就是错误处理函数接受4个参数，比常规中间件多了接收错误的参数<code>err</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, req, res, next</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 处理错误</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>错误处理函数一般定义在所有路由之后，为了确保Express程序不会因为错误而宕机，则需要把错误抛给这个错误处理函数来处理，在请求内有两种方式把错误抛给错误处理函数。</p>\n<p>直接<code>throw new Error()</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&#x27;BROKEN&#x27;</span>) <span class=\"comment\">// Express will catch this on its own.</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>或者在<code>next()</code>函数中传入错误对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">  fs.readFile(<span class=\"string\">&#x27;/file-does-not-exist&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, data</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">      next(err) <span class=\"comment\">// Pass errors to Express.</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      res.send(data)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>直接抛出错误，或者在<code>next()</code>函数中传入错误对象都能直接跳过剩余的路由，直接进入错误处理函数。</p>\n<p>参考官方文档</p>\n<blockquote>\n<p>If you pass anything to the <code>next()</code> function (except the string <code>&#39;route&#39;</code>), Express regards the current request as being an error and will skip any remaining non-error handling routing and middleware functions.</p>\n</blockquote>\n<h2 id=\"next-函数\"><a href=\"#next-函数\" class=\"headerlink\" title=\"next()函数\"></a>next()函数</h2><p>上面的官方文档说道 <strong>except the string <code>&#39;route&#39;</code></strong></p>\n<p>意思即是<code>next()</code>直接跳到下一个<strong>中间件</strong>；传的值是字符串<code>route</code>即<code>next(&#39;route&#39;)</code>时，直接跳到下一个<strong>路由</strong>；传入其他值都会跳到错误处理函数。</p>\n<ul>\n<li>next()——跳到下一个中间件</li>\n<li>next(‘route’)——跳到下一个路由</li>\n<li>next(err)——跳到错误处理函数</li>\n</ul>\n<p>注意<code>next()</code>和<code>next(&#39;route&#39;)</code>是分别跳到下一个<strong>中间件</strong>和<strong>路由</strong>，经常看到说<code>next()</code>函数会跳到下一个路由的，其实这样说是不准确的，一个路由可以有多个中间件来处理</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mw1 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;&#125;</span><br><span class=\"line\">mw2 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;&#125;</span><br><span class=\"line\">mw3 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;&#125;</span><br><span class=\"line\">mw4 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">app.get(<span class=\"string\">&#x27;/&#x27;</span>, mw1, mw2, mw3)</span><br><span class=\"line\">app.get(<span class=\"string\">&#x27;/&#x27;</span>, mw4)</span><br></pre></td></tr></table></figure>\n\n<p>例如在<code>mw1</code>函数中调用了<code>next()</code>，实际上是跳到<code>mw2</code>开始执行，而如果我们调用的是<code>next(&#39;route&#39;)</code>，那么就会直接跳过<code>mw2</code>和<code>mw3</code>，直接开始执行<code>mw4</code>。</p>\n<p>之所以有时候混淆是因为经常一个路由我们只用一个函数来处理，而不是链式处理，一个路由一个函数处理，调用<code>next()</code>和调用<code>next(&#39;route&#39;)</code>的效果是一样的。</p>\n<p>值得一提的还有，在官方文档中还提到</p>\n<blockquote>\n<p>Starting with Express 5, route handlers and middleware that return a Promise will call <code>next(value)</code> automatically when they reject or throw an error.</p>\n</blockquote>\n<p>也就是说，从Express5开始，在请求中或者中间件中的Promise对象，即使没有手动调用<code>next(err)</code>和<code>throw new Error()</code>，如果Promise中抛出了错误或者<code>reject</code>了，那么Express会自动调用<code>next(err)</code>，其中的<code>err</code>为Promise内抛出的错误或者<code>reject</code>的值，如果不存在就传入一个默认的<code>Error</code>对象。</p>"},{"title":"Mysql5.5版本中日期默认为CURRENT_TIMESTAMP报错","date":"2021-02-21T07:16:00.000Z","_content":"\n\n建表的时候发现设置create_time列的默认值为CURRENT_TIMESTAMP时报错了，无非是两种报错：\n\n- 数据类型是datetime导致报错\n- 通个表同时存在两个字段为CURRENT_TIMESTAMP\n\n这是因为在Mysql5.6.5（也有说是5.6）版本之前，datetime类型的字段不会自动初始化并更新当前日期和时间，而timestamp类型的字段可以，并且每个表只能包含一个timestamp字段，而在此之后的版本，timestamp和datetime字段都可以自动初始化并更新当前日期和时间，并且没有限制字段数。\n\n解决方法也很简单：\n\n1. 升级到Mysql5.6.5版本或以上\n2. 创建触发器trigger来自动更新字段值\n\n","source":"_posts/Mysql5.5版本中日期默认为CURRENT_TIMESTAMP报错.md","raw":"---\ntitle: Mysql5.5版本中日期默认为CURRENT_TIMESTAMP报错\ndate: 2021/02/21 15:16\ncategory: []\ntags: [mysql]\n---\n\n\n建表的时候发现设置create_time列的默认值为CURRENT_TIMESTAMP时报错了，无非是两种报错：\n\n- 数据类型是datetime导致报错\n- 通个表同时存在两个字段为CURRENT_TIMESTAMP\n\n这是因为在Mysql5.6.5（也有说是5.6）版本之前，datetime类型的字段不会自动初始化并更新当前日期和时间，而timestamp类型的字段可以，并且每个表只能包含一个timestamp字段，而在此之后的版本，timestamp和datetime字段都可以自动初始化并更新当前日期和时间，并且没有限制字段数。\n\n解决方法也很简单：\n\n1. 升级到Mysql5.6.5版本或以上\n2. 创建触发器trigger来自动更新字段值\n\n","slug":"Mysql5.5版本中日期默认为CURRENT_TIMESTAMP报错","published":1,"updated":"2021-10-27T16:52:41.758Z","_id":"ckv9n0sum001i3sw25jd7d0hp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>建表的时候发现设置create_time列的默认值为CURRENT_TIMESTAMP时报错了，无非是两种报错：</p>\n<ul>\n<li>数据类型是datetime导致报错</li>\n<li>通个表同时存在两个字段为CURRENT_TIMESTAMP</li>\n</ul>\n<p>这是因为在Mysql5.6.5（也有说是5.6）版本之前，datetime类型的字段不会自动初始化并更新当前日期和时间，而timestamp类型的字段可以，并且每个表只能包含一个timestamp字段，而在此之后的版本，timestamp和datetime字段都可以自动初始化并更新当前日期和时间，并且没有限制字段数。</p>\n<p>解决方法也很简单：</p>\n<ol>\n<li>升级到Mysql5.6.5版本或以上</li>\n<li>创建触发器trigger来自动更新字段值</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>建表的时候发现设置create_time列的默认值为CURRENT_TIMESTAMP时报错了，无非是两种报错：</p>\n<ul>\n<li>数据类型是datetime导致报错</li>\n<li>通个表同时存在两个字段为CURRENT_TIMESTAMP</li>\n</ul>\n<p>这是因为在Mysql5.6.5（也有说是5.6）版本之前，datetime类型的字段不会自动初始化并更新当前日期和时间，而timestamp类型的字段可以，并且每个表只能包含一个timestamp字段，而在此之后的版本，timestamp和datetime字段都可以自动初始化并更新当前日期和时间，并且没有限制字段数。</p>\n<p>解决方法也很简单：</p>\n<ol>\n<li>升级到Mysql5.6.5版本或以上</li>\n<li>创建触发器trigger来自动更新字段值</li>\n</ol>\n"},{"title":"vue中整合editor.md","date":"2021-03-23T14:12:00.000Z","_content":"\n在做毕设过程中需要在前端用到Markdown编辑器，一想就想到了Editor.md，虽然有和Vue整合好的mavonEditor可供选择，但是还是喜欢Editor.md，就想办法搞一下。\n\nEditor.md作为一个很成熟开元Markdown编辑器，虽然已经好久不更新了，但是无疑还是非常实用的，由于Editor.md并没有提供与Vue整合的直接方案，但是我们可以自己把它封装成一个Vue组件来使用。\n\n<!--more-->\n\n参考了两篇文章：\n\n> https://blog.csdn.net/jdbdh/article/details/90314447\n>\n> http://www.lwl.tech/post/3\n\n首先了解到Editor.md是通过附着在window对象上来暴露给用户使用的，并且在初始化的时候依赖了jQuery，那么我们要解决：\n\n1. 把jQuery挂载到window对象\n\n2. 异步加载editormd.mi.js后创建editor示例\n\n*MarkdownEditor.vue*\n\n```vue\n<template>\n  <div class=\"markdown-editor-box\">\n    <link rel=\"stylesheet\" href=\"/static/editormd/css/editormd.min.css\" />\n    <link rel=\"stylesheet\" :href=\"'/static/editormd/css/themes/' + themeCode\" />\n    <div :id=\"id\"></div>\n  </div>\n</template>\n<script>\nimport $ from \"jquery\";\nimport { v4 as uuid } from \"uuid\";\nimport { defaultConfig } from \"../../config/editor.md\";\n\nexport default {\n  name: \"MarkdownEditor\",\n  props: {\n    id: {\n      type: String,\n      default: uuid(),\n    },\n    config: {\n      type: Object,\n    },\n    themeCode: {\n      type: String,\n      default: \"atelier-forest-light.min.css\",\n      // preview at https://jmblog.github.io/color-themes-for-google-code-prettify/\n      // location /static/editormd/css/themes/\n    },\n    initData: {\n      type: String,\n    },\n    delay: {\n      type: Number,\n      default: 0,\n    },\n  },\n  data: function () {\n    return {\n      editor: null,\n    };\n  },\n  methods: {\n    getConfig: function () {\n      // return Object.assign(defaultConfig, this.config);\n      // or\n      return { ...defaultConfig, ...this.config };\n      // maybe add custom config from back-end\n      // return { ...defaultConfig, ...this.config, ...customConfig };\n    },\n    initEditor: function () {\n      let vm = this;\n      window.$ = window.jQuery = $;\n      (async () => {\n        await $.getScript(\"/static/editormd/editormd.min.js\");\n        let editor = window.editormd(this.id, this.getConfig());\n        vm.editor = editor;\n        // this.$nextTick(() => {\n        //   let editor = window.editormd(this.editorId, this.getConfig());\n        //   editor.on(\"load\", () => {\n        //     setTimeout(() => {\n        //       // hack bug: 一个页面多个编辑器只能初始化其中一个数据问题\n        //       this.editorLoaded = true;\n        //       this.initData && editor.setMarkdown(this.initData);\n        //     }, this.initDataDelay);\n        //   });\n        //   this.onchange &&\n        //     editor.on(\"change\", () => {\n        //       let html = editor.getPreviewedHTML();\n        //       this.onchange({\n        //         markdown: editor.getMarkdown(),\n        //         html: html,\n        //         text: window.$(html).text(),\n        //       });\n        //     });\n        //   this.editor = editor;\n        // });\n      })();\n    },\n  },\n  mounted: function () {\n    let vm = this;\n    vm.initEditor();\n  },\n  watch: {\n    initData: function (newVal) {\n      if (newVal) {\n        this.editorLoaded && this.editor.setMarkdown(newVal);\n      }\n    },\n  },\n};\n</script>\n```\n\n```\n\"undo\",\"redo\",\"|\",\"bold\",\"del\",\"italic\",\"quote\",\"ucwords\",\"uppercase\",\"lowercase\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"|\",\"list-ul\",\"list-ol\",\"hr\",\"|\",\"link\",\"reference-link\",\"image\",\"code\",\"preformatted-text\",\"code-block\",\"table\",\"datetime\",\"emoji\",\"html-entities\",\"pagebreak\",\"goto-line\",\"watch\",\"preview\",\"fullscreen\",\"clear\",\"search\",\"help\",\"info\"\n```\n\n```\n\"undo\",\"redo\",\"|\",\"bold\",\"del\",\"italic\",\"quote\",\"list-ul\",\"list-ol\",\"hr\",\"|\",\"h1\",\"h2\",\"h3\",\"|\",\"link\",\"image\",\"code-block\",\"table\",\"||\",\"watch\",\"preview\",\"fullscreen\",\"clear\",\"search\"\n```\n\n","source":"_posts/vue3中整合editor.md","raw":"---\ntitle: vue中整合editor.md\ndate: 2021/3/23 22:12\ntags: [vue,editor.md]\ncategory: []\n---\n\n在做毕设过程中需要在前端用到Markdown编辑器，一想就想到了Editor.md，虽然有和Vue整合好的mavonEditor可供选择，但是还是喜欢Editor.md，就想办法搞一下。\n\nEditor.md作为一个很成熟开元Markdown编辑器，虽然已经好久不更新了，但是无疑还是非常实用的，由于Editor.md并没有提供与Vue整合的直接方案，但是我们可以自己把它封装成一个Vue组件来使用。\n\n<!--more-->\n\n参考了两篇文章：\n\n> https://blog.csdn.net/jdbdh/article/details/90314447\n>\n> http://www.lwl.tech/post/3\n\n首先了解到Editor.md是通过附着在window对象上来暴露给用户使用的，并且在初始化的时候依赖了jQuery，那么我们要解决：\n\n1. 把jQuery挂载到window对象\n\n2. 异步加载editormd.mi.js后创建editor示例\n\n*MarkdownEditor.vue*\n\n```vue\n<template>\n  <div class=\"markdown-editor-box\">\n    <link rel=\"stylesheet\" href=\"/static/editormd/css/editormd.min.css\" />\n    <link rel=\"stylesheet\" :href=\"'/static/editormd/css/themes/' + themeCode\" />\n    <div :id=\"id\"></div>\n  </div>\n</template>\n<script>\nimport $ from \"jquery\";\nimport { v4 as uuid } from \"uuid\";\nimport { defaultConfig } from \"../../config/editor.md\";\n\nexport default {\n  name: \"MarkdownEditor\",\n  props: {\n    id: {\n      type: String,\n      default: uuid(),\n    },\n    config: {\n      type: Object,\n    },\n    themeCode: {\n      type: String,\n      default: \"atelier-forest-light.min.css\",\n      // preview at https://jmblog.github.io/color-themes-for-google-code-prettify/\n      // location /static/editormd/css/themes/\n    },\n    initData: {\n      type: String,\n    },\n    delay: {\n      type: Number,\n      default: 0,\n    },\n  },\n  data: function () {\n    return {\n      editor: null,\n    };\n  },\n  methods: {\n    getConfig: function () {\n      // return Object.assign(defaultConfig, this.config);\n      // or\n      return { ...defaultConfig, ...this.config };\n      // maybe add custom config from back-end\n      // return { ...defaultConfig, ...this.config, ...customConfig };\n    },\n    initEditor: function () {\n      let vm = this;\n      window.$ = window.jQuery = $;\n      (async () => {\n        await $.getScript(\"/static/editormd/editormd.min.js\");\n        let editor = window.editormd(this.id, this.getConfig());\n        vm.editor = editor;\n        // this.$nextTick(() => {\n        //   let editor = window.editormd(this.editorId, this.getConfig());\n        //   editor.on(\"load\", () => {\n        //     setTimeout(() => {\n        //       // hack bug: 一个页面多个编辑器只能初始化其中一个数据问题\n        //       this.editorLoaded = true;\n        //       this.initData && editor.setMarkdown(this.initData);\n        //     }, this.initDataDelay);\n        //   });\n        //   this.onchange &&\n        //     editor.on(\"change\", () => {\n        //       let html = editor.getPreviewedHTML();\n        //       this.onchange({\n        //         markdown: editor.getMarkdown(),\n        //         html: html,\n        //         text: window.$(html).text(),\n        //       });\n        //     });\n        //   this.editor = editor;\n        // });\n      })();\n    },\n  },\n  mounted: function () {\n    let vm = this;\n    vm.initEditor();\n  },\n  watch: {\n    initData: function (newVal) {\n      if (newVal) {\n        this.editorLoaded && this.editor.setMarkdown(newVal);\n      }\n    },\n  },\n};\n</script>\n```\n\n```\n\"undo\",\"redo\",\"|\",\"bold\",\"del\",\"italic\",\"quote\",\"ucwords\",\"uppercase\",\"lowercase\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"|\",\"list-ul\",\"list-ol\",\"hr\",\"|\",\"link\",\"reference-link\",\"image\",\"code\",\"preformatted-text\",\"code-block\",\"table\",\"datetime\",\"emoji\",\"html-entities\",\"pagebreak\",\"goto-line\",\"watch\",\"preview\",\"fullscreen\",\"clear\",\"search\",\"help\",\"info\"\n```\n\n```\n\"undo\",\"redo\",\"|\",\"bold\",\"del\",\"italic\",\"quote\",\"list-ul\",\"list-ol\",\"hr\",\"|\",\"h1\",\"h2\",\"h3\",\"|\",\"link\",\"image\",\"code-block\",\"table\",\"||\",\"watch\",\"preview\",\"fullscreen\",\"clear\",\"search\"\n```\n\n","slug":"vue3中整合editor","published":1,"updated":"2021-10-27T16:56:24.836Z","_id":"ckv9n1nah001k3sw26f2kbu6c","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在做毕设过程中需要在前端用到Markdown编辑器，一想就想到了Editor.md，虽然有和Vue整合好的mavonEditor可供选择，但是还是喜欢Editor.md，就想办法搞一下。</p>\n<p>Editor.md作为一个很成熟开元Markdown编辑器，虽然已经好久不更新了，但是无疑还是非常实用的，由于Editor.md并没有提供与Vue整合的直接方案，但是我们可以自己把它封装成一个Vue组件来使用。</p>\n<span id=\"more\"></span>\n\n<p>参考了两篇文章：</p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/jdbdh/article/details/90314447\">https://blog.csdn.net/jdbdh/article/details/90314447</a></p>\n<p><a href=\"http://www.lwl.tech/post/3\">http://www.lwl.tech/post/3</a></p>\n</blockquote>\n<p>首先了解到Editor.md是通过附着在window对象上来暴露给用户使用的，并且在初始化的时候依赖了jQuery，那么我们要解决：</p>\n<ol>\n<li><p>把jQuery挂载到window对象</p>\n</li>\n<li><p>异步加载editormd.mi.js后创建editor示例</p>\n</li>\n</ol>\n<p><em>MarkdownEditor.vue</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;markdown-editor-box&quot;&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/editormd/css/editormd.min.css&quot; /&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; :href=&quot;&#x27;/static/editormd/css/themes/&#x27; + themeCode&quot; /&gt;</span><br><span class=\"line\">    &lt;div :id=&quot;id&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import $ from &quot;jquery&quot;;</span><br><span class=\"line\">import &#123; v4 as uuid &#125; from &quot;uuid&quot;;</span><br><span class=\"line\">import &#123; defaultConfig &#125; from &quot;../../config/editor.md&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;MarkdownEditor&quot;,</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    id: &#123;</span><br><span class=\"line\">      type: String,</span><br><span class=\"line\">      default: uuid(),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    config: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    themeCode: &#123;</span><br><span class=\"line\">      type: String,</span><br><span class=\"line\">      default: &quot;atelier-forest-light.min.css&quot;,</span><br><span class=\"line\">      // preview at https://jmblog.github.io/color-themes-for-google-code-prettify/</span><br><span class=\"line\">      // location /static/editormd/css/themes/</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    initData: &#123;</span><br><span class=\"line\">      type: String,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    delay: &#123;</span><br><span class=\"line\">      type: Number,</span><br><span class=\"line\">      default: 0,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data: function () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      editor: null,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    getConfig: function () &#123;</span><br><span class=\"line\">      // return Object.assign(defaultConfig, this.config);</span><br><span class=\"line\">      // or</span><br><span class=\"line\">      return &#123; ...defaultConfig, ...this.config &#125;;</span><br><span class=\"line\">      // maybe add custom config from back-end</span><br><span class=\"line\">      // return &#123; ...defaultConfig, ...this.config, ...customConfig &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    initEditor: function () &#123;</span><br><span class=\"line\">      let vm = this;</span><br><span class=\"line\">      window.$ = window.jQuery = $;</span><br><span class=\"line\">      (async () =&gt; &#123;</span><br><span class=\"line\">        await $.getScript(&quot;/static/editormd/editormd.min.js&quot;);</span><br><span class=\"line\">        let editor = window.editormd(this.id, this.getConfig());</span><br><span class=\"line\">        vm.editor = editor;</span><br><span class=\"line\">        // this.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">        //   let editor = window.editormd(this.editorId, this.getConfig());</span><br><span class=\"line\">        //   editor.on(&quot;load&quot;, () =&gt; &#123;</span><br><span class=\"line\">        //     setTimeout(() =&gt; &#123;</span><br><span class=\"line\">        //       // hack bug: 一个页面多个编辑器只能初始化其中一个数据问题</span><br><span class=\"line\">        //       this.editorLoaded = true;</span><br><span class=\"line\">        //       this.initData &amp;&amp; editor.setMarkdown(this.initData);</span><br><span class=\"line\">        //     &#125;, this.initDataDelay);</span><br><span class=\"line\">        //   &#125;);</span><br><span class=\"line\">        //   this.onchange &amp;&amp;</span><br><span class=\"line\">        //     editor.on(&quot;change&quot;, () =&gt; &#123;</span><br><span class=\"line\">        //       let html = editor.getPreviewedHTML();</span><br><span class=\"line\">        //       this.onchange(&#123;</span><br><span class=\"line\">        //         markdown: editor.getMarkdown(),</span><br><span class=\"line\">        //         html: html,</span><br><span class=\"line\">        //         text: window.$(html).text(),</span><br><span class=\"line\">        //       &#125;);</span><br><span class=\"line\">        //     &#125;);</span><br><span class=\"line\">        //   this.editor = editor;</span><br><span class=\"line\">        // &#125;);</span><br><span class=\"line\">      &#125;)();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted: function () &#123;</span><br><span class=\"line\">    let vm = this;</span><br><span class=\"line\">    vm.initEditor();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  watch: &#123;</span><br><span class=\"line\">    initData: function (newVal) &#123;</span><br><span class=\"line\">      if (newVal) &#123;</span><br><span class=\"line\">        this.editorLoaded &amp;&amp; this.editor.setMarkdown(newVal);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;undo&quot;,&quot;redo&quot;,&quot;|&quot;,&quot;bold&quot;,&quot;del&quot;,&quot;italic&quot;,&quot;quote&quot;,&quot;ucwords&quot;,&quot;uppercase&quot;,&quot;lowercase&quot;,&quot;h1&quot;,&quot;h2&quot;,&quot;h3&quot;,&quot;h4&quot;,&quot;h5&quot;,&quot;|&quot;,&quot;list-ul&quot;,&quot;list-ol&quot;,&quot;hr&quot;,&quot;|&quot;,&quot;link&quot;,&quot;reference-link&quot;,&quot;image&quot;,&quot;code&quot;,&quot;preformatted-text&quot;,&quot;code-block&quot;,&quot;table&quot;,&quot;datetime&quot;,&quot;emoji&quot;,&quot;html-entities&quot;,&quot;pagebreak&quot;,&quot;goto-line&quot;,&quot;watch&quot;,&quot;preview&quot;,&quot;fullscreen&quot;,&quot;clear&quot;,&quot;search&quot;,&quot;help&quot;,&quot;info&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;undo&quot;,&quot;redo&quot;,&quot;|&quot;,&quot;bold&quot;,&quot;del&quot;,&quot;italic&quot;,&quot;quote&quot;,&quot;list-ul&quot;,&quot;list-ol&quot;,&quot;hr&quot;,&quot;|&quot;,&quot;h1&quot;,&quot;h2&quot;,&quot;h3&quot;,&quot;|&quot;,&quot;link&quot;,&quot;image&quot;,&quot;code-block&quot;,&quot;table&quot;,&quot;||&quot;,&quot;watch&quot;,&quot;preview&quot;,&quot;fullscreen&quot;,&quot;clear&quot;,&quot;search&quot;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<p>在做毕设过程中需要在前端用到Markdown编辑器，一想就想到了Editor.md，虽然有和Vue整合好的mavonEditor可供选择，但是还是喜欢Editor.md，就想办法搞一下。</p>\n<p>Editor.md作为一个很成熟开元Markdown编辑器，虽然已经好久不更新了，但是无疑还是非常实用的，由于Editor.md并没有提供与Vue整合的直接方案，但是我们可以自己把它封装成一个Vue组件来使用。</p>","more":"<p>参考了两篇文章：</p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/jdbdh/article/details/90314447\">https://blog.csdn.net/jdbdh/article/details/90314447</a></p>\n<p><a href=\"http://www.lwl.tech/post/3\">http://www.lwl.tech/post/3</a></p>\n</blockquote>\n<p>首先了解到Editor.md是通过附着在window对象上来暴露给用户使用的，并且在初始化的时候依赖了jQuery，那么我们要解决：</p>\n<ol>\n<li><p>把jQuery挂载到window对象</p>\n</li>\n<li><p>异步加载editormd.mi.js后创建editor示例</p>\n</li>\n</ol>\n<p><em>MarkdownEditor.vue</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class=&quot;markdown-editor-box&quot;&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/editormd/css/editormd.min.css&quot; /&gt;</span><br><span class=\"line\">    &lt;link rel=&quot;stylesheet&quot; :href=&quot;&#x27;/static/editormd/css/themes/&#x27; + themeCode&quot; /&gt;</span><br><span class=\"line\">    &lt;div :id=&quot;id&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import $ from &quot;jquery&quot;;</span><br><span class=\"line\">import &#123; v4 as uuid &#125; from &quot;uuid&quot;;</span><br><span class=\"line\">import &#123; defaultConfig &#125; from &quot;../../config/editor.md&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;MarkdownEditor&quot;,</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    id: &#123;</span><br><span class=\"line\">      type: String,</span><br><span class=\"line\">      default: uuid(),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    config: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    themeCode: &#123;</span><br><span class=\"line\">      type: String,</span><br><span class=\"line\">      default: &quot;atelier-forest-light.min.css&quot;,</span><br><span class=\"line\">      // preview at https://jmblog.github.io/color-themes-for-google-code-prettify/</span><br><span class=\"line\">      // location /static/editormd/css/themes/</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    initData: &#123;</span><br><span class=\"line\">      type: String,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    delay: &#123;</span><br><span class=\"line\">      type: Number,</span><br><span class=\"line\">      default: 0,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data: function () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      editor: null,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    getConfig: function () &#123;</span><br><span class=\"line\">      // return Object.assign(defaultConfig, this.config);</span><br><span class=\"line\">      // or</span><br><span class=\"line\">      return &#123; ...defaultConfig, ...this.config &#125;;</span><br><span class=\"line\">      // maybe add custom config from back-end</span><br><span class=\"line\">      // return &#123; ...defaultConfig, ...this.config, ...customConfig &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    initEditor: function () &#123;</span><br><span class=\"line\">      let vm = this;</span><br><span class=\"line\">      window.$ = window.jQuery = $;</span><br><span class=\"line\">      (async () =&gt; &#123;</span><br><span class=\"line\">        await $.getScript(&quot;/static/editormd/editormd.min.js&quot;);</span><br><span class=\"line\">        let editor = window.editormd(this.id, this.getConfig());</span><br><span class=\"line\">        vm.editor = editor;</span><br><span class=\"line\">        // this.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">        //   let editor = window.editormd(this.editorId, this.getConfig());</span><br><span class=\"line\">        //   editor.on(&quot;load&quot;, () =&gt; &#123;</span><br><span class=\"line\">        //     setTimeout(() =&gt; &#123;</span><br><span class=\"line\">        //       // hack bug: 一个页面多个编辑器只能初始化其中一个数据问题</span><br><span class=\"line\">        //       this.editorLoaded = true;</span><br><span class=\"line\">        //       this.initData &amp;&amp; editor.setMarkdown(this.initData);</span><br><span class=\"line\">        //     &#125;, this.initDataDelay);</span><br><span class=\"line\">        //   &#125;);</span><br><span class=\"line\">        //   this.onchange &amp;&amp;</span><br><span class=\"line\">        //     editor.on(&quot;change&quot;, () =&gt; &#123;</span><br><span class=\"line\">        //       let html = editor.getPreviewedHTML();</span><br><span class=\"line\">        //       this.onchange(&#123;</span><br><span class=\"line\">        //         markdown: editor.getMarkdown(),</span><br><span class=\"line\">        //         html: html,</span><br><span class=\"line\">        //         text: window.$(html).text(),</span><br><span class=\"line\">        //       &#125;);</span><br><span class=\"line\">        //     &#125;);</span><br><span class=\"line\">        //   this.editor = editor;</span><br><span class=\"line\">        // &#125;);</span><br><span class=\"line\">      &#125;)();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted: function () &#123;</span><br><span class=\"line\">    let vm = this;</span><br><span class=\"line\">    vm.initEditor();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  watch: &#123;</span><br><span class=\"line\">    initData: function (newVal) &#123;</span><br><span class=\"line\">      if (newVal) &#123;</span><br><span class=\"line\">        this.editorLoaded &amp;&amp; this.editor.setMarkdown(newVal);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;undo&quot;,&quot;redo&quot;,&quot;|&quot;,&quot;bold&quot;,&quot;del&quot;,&quot;italic&quot;,&quot;quote&quot;,&quot;ucwords&quot;,&quot;uppercase&quot;,&quot;lowercase&quot;,&quot;h1&quot;,&quot;h2&quot;,&quot;h3&quot;,&quot;h4&quot;,&quot;h5&quot;,&quot;|&quot;,&quot;list-ul&quot;,&quot;list-ol&quot;,&quot;hr&quot;,&quot;|&quot;,&quot;link&quot;,&quot;reference-link&quot;,&quot;image&quot;,&quot;code&quot;,&quot;preformatted-text&quot;,&quot;code-block&quot;,&quot;table&quot;,&quot;datetime&quot;,&quot;emoji&quot;,&quot;html-entities&quot;,&quot;pagebreak&quot;,&quot;goto-line&quot;,&quot;watch&quot;,&quot;preview&quot;,&quot;fullscreen&quot;,&quot;clear&quot;,&quot;search&quot;,&quot;help&quot;,&quot;info&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;undo&quot;,&quot;redo&quot;,&quot;|&quot;,&quot;bold&quot;,&quot;del&quot;,&quot;italic&quot;,&quot;quote&quot;,&quot;list-ul&quot;,&quot;list-ol&quot;,&quot;hr&quot;,&quot;|&quot;,&quot;h1&quot;,&quot;h2&quot;,&quot;h3&quot;,&quot;|&quot;,&quot;link&quot;,&quot;image&quot;,&quot;code-block&quot;,&quot;table&quot;,&quot;||&quot;,&quot;watch&quot;,&quot;preview&quot;,&quot;fullscreen&quot;,&quot;clear&quot;,&quot;search&quot;</span><br></pre></td></tr></table></figure>"},{"title":"vue中$nextTick的使用","date":"2021-03-22T16:00:00.000Z","_content":"\n### 一、使用方法\n\n在vue中有一种情况，获取了数据后，需要对新视图进行下一步操作或者其他操作时，发现获取不到dom。因为赋值操作只完成了数据模型的改变并没有完成视图更新。在这个时候我们需要$nextTick函数（或者setTimeout）。<!--more-->\n 比如：\n\n\n\n```php\nnew Vue({\n  el: '#app',\n  data: {\n    list: []\n  },\n  mounted: function () {\n    this.get()\n  },\n  methods: {\n    get: function () {\n      this.$http.get('/api/article').then(function (res) {\n        this.list = res.data.data.list\n        // ref  list 引用了ul元素，我想把第一个li颜色变为红色\n        this.$refs.list.getElementsByTagName('li')[0].style.color = 'red'\n      })\n    }\n  }\n})\n```\n\n使用示例\n\n\n\n```kotlin\nthis.$nextTick(() => {\n        this.msg2 = this.$refs.msgDiv.innerHTML\n})\n```\n\n### 二、使用场景\n\n1、在生命周期created()中进行的dom操作一定要放到nextTick()的回调函数中。\n 2、在数据变化后要执行某个操作，而这个操作需要使用随数据变化而变化的dom结构时，这个操作都应该放进nextTick()的回调函数中。\n\n### 三、原因\n\nVue 异步执行 DOM 更新。只要观察到数据变化，Vue 将开启一个队列，并缓冲在同一事件循环中发生的所有数据改变。如果同一个 watcher 被多次触发，只会被推入到队列中一次。这种在缓冲时去除重复数据对于避免不必要的计算和 DOM 操作上非常重要。然后，在下一个的事件循环“tick”中，Vue 刷新队列并执行实际 (已去重的) 工作。Vue 在内部尝试对异步队列使用原生的 Promise.then 和MessageChannel，如果执行环境不支持，会采用 setTimeout(fn, 0)代替。\n\n\n\n作者：板栗栗\n链接：https://www.jianshu.com/p/aa21e186649d\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","source":"_posts/vue中$nextTick的使用.md","raw":"---\ntitle: vue中$nextTick的使用\ndate: 2021/03/23\ntags: [vue,$nextTick]\ncategory: []\n---\n\n### 一、使用方法\n\n在vue中有一种情况，获取了数据后，需要对新视图进行下一步操作或者其他操作时，发现获取不到dom。因为赋值操作只完成了数据模型的改变并没有完成视图更新。在这个时候我们需要$nextTick函数（或者setTimeout）。<!--more-->\n 比如：\n\n\n\n```php\nnew Vue({\n  el: '#app',\n  data: {\n    list: []\n  },\n  mounted: function () {\n    this.get()\n  },\n  methods: {\n    get: function () {\n      this.$http.get('/api/article').then(function (res) {\n        this.list = res.data.data.list\n        // ref  list 引用了ul元素，我想把第一个li颜色变为红色\n        this.$refs.list.getElementsByTagName('li')[0].style.color = 'red'\n      })\n    }\n  }\n})\n```\n\n使用示例\n\n\n\n```kotlin\nthis.$nextTick(() => {\n        this.msg2 = this.$refs.msgDiv.innerHTML\n})\n```\n\n### 二、使用场景\n\n1、在生命周期created()中进行的dom操作一定要放到nextTick()的回调函数中。\n 2、在数据变化后要执行某个操作，而这个操作需要使用随数据变化而变化的dom结构时，这个操作都应该放进nextTick()的回调函数中。\n\n### 三、原因\n\nVue 异步执行 DOM 更新。只要观察到数据变化，Vue 将开启一个队列，并缓冲在同一事件循环中发生的所有数据改变。如果同一个 watcher 被多次触发，只会被推入到队列中一次。这种在缓冲时去除重复数据对于避免不必要的计算和 DOM 操作上非常重要。然后，在下一个的事件循环“tick”中，Vue 刷新队列并执行实际 (已去重的) 工作。Vue 在内部尝试对异步队列使用原生的 Promise.then 和MessageChannel，如果执行环境不支持，会采用 setTimeout(fn, 0)代替。\n\n\n\n作者：板栗栗\n链接：https://www.jianshu.com/p/aa21e186649d\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","slug":"vue中$nextTick的使用","published":1,"updated":"2021-10-27T16:57:33.082Z","_id":"ckv9n1naj001l3sw2ai13bxjb","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"一、使用方法\"><a href=\"#一、使用方法\" class=\"headerlink\" title=\"一、使用方法\"></a>一、使用方法</h3><p>在vue中有一种情况，获取了数据后，需要对新视图进行下一步操作或者其他操作时，发现获取不到dom。因为赋值操作只完成了数据模型的改变并没有完成视图更新。在这个时候我们需要$nextTick函数（或者setTimeout）。<span id=\"more\"></span><br> 比如：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    <span class=\"keyword\">list</span>: []</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    this.get()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    get: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      this.<span class=\"variable\">$http</span>.get(<span class=\"string\">&#x27;/api/article&#x27;</span>).then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        this.<span class=\"keyword\">list</span> = res.data.data.<span class=\"keyword\">list</span></span><br><span class=\"line\">        <span class=\"comment\">// ref  list 引用了ul元素，我想把第一个li颜色变为红色</span></span><br><span class=\"line\">        this.<span class=\"variable\">$refs</span>.<span class=\"keyword\">list</span>.getElementsByTagName(<span class=\"string\">&#x27;li&#x27;</span>)[<span class=\"number\">0</span>].style.color = <span class=\"string\">&#x27;red&#x27;</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>使用示例</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.msg2 = <span class=\"keyword\">this</span>.$refs.msgDiv.innerHTML</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、使用场景\"><a href=\"#二、使用场景\" class=\"headerlink\" title=\"二、使用场景\"></a>二、使用场景</h3><p>1、在生命周期created()中进行的dom操作一定要放到nextTick()的回调函数中。<br> 2、在数据变化后要执行某个操作，而这个操作需要使用随数据变化而变化的dom结构时，这个操作都应该放进nextTick()的回调函数中。</p>\n<h3 id=\"三、原因\"><a href=\"#三、原因\" class=\"headerlink\" title=\"三、原因\"></a>三、原因</h3><p>Vue 异步执行 DOM 更新。只要观察到数据变化，Vue 将开启一个队列，并缓冲在同一事件循环中发生的所有数据改变。如果同一个 watcher 被多次触发，只会被推入到队列中一次。这种在缓冲时去除重复数据对于避免不必要的计算和 DOM 操作上非常重要。然后，在下一个的事件循环“tick”中，Vue 刷新队列并执行实际 (已去重的) 工作。Vue 在内部尝试对异步队列使用原生的 Promise.then 和MessageChannel，如果执行环境不支持，会采用 setTimeout(fn, 0)代替。</p>\n<p>作者：板栗栗<br>链接：<a href=\"https://www.jianshu.com/p/aa21e186649d\">https://www.jianshu.com/p/aa21e186649d</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"一、使用方法\"><a href=\"#一、使用方法\" class=\"headerlink\" title=\"一、使用方法\"></a>一、使用方法</h3><p>在vue中有一种情况，获取了数据后，需要对新视图进行下一步操作或者其他操作时，发现获取不到dom。因为赋值操作只完成了数据模型的改变并没有完成视图更新。在这个时候我们需要$nextTick函数（或者setTimeout）。","more":"<br> 比如：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    <span class=\"keyword\">list</span>: []</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    this.get()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    get: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      this.<span class=\"variable\">$http</span>.get(<span class=\"string\">&#x27;/api/article&#x27;</span>).then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">        this.<span class=\"keyword\">list</span> = res.data.data.<span class=\"keyword\">list</span></span><br><span class=\"line\">        <span class=\"comment\">// ref  list 引用了ul元素，我想把第一个li颜色变为红色</span></span><br><span class=\"line\">        this.<span class=\"variable\">$refs</span>.<span class=\"keyword\">list</span>.getElementsByTagName(<span class=\"string\">&#x27;li&#x27;</span>)[<span class=\"number\">0</span>].style.color = <span class=\"string\">&#x27;red&#x27;</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>使用示例</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.$nextTick(() =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.msg2 = <span class=\"keyword\">this</span>.$refs.msgDiv.innerHTML</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"二、使用场景\"><a href=\"#二、使用场景\" class=\"headerlink\" title=\"二、使用场景\"></a>二、使用场景</h3><p>1、在生命周期created()中进行的dom操作一定要放到nextTick()的回调函数中。<br> 2、在数据变化后要执行某个操作，而这个操作需要使用随数据变化而变化的dom结构时，这个操作都应该放进nextTick()的回调函数中。</p>\n<h3 id=\"三、原因\"><a href=\"#三、原因\" class=\"headerlink\" title=\"三、原因\"></a>三、原因</h3><p>Vue 异步执行 DOM 更新。只要观察到数据变化，Vue 将开启一个队列，并缓冲在同一事件循环中发生的所有数据改变。如果同一个 watcher 被多次触发，只会被推入到队列中一次。这种在缓冲时去除重复数据对于避免不必要的计算和 DOM 操作上非常重要。然后，在下一个的事件循环“tick”中，Vue 刷新队列并执行实际 (已去重的) 工作。Vue 在内部尝试对异步队列使用原生的 Promise.then 和MessageChannel，如果执行环境不支持，会采用 setTimeout(fn, 0)代替。</p>\n<p>作者：板栗栗<br>链接：<a href=\"https://www.jianshu.com/p/aa21e186649d\">https://www.jianshu.com/p/aa21e186649d</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>"},{"title":"一文搞懂CSS Flex布局","date":"2021-03-27T11:21:00.000Z","_content":"\ncss中，flex、grid 各种布局都是我们必须掌握的，作为常用功能又强大的flex布局你还没学会吗，全文没有一张图，用最通俗易懂的语言教你怎么用css中的flex布局。\n\n<!--more-->\n\n## 父容器属性\n\n### 开启flex\n\n```css\ndisplay: flex;\n```\n\n### 控制子元素水平方向对齐\n\n```css\njustify-content: flex-start/center/flex-end/space-between/space-around/space-evenly;\n```\n\n> `flex-start/center/flex-end` 子元素之间没有留白\n>\n> `space-between/space-around/space-evenly` 子元素之间留白相等\n\n- `flex-start` => `[ a b c ######## ]`\n- `center` => `[ #### a b c #### ]`\n- `flex-end` => `[ ######## a b c ]`\n- `space-between` => `[ a ### b ### c ]`  (两端无留白)\n- `space -evenly` => `[ ## a ## b ## c ## ]` (两端留白和子元素之间留白相等)\n- `space-around` => `[ # a ###  b ### c # ] ` (两端留白是子元素之间留白的一半)\n\n> **以上是针对于父容器的`flex-direction`属性为行模式的时候**\n>\n> **列模式时，`justify-content`和`align-items`的作用倒转过来，分别是**\n>\n> - **`justify-content` => 控制垂直方向对齐**\n>- **`align-items` => 控制水平方向对齐**\n\n**[什么是行模式和列模式？](#### 行模式&列模式)**\n\n### 控制子元素垂直方向对齐\n\n```css\nalign-items: flex-start/center/flex-end/stretch/baseline;\n```\n\n- `flex-start/center/flex-end` 和上边类似，就是方向换成垂直方向\n- `baseline` => 按照文字基线对齐\n- `stretch` => 子元素拉伸并在垂直方向铺满父容器\n\n> **以上是针对于父容器的`flex-direction`属性为行模式的时候**\n>\n> **列模式时，`justify-content`和`align-items`的作用倒转过来，分别是**\n>\n> - **`justify-content` => 控制垂直方向对齐**\n>- **`align-items` => 控制水平方向对齐**\n\n**[什么是行模式和列模式？](#### 行模式&列模式)**\n\n### 控制子元素排列方式\n\n```css\nflex-direction: row/column/row-reverse/column-reverse;\n```\n\n- `row` => 按行排列从左到右\n- `row-reverse` => 按行排列从右到左\n- `column` => 按列从上到下，子元素的宽度不需要撑满父容器\n- `column-reverse` => 按列从下到上，子元素的宽度不需要撑满父容器\n\n#### 行模式&列模式\n\n- 父容器的`flex-direction`属性为`row`/`row-reverse` => **行模式**\n- 父容器的`flex-direction`属性为`column`/`column-reverse` => **列模式**\n\n### 控制子元素的折行\n\n```css\nflex-wrap: wrap/nowrap;\nalign-content: flex-start/flex-end/center/space-between/space-evenly/space-around;\n```\n\n当`flex-wrap`的值为`wrap`的时候，折行的部分由`align-content`的属性来控制，其值的作用可参考`justify-conten`，当然了，折行发生的条件是子元素的宽度固定且不能收缩，并且超过了父容器的宽度\n\n----------------------------------------\n\n\n\n## 子元素属性\n\n\n\n### 子元素覆盖父容器的排列方式\n\n```css\nalign-seft: flex-start/center/flex-end/stretch/baseline;\nmargin: auto;\n```\n\n- `align-seft` => 覆盖父容器设置的`align-items`属性\n- `margin` => 覆盖父容器的`justify-content`属性\n\n### 子元素的空间占比\n\n```css\nflex: 1;\n```\n\n- `flex`属性的值表示该子元素占父容器的空间比，总容量是所有子元素的`flex`属性和\n\n### 子元素的增长\n\n```css\nflex-grow: 1;\n```\n\n`flex-grow`属性是指当父容器的空间还有空余的时候，子元素主动增长去撑满这些**空余空间**(**行模式下是宽度，列模式下是高度**)，而占这些空余空间的比列就是由`flex-grow`的值来决定的，默认不设置`flex-grow`的情况下，值为`0`，子元素不会主动增长\n\n当把所有的子元素的`flex-grow`都设置成相等 => `[ a-a-a b-b-b c-c-c]`\n\n或者中间的子元素的`flex-grow`是两边的子元素`flex-grow`的两倍 => `[ a-a b-b-b-b c-c]`\n\n### 子元素的收缩\n\n```css\nflex-shrink: 1;\n```\n\n`flex-shrink`属性和`flex-grow`属性相似，只不过作用在于收缩的时候，`flex-shrink`越大的子元素在收缩的时候收缩的高度/宽度更大，默认不设置`flex-shrink`的情况下，值为`1`，子元素收缩且收缩比例为`1`\n\n中间的子元素的`flex-shrink`是两边子元素`flex-shrink`的两倍 :\n\n`[ a-a-a-a-a-a b-b-b-b-b-b c-c-c-c-c-c- ]`  ->  `[ a-a-a-a b-b c-c-c-c ]`\n\n### 子元素的宽度/高度\n\n```css\nflex-basis: 200px;\n```\n\n- 行模式 => `flex-basis`控制子元素的宽度\n- 列模式 => `flex-basis`控制子元素的高度\n\n**[什么是行模式和列模式？](#### 行模式&列模式)**\n\n- 行模式下，如果设置了`flex-basis`，则子元素设置的`width`属性不会生效，`flex-basis`没有设置的情况下默认值为`auto`，也就是由内容决定\n- 列模式下，如果设置了`flex-basis`，则子元素设置的`height`属性不会生效，`flex-basis`没有设置的情况下默认值为`auto`，也就是由内容决定\n\n> 但是，虽然`width/height`属性会被覆盖，我们依然可以用`min-width/min-height`来限制最小宽高\n\n\n\n### 子元素的flex属性\n\n```css\nflex: 0 1 auto;\n```\n\n`flex`属性的值其实就是`flex-grow`、`flex-shrink`、`flex-basis` 这3种属性的缩写，默认值就是`0 1 auto`，也就对应\n\n```\nflex-grow: 0;\nflex-shrink: 1;\nflex-basis: auto;\n```\n\n即**不增长**，**收缩比例为1**，**宽度/高度为内容的宽度/高度**\n\n","source":"_posts/flex布局.md","raw":"---\ntitle: 一文搞懂CSS Flex布局\ndate: 2021/03/27 19:21\ncategory: []\ntags: [css, flex]\n---\n\ncss中，flex、grid 各种布局都是我们必须掌握的，作为常用功能又强大的flex布局你还没学会吗，全文没有一张图，用最通俗易懂的语言教你怎么用css中的flex布局。\n\n<!--more-->\n\n## 父容器属性\n\n### 开启flex\n\n```css\ndisplay: flex;\n```\n\n### 控制子元素水平方向对齐\n\n```css\njustify-content: flex-start/center/flex-end/space-between/space-around/space-evenly;\n```\n\n> `flex-start/center/flex-end` 子元素之间没有留白\n>\n> `space-between/space-around/space-evenly` 子元素之间留白相等\n\n- `flex-start` => `[ a b c ######## ]`\n- `center` => `[ #### a b c #### ]`\n- `flex-end` => `[ ######## a b c ]`\n- `space-between` => `[ a ### b ### c ]`  (两端无留白)\n- `space -evenly` => `[ ## a ## b ## c ## ]` (两端留白和子元素之间留白相等)\n- `space-around` => `[ # a ###  b ### c # ] ` (两端留白是子元素之间留白的一半)\n\n> **以上是针对于父容器的`flex-direction`属性为行模式的时候**\n>\n> **列模式时，`justify-content`和`align-items`的作用倒转过来，分别是**\n>\n> - **`justify-content` => 控制垂直方向对齐**\n>- **`align-items` => 控制水平方向对齐**\n\n**[什么是行模式和列模式？](#### 行模式&列模式)**\n\n### 控制子元素垂直方向对齐\n\n```css\nalign-items: flex-start/center/flex-end/stretch/baseline;\n```\n\n- `flex-start/center/flex-end` 和上边类似，就是方向换成垂直方向\n- `baseline` => 按照文字基线对齐\n- `stretch` => 子元素拉伸并在垂直方向铺满父容器\n\n> **以上是针对于父容器的`flex-direction`属性为行模式的时候**\n>\n> **列模式时，`justify-content`和`align-items`的作用倒转过来，分别是**\n>\n> - **`justify-content` => 控制垂直方向对齐**\n>- **`align-items` => 控制水平方向对齐**\n\n**[什么是行模式和列模式？](#### 行模式&列模式)**\n\n### 控制子元素排列方式\n\n```css\nflex-direction: row/column/row-reverse/column-reverse;\n```\n\n- `row` => 按行排列从左到右\n- `row-reverse` => 按行排列从右到左\n- `column` => 按列从上到下，子元素的宽度不需要撑满父容器\n- `column-reverse` => 按列从下到上，子元素的宽度不需要撑满父容器\n\n#### 行模式&列模式\n\n- 父容器的`flex-direction`属性为`row`/`row-reverse` => **行模式**\n- 父容器的`flex-direction`属性为`column`/`column-reverse` => **列模式**\n\n### 控制子元素的折行\n\n```css\nflex-wrap: wrap/nowrap;\nalign-content: flex-start/flex-end/center/space-between/space-evenly/space-around;\n```\n\n当`flex-wrap`的值为`wrap`的时候，折行的部分由`align-content`的属性来控制，其值的作用可参考`justify-conten`，当然了，折行发生的条件是子元素的宽度固定且不能收缩，并且超过了父容器的宽度\n\n----------------------------------------\n\n\n\n## 子元素属性\n\n\n\n### 子元素覆盖父容器的排列方式\n\n```css\nalign-seft: flex-start/center/flex-end/stretch/baseline;\nmargin: auto;\n```\n\n- `align-seft` => 覆盖父容器设置的`align-items`属性\n- `margin` => 覆盖父容器的`justify-content`属性\n\n### 子元素的空间占比\n\n```css\nflex: 1;\n```\n\n- `flex`属性的值表示该子元素占父容器的空间比，总容量是所有子元素的`flex`属性和\n\n### 子元素的增长\n\n```css\nflex-grow: 1;\n```\n\n`flex-grow`属性是指当父容器的空间还有空余的时候，子元素主动增长去撑满这些**空余空间**(**行模式下是宽度，列模式下是高度**)，而占这些空余空间的比列就是由`flex-grow`的值来决定的，默认不设置`flex-grow`的情况下，值为`0`，子元素不会主动增长\n\n当把所有的子元素的`flex-grow`都设置成相等 => `[ a-a-a b-b-b c-c-c]`\n\n或者中间的子元素的`flex-grow`是两边的子元素`flex-grow`的两倍 => `[ a-a b-b-b-b c-c]`\n\n### 子元素的收缩\n\n```css\nflex-shrink: 1;\n```\n\n`flex-shrink`属性和`flex-grow`属性相似，只不过作用在于收缩的时候，`flex-shrink`越大的子元素在收缩的时候收缩的高度/宽度更大，默认不设置`flex-shrink`的情况下，值为`1`，子元素收缩且收缩比例为`1`\n\n中间的子元素的`flex-shrink`是两边子元素`flex-shrink`的两倍 :\n\n`[ a-a-a-a-a-a b-b-b-b-b-b c-c-c-c-c-c- ]`  ->  `[ a-a-a-a b-b c-c-c-c ]`\n\n### 子元素的宽度/高度\n\n```css\nflex-basis: 200px;\n```\n\n- 行模式 => `flex-basis`控制子元素的宽度\n- 列模式 => `flex-basis`控制子元素的高度\n\n**[什么是行模式和列模式？](#### 行模式&列模式)**\n\n- 行模式下，如果设置了`flex-basis`，则子元素设置的`width`属性不会生效，`flex-basis`没有设置的情况下默认值为`auto`，也就是由内容决定\n- 列模式下，如果设置了`flex-basis`，则子元素设置的`height`属性不会生效，`flex-basis`没有设置的情况下默认值为`auto`，也就是由内容决定\n\n> 但是，虽然`width/height`属性会被覆盖，我们依然可以用`min-width/min-height`来限制最小宽高\n\n\n\n### 子元素的flex属性\n\n```css\nflex: 0 1 auto;\n```\n\n`flex`属性的值其实就是`flex-grow`、`flex-shrink`、`flex-basis` 这3种属性的缩写，默认值就是`0 1 auto`，也就对应\n\n```\nflex-grow: 0;\nflex-shrink: 1;\nflex-basis: auto;\n```\n\n即**不增长**，**收缩比例为1**，**宽度/高度为内容的宽度/高度**\n\n","slug":"flex布局","published":1,"updated":"2021-10-27T16:46:09.389Z","_id":"ckv9r191l001s3sw29gz353cj","comments":1,"layout":"post","photos":[],"link":"","content":"<p>css中，flex、grid 各种布局都是我们必须掌握的，作为常用功能又强大的flex布局你还没学会吗，全文没有一张图，用最通俗易懂的语言教你怎么用css中的flex布局。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"父容器属性\"><a href=\"#父容器属性\" class=\"headerlink\" title=\"父容器属性\"></a>父容器属性</h2><h3 id=\"开启flex\"><a href=\"#开启flex\" class=\"headerlink\" title=\"开启flex\"></a>开启flex</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">display</span>: flex;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"控制子元素水平方向对齐\"><a href=\"#控制子元素水平方向对齐\" class=\"headerlink\" title=\"控制子元素水平方向对齐\"></a>控制子元素水平方向对齐</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">justify-content</span>: flex-start/center/flex-end/space-between/space-around/space-evenly;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>flex-start/center/flex-end</code> 子元素之间没有留白</p>\n<p><code>space-between/space-around/space-evenly</code> 子元素之间留白相等</p>\n</blockquote>\n<ul>\n<li><code>flex-start</code> =&gt; <code>[ a b c ######## ]</code></li>\n<li><code>center</code> =&gt; <code>[ #### a b c #### ]</code></li>\n<li><code>flex-end</code> =&gt; <code>[ ######## a b c ]</code></li>\n<li><code>space-between</code> =&gt; <code>[ a ### b ### c ]</code>  (两端无留白)</li>\n<li><code>space -evenly</code> =&gt; <code>[ ## a ## b ## c ## ]</code> (两端留白和子元素之间留白相等)</li>\n<li><code>space-around</code> =&gt; <code>[ # a ###  b ### c # ] </code> (两端留白是子元素之间留白的一半)</li>\n</ul>\n<blockquote>\n<p><strong>以上是针对于父容器的<code>flex-direction</code>属性为行模式的时候</strong></p>\n<p><strong>列模式时，<code>justify-content</code>和<code>align-items</code>的作用倒转过来，分别是</strong></p>\n<ul>\n<li><strong><code>justify-content</code> =&gt; 控制垂直方向对齐</strong></li>\n<li><strong><code>align-items</code> =&gt; 控制水平方向对齐</strong></li>\n</ul>\n</blockquote>\n<p><strong>[什么是行模式和列模式？](#### 行模式&amp;列模式)</strong></p>\n<h3 id=\"控制子元素垂直方向对齐\"><a href=\"#控制子元素垂直方向对齐\" class=\"headerlink\" title=\"控制子元素垂直方向对齐\"></a>控制子元素垂直方向对齐</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">align-items</span>: flex-start/center/flex-end/stretch/baseline;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>flex-start/center/flex-end</code> 和上边类似，就是方向换成垂直方向</li>\n<li><code>baseline</code> =&gt; 按照文字基线对齐</li>\n<li><code>stretch</code> =&gt; 子元素拉伸并在垂直方向铺满父容器</li>\n</ul>\n<blockquote>\n<p><strong>以上是针对于父容器的<code>flex-direction</code>属性为行模式的时候</strong></p>\n<p><strong>列模式时，<code>justify-content</code>和<code>align-items</code>的作用倒转过来，分别是</strong></p>\n<ul>\n<li><strong><code>justify-content</code> =&gt; 控制垂直方向对齐</strong></li>\n<li><strong><code>align-items</code> =&gt; 控制水平方向对齐</strong></li>\n</ul>\n</blockquote>\n<p><strong>[什么是行模式和列模式？](#### 行模式&amp;列模式)</strong></p>\n<h3 id=\"控制子元素排列方式\"><a href=\"#控制子元素排列方式\" class=\"headerlink\" title=\"控制子元素排列方式\"></a>控制子元素排列方式</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex-direction</span>: row/column/row-reverse/column-reverse;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>row</code> =&gt; 按行排列从左到右</li>\n<li><code>row-reverse</code> =&gt; 按行排列从右到左</li>\n<li><code>column</code> =&gt; 按列从上到下，子元素的宽度不需要撑满父容器</li>\n<li><code>column-reverse</code> =&gt; 按列从下到上，子元素的宽度不需要撑满父容器</li>\n</ul>\n<h4 id=\"行模式-amp-列模式\"><a href=\"#行模式-amp-列模式\" class=\"headerlink\" title=\"行模式&amp;列模式\"></a>行模式&amp;列模式</h4><ul>\n<li>父容器的<code>flex-direction</code>属性为<code>row</code>/<code>row-reverse</code> =&gt; <strong>行模式</strong></li>\n<li>父容器的<code>flex-direction</code>属性为<code>column</code>/<code>column-reverse</code> =&gt; <strong>列模式</strong></li>\n</ul>\n<h3 id=\"控制子元素的折行\"><a href=\"#控制子元素的折行\" class=\"headerlink\" title=\"控制子元素的折行\"></a>控制子元素的折行</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex-wrap</span>: wrap/nowrap;</span><br><span class=\"line\"><span class=\"attribute\">align-content</span>: flex-start/flex-end/center/space-between/space-evenly/space-around;</span><br></pre></td></tr></table></figure>\n\n<p>当<code>flex-wrap</code>的值为<code>wrap</code>的时候，折行的部分由<code>align-content</code>的属性来控制，其值的作用可参考<code>justify-conten</code>，当然了，折行发生的条件是子元素的宽度固定且不能收缩，并且超过了父容器的宽度</p>\n<hr>\n<h2 id=\"子元素属性\"><a href=\"#子元素属性\" class=\"headerlink\" title=\"子元素属性\"></a>子元素属性</h2><h3 id=\"子元素覆盖父容器的排列方式\"><a href=\"#子元素覆盖父容器的排列方式\" class=\"headerlink\" title=\"子元素覆盖父容器的排列方式\"></a>子元素覆盖父容器的排列方式</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">align-seft: flex-start/center/flex-end/stretch/baseline;</span><br><span class=\"line\"><span class=\"attribute\">margin</span>: auto;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>align-seft</code> =&gt; 覆盖父容器设置的<code>align-items</code>属性</li>\n<li><code>margin</code> =&gt; 覆盖父容器的<code>justify-content</code>属性</li>\n</ul>\n<h3 id=\"子元素的空间占比\"><a href=\"#子元素的空间占比\" class=\"headerlink\" title=\"子元素的空间占比\"></a>子元素的空间占比</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>flex</code>属性的值表示该子元素占父容器的空间比，总容量是所有子元素的<code>flex</code>属性和</li>\n</ul>\n<h3 id=\"子元素的增长\"><a href=\"#子元素的增长\" class=\"headerlink\" title=\"子元素的增长\"></a>子元素的增长</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex-grow</span>: <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p><code>flex-grow</code>属性是指当父容器的空间还有空余的时候，子元素主动增长去撑满这些<strong>空余空间</strong>(<strong>行模式下是宽度，列模式下是高度</strong>)，而占这些空余空间的比列就是由<code>flex-grow</code>的值来决定的，默认不设置<code>flex-grow</code>的情况下，值为<code>0</code>，子元素不会主动增长</p>\n<p>当把所有的子元素的<code>flex-grow</code>都设置成相等 =&gt; <code>[ a-a-a b-b-b c-c-c]</code></p>\n<p>或者中间的子元素的<code>flex-grow</code>是两边的子元素<code>flex-grow</code>的两倍 =&gt; <code>[ a-a b-b-b-b c-c]</code></p>\n<h3 id=\"子元素的收缩\"><a href=\"#子元素的收缩\" class=\"headerlink\" title=\"子元素的收缩\"></a>子元素的收缩</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex-shrink</span>: <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p><code>flex-shrink</code>属性和<code>flex-grow</code>属性相似，只不过作用在于收缩的时候，<code>flex-shrink</code>越大的子元素在收缩的时候收缩的高度/宽度更大，默认不设置<code>flex-shrink</code>的情况下，值为<code>1</code>，子元素收缩且收缩比例为<code>1</code></p>\n<p>中间的子元素的<code>flex-shrink</code>是两边子元素<code>flex-shrink</code>的两倍 :</p>\n<p><code>[ a-a-a-a-a-a b-b-b-b-b-b c-c-c-c-c-c- ]</code>  -&gt;  <code>[ a-a-a-a b-b c-c-c-c ]</code></p>\n<h3 id=\"子元素的宽度-高度\"><a href=\"#子元素的宽度-高度\" class=\"headerlink\" title=\"子元素的宽度/高度\"></a>子元素的宽度/高度</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex-basis</span>: <span class=\"number\">200px</span>;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>行模式 =&gt; <code>flex-basis</code>控制子元素的宽度</li>\n<li>列模式 =&gt; <code>flex-basis</code>控制子元素的高度</li>\n</ul>\n<p><strong>[什么是行模式和列模式？](#### 行模式&amp;列模式)</strong></p>\n<ul>\n<li>行模式下，如果设置了<code>flex-basis</code>，则子元素设置的<code>width</code>属性不会生效，<code>flex-basis</code>没有设置的情况下默认值为<code>auto</code>，也就是由内容决定</li>\n<li>列模式下，如果设置了<code>flex-basis</code>，则子元素设置的<code>height</code>属性不会生效，<code>flex-basis</code>没有设置的情况下默认值为<code>auto</code>，也就是由内容决定</li>\n</ul>\n<blockquote>\n<p>但是，虽然<code>width/height</code>属性会被覆盖，我们依然可以用<code>min-width/min-height</code>来限制最小宽高</p>\n</blockquote>\n<h3 id=\"子元素的flex属性\"><a href=\"#子元素的flex属性\" class=\"headerlink\" title=\"子元素的flex属性\"></a>子元素的flex属性</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex</span>: <span class=\"number\">0</span> <span class=\"number\">1</span> auto;</span><br></pre></td></tr></table></figure>\n\n<p><code>flex</code>属性的值其实就是<code>flex-grow</code>、<code>flex-shrink</code>、<code>flex-basis</code> 这3种属性的缩写，默认值就是<code>0 1 auto</code>，也就对应</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flex-grow: 0;</span><br><span class=\"line\">flex-shrink: 1;</span><br><span class=\"line\">flex-basis: auto;</span><br></pre></td></tr></table></figure>\n\n<p>即<strong>不增长</strong>，<strong>收缩比例为1</strong>，<strong>宽度/高度为内容的宽度/高度</strong></p>\n","site":{"data":{}},"excerpt":"<p>css中，flex、grid 各种布局都是我们必须掌握的，作为常用功能又强大的flex布局你还没学会吗，全文没有一张图，用最通俗易懂的语言教你怎么用css中的flex布局。</p>","more":"<h2 id=\"父容器属性\"><a href=\"#父容器属性\" class=\"headerlink\" title=\"父容器属性\"></a>父容器属性</h2><h3 id=\"开启flex\"><a href=\"#开启flex\" class=\"headerlink\" title=\"开启flex\"></a>开启flex</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">display</span>: flex;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"控制子元素水平方向对齐\"><a href=\"#控制子元素水平方向对齐\" class=\"headerlink\" title=\"控制子元素水平方向对齐\"></a>控制子元素水平方向对齐</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">justify-content</span>: flex-start/center/flex-end/space-between/space-around/space-evenly;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>flex-start/center/flex-end</code> 子元素之间没有留白</p>\n<p><code>space-between/space-around/space-evenly</code> 子元素之间留白相等</p>\n</blockquote>\n<ul>\n<li><code>flex-start</code> =&gt; <code>[ a b c ######## ]</code></li>\n<li><code>center</code> =&gt; <code>[ #### a b c #### ]</code></li>\n<li><code>flex-end</code> =&gt; <code>[ ######## a b c ]</code></li>\n<li><code>space-between</code> =&gt; <code>[ a ### b ### c ]</code>  (两端无留白)</li>\n<li><code>space -evenly</code> =&gt; <code>[ ## a ## b ## c ## ]</code> (两端留白和子元素之间留白相等)</li>\n<li><code>space-around</code> =&gt; <code>[ # a ###  b ### c # ] </code> (两端留白是子元素之间留白的一半)</li>\n</ul>\n<blockquote>\n<p><strong>以上是针对于父容器的<code>flex-direction</code>属性为行模式的时候</strong></p>\n<p><strong>列模式时，<code>justify-content</code>和<code>align-items</code>的作用倒转过来，分别是</strong></p>\n<ul>\n<li><strong><code>justify-content</code> =&gt; 控制垂直方向对齐</strong></li>\n<li><strong><code>align-items</code> =&gt; 控制水平方向对齐</strong></li>\n</ul>\n</blockquote>\n<p><strong>[什么是行模式和列模式？](#### 行模式&amp;列模式)</strong></p>\n<h3 id=\"控制子元素垂直方向对齐\"><a href=\"#控制子元素垂直方向对齐\" class=\"headerlink\" title=\"控制子元素垂直方向对齐\"></a>控制子元素垂直方向对齐</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">align-items</span>: flex-start/center/flex-end/stretch/baseline;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>flex-start/center/flex-end</code> 和上边类似，就是方向换成垂直方向</li>\n<li><code>baseline</code> =&gt; 按照文字基线对齐</li>\n<li><code>stretch</code> =&gt; 子元素拉伸并在垂直方向铺满父容器</li>\n</ul>\n<blockquote>\n<p><strong>以上是针对于父容器的<code>flex-direction</code>属性为行模式的时候</strong></p>\n<p><strong>列模式时，<code>justify-content</code>和<code>align-items</code>的作用倒转过来，分别是</strong></p>\n<ul>\n<li><strong><code>justify-content</code> =&gt; 控制垂直方向对齐</strong></li>\n<li><strong><code>align-items</code> =&gt; 控制水平方向对齐</strong></li>\n</ul>\n</blockquote>\n<p><strong>[什么是行模式和列模式？](#### 行模式&amp;列模式)</strong></p>\n<h3 id=\"控制子元素排列方式\"><a href=\"#控制子元素排列方式\" class=\"headerlink\" title=\"控制子元素排列方式\"></a>控制子元素排列方式</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex-direction</span>: row/column/row-reverse/column-reverse;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>row</code> =&gt; 按行排列从左到右</li>\n<li><code>row-reverse</code> =&gt; 按行排列从右到左</li>\n<li><code>column</code> =&gt; 按列从上到下，子元素的宽度不需要撑满父容器</li>\n<li><code>column-reverse</code> =&gt; 按列从下到上，子元素的宽度不需要撑满父容器</li>\n</ul>\n<h4 id=\"行模式-amp-列模式\"><a href=\"#行模式-amp-列模式\" class=\"headerlink\" title=\"行模式&amp;列模式\"></a>行模式&amp;列模式</h4><ul>\n<li>父容器的<code>flex-direction</code>属性为<code>row</code>/<code>row-reverse</code> =&gt; <strong>行模式</strong></li>\n<li>父容器的<code>flex-direction</code>属性为<code>column</code>/<code>column-reverse</code> =&gt; <strong>列模式</strong></li>\n</ul>\n<h3 id=\"控制子元素的折行\"><a href=\"#控制子元素的折行\" class=\"headerlink\" title=\"控制子元素的折行\"></a>控制子元素的折行</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex-wrap</span>: wrap/nowrap;</span><br><span class=\"line\"><span class=\"attribute\">align-content</span>: flex-start/flex-end/center/space-between/space-evenly/space-around;</span><br></pre></td></tr></table></figure>\n\n<p>当<code>flex-wrap</code>的值为<code>wrap</code>的时候，折行的部分由<code>align-content</code>的属性来控制，其值的作用可参考<code>justify-conten</code>，当然了，折行发生的条件是子元素的宽度固定且不能收缩，并且超过了父容器的宽度</p>\n<hr>\n<h2 id=\"子元素属性\"><a href=\"#子元素属性\" class=\"headerlink\" title=\"子元素属性\"></a>子元素属性</h2><h3 id=\"子元素覆盖父容器的排列方式\"><a href=\"#子元素覆盖父容器的排列方式\" class=\"headerlink\" title=\"子元素覆盖父容器的排列方式\"></a>子元素覆盖父容器的排列方式</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">align-seft: flex-start/center/flex-end/stretch/baseline;</span><br><span class=\"line\"><span class=\"attribute\">margin</span>: auto;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>align-seft</code> =&gt; 覆盖父容器设置的<code>align-items</code>属性</li>\n<li><code>margin</code> =&gt; 覆盖父容器的<code>justify-content</code>属性</li>\n</ul>\n<h3 id=\"子元素的空间占比\"><a href=\"#子元素的空间占比\" class=\"headerlink\" title=\"子元素的空间占比\"></a>子元素的空间占比</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex</span>: <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>flex</code>属性的值表示该子元素占父容器的空间比，总容量是所有子元素的<code>flex</code>属性和</li>\n</ul>\n<h3 id=\"子元素的增长\"><a href=\"#子元素的增长\" class=\"headerlink\" title=\"子元素的增长\"></a>子元素的增长</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex-grow</span>: <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p><code>flex-grow</code>属性是指当父容器的空间还有空余的时候，子元素主动增长去撑满这些<strong>空余空间</strong>(<strong>行模式下是宽度，列模式下是高度</strong>)，而占这些空余空间的比列就是由<code>flex-grow</code>的值来决定的，默认不设置<code>flex-grow</code>的情况下，值为<code>0</code>，子元素不会主动增长</p>\n<p>当把所有的子元素的<code>flex-grow</code>都设置成相等 =&gt; <code>[ a-a-a b-b-b c-c-c]</code></p>\n<p>或者中间的子元素的<code>flex-grow</code>是两边的子元素<code>flex-grow</code>的两倍 =&gt; <code>[ a-a b-b-b-b c-c]</code></p>\n<h3 id=\"子元素的收缩\"><a href=\"#子元素的收缩\" class=\"headerlink\" title=\"子元素的收缩\"></a>子元素的收缩</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex-shrink</span>: <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p><code>flex-shrink</code>属性和<code>flex-grow</code>属性相似，只不过作用在于收缩的时候，<code>flex-shrink</code>越大的子元素在收缩的时候收缩的高度/宽度更大，默认不设置<code>flex-shrink</code>的情况下，值为<code>1</code>，子元素收缩且收缩比例为<code>1</code></p>\n<p>中间的子元素的<code>flex-shrink</code>是两边子元素<code>flex-shrink</code>的两倍 :</p>\n<p><code>[ a-a-a-a-a-a b-b-b-b-b-b c-c-c-c-c-c- ]</code>  -&gt;  <code>[ a-a-a-a b-b c-c-c-c ]</code></p>\n<h3 id=\"子元素的宽度-高度\"><a href=\"#子元素的宽度-高度\" class=\"headerlink\" title=\"子元素的宽度/高度\"></a>子元素的宽度/高度</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex-basis</span>: <span class=\"number\">200px</span>;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>行模式 =&gt; <code>flex-basis</code>控制子元素的宽度</li>\n<li>列模式 =&gt; <code>flex-basis</code>控制子元素的高度</li>\n</ul>\n<p><strong>[什么是行模式和列模式？](#### 行模式&amp;列模式)</strong></p>\n<ul>\n<li>行模式下，如果设置了<code>flex-basis</code>，则子元素设置的<code>width</code>属性不会生效，<code>flex-basis</code>没有设置的情况下默认值为<code>auto</code>，也就是由内容决定</li>\n<li>列模式下，如果设置了<code>flex-basis</code>，则子元素设置的<code>height</code>属性不会生效，<code>flex-basis</code>没有设置的情况下默认值为<code>auto</code>，也就是由内容决定</li>\n</ul>\n<blockquote>\n<p>但是，虽然<code>width/height</code>属性会被覆盖，我们依然可以用<code>min-width/min-height</code>来限制最小宽高</p>\n</blockquote>\n<h3 id=\"子元素的flex属性\"><a href=\"#子元素的flex属性\" class=\"headerlink\" title=\"子元素的flex属性\"></a>子元素的flex属性</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">flex</span>: <span class=\"number\">0</span> <span class=\"number\">1</span> auto;</span><br></pre></td></tr></table></figure>\n\n<p><code>flex</code>属性的值其实就是<code>flex-grow</code>、<code>flex-shrink</code>、<code>flex-basis</code> 这3种属性的缩写，默认值就是<code>0 1 auto</code>，也就对应</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flex-grow: 0;</span><br><span class=\"line\">flex-shrink: 1;</span><br><span class=\"line\">flex-basis: auto;</span><br></pre></td></tr></table></figure>\n\n<p>即<strong>不增长</strong>，<strong>收缩比例为1</strong>，<strong>宽度/高度为内容的宽度/高度</strong></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckv9mzyz200003sw28qfx5vs5","category_id":"ckv9mzyzg00013sw25lxv3vbk","_id":"ckv9mzyzz00043sw26opabq3b"},{"post_id":"ckv9n0329000f3sw2goqq3a5q","category_id":"ckv9n032e000g3sw22iojc74c","_id":"ckv9n032i000j3sw21sudeh0h"},{"post_id":"ckv9n032x000q3sw2augk78hn","category_id":"ckv9n032e000g3sw22iojc74c","_id":"ckv9n0349000s3sw2gv82fxr4"},{"post_id":"ckv9n07kd00133sw24ecu655i","category_id":"ckv9mzyzg00013sw25lxv3vbk","_id":"ckv9n07kh00153sw2d9sx7on3"},{"post_id":"ckv9n0n18001c3sw2fj6lgdbr","category_id":"ckv9r7w47001x3sw26rxg62qv","_id":"ckv9r7w4a00203sw2huwbb8ve"}],"PostTag":[{"post_id":"ckv9n07k3000v3sw2ektn2057","tag_id":"ckv9n07k6000w3sw287cmdio9","_id":"ckv9n07k900103sw21gim0qvr"},{"post_id":"ckv9n07k3000v3sw2ektn2057","tag_id":"ckv9n07k7000y3sw2gqvx2jm6","_id":"ckv9n07k900113sw266coevlz"},{"post_id":"ckv9n07k3000v3sw2ektn2057","tag_id":"ckv9n07k8000z3sw294bs3kbt","_id":"ckv9n07k900123sw227ewgr12"},{"post_id":"ckv9n07kd00133sw24ecu655i","tag_id":"ckv9n07kg00143sw299xo5wbk","_id":"ckv9n07kj00183sw2491b2m96"},{"post_id":"ckv9n07kd00133sw24ecu655i","tag_id":"ckv9n07kh00163sw2db33ahct","_id":"ckv9n07kj00193sw2f4tnab7r"},{"post_id":"ckv9n07kd00133sw24ecu655i","tag_id":"ckv9n07ki00173sw2cbxdfcgb","_id":"ckv9n07kj001a3sw254s2aryt"},{"post_id":"ckv9n0su8001h3sw259mof1ms","tag_id":"ckv9qvby3001n3sw25xp2h8ai","_id":"ckv9qvby4001q3sw2ak924b1h"},{"post_id":"ckv9n0su8001h3sw259mof1ms","tag_id":"ckv9qvby4001p3sw2ds36hi9j","_id":"ckv9qvby4001r3sw2gwvgfa24"},{"post_id":"ckv9r191l001s3sw29gz353cj","tag_id":"ckv9r191n001t3sw2bz392bk3","_id":"ckv9r191o001v3sw201b7432e"},{"post_id":"ckv9r191l001s3sw29gz353cj","tag_id":"ckv9r191n001u3sw21zktaf6y","_id":"ckv9r191o001w3sw22hf94jya"},{"post_id":"ckv9n0n18001c3sw2fj6lgdbr","tag_id":"ckv9r7w48001y3sw2efs26q9b","_id":"ckv9r7w4b00233sw2el4teuxn"},{"post_id":"ckv9n0n18001c3sw2fj6lgdbr","tag_id":"ckv9r7w49001z3sw29zo39dxl","_id":"ckv9r7w4b00243sw21vk0f659"},{"post_id":"ckv9n0n18001c3sw2fj6lgdbr","tag_id":"ckv9r7w4a00213sw22j71bz1f","_id":"ckv9r7w4b00253sw2hl7k3p2j"},{"post_id":"ckv9n0n18001c3sw2fj6lgdbr","tag_id":"ckv9r7w4b00223sw2ghdh7w6u","_id":"ckv9r7w4b00263sw2148scp78"},{"post_id":"ckv9n0sum001i3sw25jd7d0hp","tag_id":"ckv9rac8r00273sw27y3o3rnj","_id":"ckv9rac8s00283sw2citpgoyk"},{"post_id":"ckv9n0n1p001d3sw29n9f9ut5","tag_id":"ckv9qvby4001p3sw2ds36hi9j","_id":"ckv9rc4t900293sw2bouu5mo2"},{"post_id":"ckv9n1nah001k3sw26f2kbu6c","tag_id":"ckv9rexh6002c3sw2eqx983p1","_id":"ckv9rexh8002e3sw26riab3vo"},{"post_id":"ckv9n1nah001k3sw26f2kbu6c","tag_id":"ckv9rexh7002d3sw217s543uv","_id":"ckv9rexh8002f3sw23f5xdbw9"},{"post_id":"ckv9n1naj001l3sw2ai13bxjb","tag_id":"ckv9rexh6002c3sw2eqx983p1","_id":"ckv9rg520002h3sw2fesu3w59"},{"post_id":"ckv9n1naj001l3sw2ai13bxjb","tag_id":"ckv9rg51z002g3sw2ey3p28n7","_id":"ckv9rg520002i3sw25ifu082x"},{"post_id":"ckv9n0n22001e3sw23ku4ey08","tag_id":"ckv9rac8r00273sw27y3o3rnj","_id":"ckv9rkblc002p3sw2anmv2kqt"},{"post_id":"ckv9n032100093sw288kqfidk","tag_id":"ckv9n0324000a3sw2e8v537hl","_id":"ckv9rlr9c002s3sw23tv734ly"},{"post_id":"ckv9n032100093sw288kqfidk","tag_id":"ckv9n0326000c3sw2493lb1km","_id":"ckv9rlr9c002t3sw28tvjb06d"},{"post_id":"ckv9mzyz200003sw28qfx5vs5","tag_id":"ckv9mzyzp00023sw2d9fq8gzt","_id":"ckv9rmlgt002u3sw2hdzvc7ck"},{"post_id":"ckv9mzyz200003sw28qfx5vs5","tag_id":"ckv9mzyzt00033sw2fn0o9nt0","_id":"ckv9rmlgu002v3sw26uwvbnt3"},{"post_id":"ckv9mzyz200003sw28qfx5vs5","tag_id":"ckv9mzz0000053sw23r142s5h","_id":"ckv9rmlgu002w3sw219390w9b"},{"post_id":"ckv9n032x000q3sw2augk78hn","tag_id":"ckv9n0344000r3sw2hapobwok","_id":"ckv9rmsjz002x3sw2h1fr5p81"},{"post_id":"ckv9n032x000q3sw2augk78hn","tag_id":"ckv9n032h000i3sw25zaf18on","_id":"ckv9rmsjz002y3sw270hrgqvh"},{"post_id":"ckv9n0329000f3sw2goqq3a5q","tag_id":"ckv9n032f000h3sw2g80ogcwi","_id":"ckv9rmwks002z3sw22i3012cd"},{"post_id":"ckv9n0329000f3sw2goqq3a5q","tag_id":"ckv9n032h000i3sw25zaf18on","_id":"ckv9rmwks00303sw22a8igzzk"},{"post_id":"ckv9n0329000f3sw2goqq3a5q","tag_id":"ckv9n032i000k3sw25nuzhwxp","_id":"ckv9rmwks00313sw29w0ubmzi"},{"post_id":"ckv9n0329000f3sw2goqq3a5q","tag_id":"ckv9n032l000l3sw2dz0bgrqt","_id":"ckv9rmwks00323sw2cpya2gaq"}],"Tag":[{"name":"Google","_id":"ckv9mzyzp00023sw2d9fq8gzt"},{"name":"CSS","_id":"ckv9mzyzt00033sw2fn0o9nt0"},{"name":"HTML","_id":"ckv9mzz0000053sw23r142s5h"},{"name":"Python","_id":"ckv9n0324000a3sw2e8v537hl"},{"name":"turtle","_id":"ckv9n0326000c3sw2493lb1km"},{"name":"CloudFlare","_id":"ckv9n032f000h3sw2g80ogcwi"},{"name":"Hexo","_id":"ckv9n032h000i3sw25zaf18on"},{"name":"GitHub Page","_id":"ckv9n032i000k3sw25nuzhwxp"},{"name":"GitHub","_id":"ckv9n032l000l3sw2dz0bgrqt"},{"name":"icarus","_id":"ckv9n0344000r3sw2hapobwok"},{"name":"Chrome Extension","_id":"ckv9n07k6000w3sw287cmdio9"},{"name":"Chrome","_id":"ckv9n07k7000y3sw2gqvx2jm6"},{"name":"谷歌浏览器","_id":"ckv9n07k8000z3sw294bs3kbt"},{"name":"Json","_id":"ckv9n07kg00143sw299xo5wbk"},{"name":"Json数组","_id":"ckv9n07kh00163sw2db33ahct"},{"name":"JavaScript","_id":"ckv9n07ki00173sw2cbxdfcgb"},{"name":"express","_id":"ckv9qvby3001n3sw25xp2h8ai"},{"name":"promise","_id":"ckv9qvby4001p3sw2ds36hi9j"},{"name":"css","_id":"ckv9r191n001t3sw2bz392bk3"},{"name":"flex","_id":"ckv9r191n001u3sw21zktaf6y"},{"name":"数据结构","_id":"ckv9r7w48001y3sw2efs26q9b"},{"name":"栈","_id":"ckv9r7w49001z3sw29zo39dxl"},{"name":"队列","_id":"ckv9r7w4a00213sw22j71bz1f"},{"name":"链表","_id":"ckv9r7w4b00223sw2ghdh7w6u"},{"name":"mysql","_id":"ckv9rac8r00273sw27y3o3rnj"},{"name":"vue","_id":"ckv9rexh6002c3sw2eqx983p1"},{"name":"editor.md","_id":"ckv9rexh7002d3sw217s543uv"},{"name":"$nextTick","_id":"ckv9rg51z002g3sw2ey3p28n7"},{"name":"Google,CSS,HTML","_id":"ckv9rhofa002j3sw27i0ea6ek"},{"name":"icarus,Hexo","_id":"ckv9ric2r002l3sw22s7eezgs"},{"name":"CloudFlare,Hexo,GitHub Page,GitHub","_id":"ckv9rj2gq002n3sw26j0jaf30"},{"name":"Python,turtle","_id":"ckv9rldn2002q3sw28o223syz"}]}}